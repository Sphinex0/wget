<!DOCTYPE html>
<html class="client-nojs vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available" lang="en" dir="ltr">
<head>
<meta charset="UTF-8">
<title>LR parser - Wikipedia</title>
<script>(function(){var className="client-js vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available";var cookie=document.cookie.match(/(?:^|; )enwikimwclientpreferences=([^;]+)/);if(cookie){cookie[1].split('%2C').forEach(function(pref){className=className.replace(new RegExp('(^| )'+pref.replace(/-clientpref-\w+$|[^\w-]+/g,'')+'-clientpref-\\w+( |$)'),'$1'+pref+'$2');});}document.documentElement.className=className;}());RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"35fa7b5d-ed67-4e0e-9cab-63570fdd30b4","wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"LR_parser","wgTitle":"LR parser","wgCurRevisionId":1287843227,"wgRevisionId":1287843227,"wgArticleId":18030,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles with short description","Short description is different from Wikidata","Wikipedia articles that are too technical from November 2023","All articles that are too technical","Pages with broken anchors","Pages containing broken anchor template with unsupported parameters","All articles with unsourced statements","Articles with unsourced statements from September 2019","Articles with unsourced statements from June 2012","Parsing algorithms"],"wgPageViewLanguage":"en","wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"LR_parser","wgRelevantArticleId":18030,"wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgNoticeProject":"wikipedia","wgCiteReferencePreviewsActive":false,"wgFlaggedRevsParams":{"tags":{"status":{"levels":1}}},"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgPopupsFlags":0,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgMFDisplayWikibaseDescriptions":{"search":true,"watchlist":true,"tagline":false,"nearby":true},"wgWMESchemaEditAttemptStepOversample":false,"wgWMEPageLength":60000,"wgMetricsPlatformUserExperiments":{"active_experiments":[],"overrides":[],"enrolled":[],"assigned":[],"subject_ids":[],"sampling_units":[]},"wgEditSubmitButtonLabelPublish":true,"wgULSPosition":"interlanguage","wgULSisCompactLinksEnabled":false,"wgVector2022LanguageInHeader":true,"wgULSisLanguageSelectorEmpty":false,"wgWikibaseItemId":"Q1756442","wgCheckUserClientHintsHeadersJsApi":["brands","architecture","bitness","fullVersionList","mobile","model","platform","platformVersion"],"GEHomepageSuggestedEditsEnableTopics":true,"wgGESuggestedEditsTaskTypes":{"taskTypes":["copyedit","link-recommendation"],"unavailableTaskTypes":[]},"wgGETopicsMatchModeEnabled":false,"wgGELevelingUpEnabledForUser":false};
RLSTATE={"ext.globalCssJs.user.styles":"ready","site.styles":"ready","user.styles":"ready","ext.globalCssJs.user":"ready","user":"ready","user.options":"loading","ext.cite.styles":"ready","ext.math.styles":"ready","skins.vector.search.codex.styles":"ready","skins.vector.styles":"ready","skins.vector.icons":"ready","jquery.makeCollapsible.styles":"ready","ext.wikimediamessages.styles":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","wikibase.client.init":"ready"};RLPAGEMODULES=["ext.xLab","ext.cite.ux-enhancements","mediawiki.page.media","site","mediawiki.page.ready","jquery.makeCollapsible","mediawiki.toc","skins.vector.js","ext.centralNotice.geoIP","ext.centralNotice.startUp","ext.gadget.ReferenceTooltips","ext.gadget.switcher","ext.urlShortener.toolbar","ext.centralauth.centralautologin","mmv.bootstrap","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.echo.centralauth","ext.eventLogging","ext.wikimediaEvents","ext.navigationTiming","ext.uls.interface","ext.cx.eventlogging.campaigns","ext.cx.uls.quick.actions","wikibase.client.vector-2022","ext.checkUser.clientHints","ext.quicksurveys.init","ext.growthExperiments.SuggestedEditSession"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.impl(function(){return["user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
}];});});</script>
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=ext.cite.styles%7Cext.math.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediamessages.styles%7Cjquery.makeCollapsible.styles%7Cskins.vector.icons%2Cstyles%7Cskins.vector.search.codex.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector-2022">
<script async="" src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector-2022"></script>
<meta name="ResourceLoaderDynamicStyles" content="">
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector-2022">
<meta name="generator" content="MediaWiki 1.45.0-wmf.12">
<meta name="referrer" content="origin">
<meta name="referrer" content="origin-when-cross-origin">
<meta name="robots" content="max-image-preview:standard">
<meta name="format-detection" content="telephone=no">
<meta name="viewport" content="width=1120">
<meta property="og:title" content="LR parser - Wikipedia">
<meta property="og:type" content="website">
<link rel="preconnect" href="//upload.wikimedia.org">
<link rel="alternate" media="only screen and (max-width: 640px)" href="//en.m.wikipedia.org/wiki/LR_parser">
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=LR_parser&amp;action=edit">
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png">
<link rel="icon" href="/static/favicon/wikipedia.ico">
<link rel="search" type="application/opensearchdescription+xml" href="/w/rest.php/v1/search" title="Wikipedia (en)">
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd">
<link rel="canonical" href="https://en.wikipedia.org/wiki/LR_parser">
<link rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/deed.en">
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<link rel="dns-prefetch" href="auth.wikimedia.org">
</head>
<body class="skin--responsive skin-vector skin-vector-search-vue mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-LR_parser rootpage-LR_parser skin-vector-2022 action-view"><a class="mw-jump-link" href="#bodyContent">Jump to content</a>
<div class="vector-header-container">
	<header class="vector-header mw-header no-font-mode-scale">
		<div class="vector-header-start">
			<nav class="vector-main-menu-landmark" aria-label="Site">
				
<div id="vector-main-menu-dropdown" class="vector-dropdown vector-main-menu-dropdown vector-button-flush-left vector-button-flush-right"  title="Main menu" >
	<input type="checkbox" id="vector-main-menu-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-main-menu-dropdown" class="vector-dropdown-checkbox "  aria-label="Main menu"  >
	<label id="vector-main-menu-dropdown-label" for="vector-main-menu-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-menu mw-ui-icon-wikimedia-menu"></span>

<span class="vector-dropdown-label-text">Main menu</span>
	</label>
	<div class="vector-dropdown-content">


				<div id="vector-main-menu-unpinned-container" class="vector-unpinned-container">
		
<div id="vector-main-menu" class="vector-main-menu vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-main-menu-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="main-menu-pinned"
	data-pinnable-element-id="vector-main-menu"
	data-pinned-container-id="vector-main-menu-pinned-container"
	data-unpinned-container-id="vector-main-menu-unpinned-container"
>
	<div class="vector-pinnable-header-label">Main menu</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-main-menu.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-main-menu.unpin">hide</button>
</div>

	
<div id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation"  >
	<div class="vector-menu-heading">
		Navigation
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-mainpage-description" class="mw-list-item"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"><span>Main page</span></a></li><li id="n-contents" class="mw-list-item"><a href="/wiki/Wikipedia:Contents" title="Guides to browsing Wikipedia"><span>Contents</span></a></li><li id="n-currentevents" class="mw-list-item"><a href="/wiki/Portal:Current_events" title="Articles related to current events"><span>Current events</span></a></li><li id="n-randompage" class="mw-list-item"><a href="/wiki/Special:Random" title="Visit a randomly selected article [x]" accesskey="x"><span>Random article</span></a></li><li id="n-aboutsite" class="mw-list-item"><a href="/wiki/Wikipedia:About" title="Learn about Wikipedia and how it works"><span>About Wikipedia</span></a></li><li id="n-contactpage" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia"><span>Contact us</span></a></li>
		</ul>
		
	</div>
</div>

	
	
<div id="p-interaction" class="vector-menu mw-portlet mw-portlet-interaction"  >
	<div class="vector-menu-heading">
		Contribute
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-help" class="mw-list-item"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia"><span>Help</span></a></li><li id="n-introduction" class="mw-list-item"><a href="/wiki/Help:Introduction" title="Learn how to edit Wikipedia"><span>Learn to edit</span></a></li><li id="n-portal" class="mw-list-item"><a href="/wiki/Wikipedia:Community_portal" title="The hub for editors"><span>Community portal</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="/wiki/Special:RecentChanges" title="A list of recent changes to Wikipedia [r]" accesskey="r"><span>Recent changes</span></a></li><li id="n-upload" class="mw-list-item"><a href="/wiki/Wikipedia:File_upload_wizard" title="Add images or other media for use on Wikipedia"><span>Upload file</span></a></li><li id="n-specialpages" class="mw-list-item"><a href="/wiki/Special:SpecialPages"><span>Special pages</span></a></li>
		</ul>
		
	</div>
</div>

</div>

				</div>

	</div>
</div>

		</nav>
			
<a href="/wiki/Main_Page" class="mw-logo">
	<img class="mw-logo-icon" src="/static/images/icons/wikipedia.png" alt="" aria-hidden="true" height="50" width="50">
	<span class="mw-logo-container skin-invert">
		<img class="mw-logo-wordmark" alt="Wikipedia" src="/static/images/mobile/copyright/wikipedia-wordmark-en.svg" style="width: 7.5em; height: 1.125em;">
		<img class="mw-logo-tagline" alt="The Free Encyclopedia" src="/static/images/mobile/copyright/wikipedia-tagline-en.svg" width="117" height="13" style="width: 7.3125em; height: 0.8125em;">
	</span>
</a>

		</div>
		<div class="vector-header-end">
			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-collapses vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<a href="/wiki/Special:Search" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only search-toggle" title="Search Wikipedia [f]" accesskey="f"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
	</a>
	<div class="vector-typeahead-search-container">
		<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail cdx-typeahead-search--auto-expand-width">
			<form action="/w/index.php" id="searchform" class="cdx-search-input cdx-search-input--has-end-button">
				<div id="simpleSearch" class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
					<div class="cdx-text-input cdx-text-input--has-start-icon">
						<input
							class="cdx-text-input__input mw-searchInput" autocomplete="off"
							 type="search" name="search" placeholder="Search Wikipedia" aria-label="Search Wikipedia" autocapitalize="sentences" spellcheck="false" title="Search Wikipedia [f]" accesskey="f" id="searchInput"
							>
						<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
					</div>
					<input type="hidden" name="title" value="Special:Search">
				</div>
				<button class="cdx-button cdx-search-input__end-button">Search</button>
			</form>
		</div>
	</div>
</div>

			<nav class="vector-user-links vector-user-links-wide" aria-label="Personal tools">
	<div class="vector-user-links-main">
	
<div id="p-vector-user-menu-preferences" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-userpage" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	<nav class="vector-appearance-landmark" aria-label="Appearance">
		
<div id="vector-appearance-dropdown" class="vector-dropdown "  title="Change the appearance of the page&#039;s font size, width, and color" >
	<input type="checkbox" id="vector-appearance-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-appearance-dropdown" class="vector-dropdown-checkbox "  aria-label="Appearance"  >
	<label id="vector-appearance-dropdown-label" for="vector-appearance-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-appearance mw-ui-icon-wikimedia-appearance"></span>

<span class="vector-dropdown-label-text">Appearance</span>
	</label>
	<div class="vector-dropdown-content">


			<div id="vector-appearance-unpinned-container" class="vector-unpinned-container">
				
			</div>
		
	</div>
</div>

	</nav>
	
<div id="p-vector-user-menu-notifications" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-overflow" class="vector-menu mw-portlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			<li id="pt-sitesupport-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en" class=""><span>Donate</span></a>
</li>
<li id="pt-createaccount-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:CreateAccount&amp;returnto=LR+parser" title="You are encouraged to create an account and log in; however, it is not mandatory" class=""><span>Create account</span></a>
</li>
<li id="pt-login-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:UserLogin&amp;returnto=LR+parser" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o" class=""><span>Log in</span></a>
</li>

			
		</ul>
		
	</div>
</div>

	</div>
	
<div id="vector-user-links-dropdown" class="vector-dropdown vector-user-menu vector-button-flush-right vector-user-menu-logged-out"  title="Log in and more options" >
	<input type="checkbox" id="vector-user-links-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-user-links-dropdown" class="vector-dropdown-checkbox "  aria-label="Personal tools"  >
	<label id="vector-user-links-dropdown-label" for="vector-user-links-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-ellipsis mw-ui-icon-wikimedia-ellipsis"></span>

<span class="vector-dropdown-label-text">Personal tools</span>
	</label>
	<div class="vector-dropdown-content">


		
<div id="p-personal" class="vector-menu mw-portlet mw-portlet-personal user-links-collapsible-item"  title="User menu" >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-sitesupport" class="user-links-collapsible-item mw-list-item"><a href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en"><span>Donate</span></a></li><li id="pt-createaccount" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=LR+parser" title="You are encouraged to create an account and log in; however, it is not mandatory"><span class="vector-icon mw-ui-icon-userAdd mw-ui-icon-wikimedia-userAdd"></span> <span>Create account</span></a></li><li id="pt-login" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=LR+parser" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o"><span class="vector-icon mw-ui-icon-logIn mw-ui-icon-wikimedia-logIn"></span> <span>Log in</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-user-menu-anon-editor" class="vector-menu mw-portlet mw-portlet-user-menu-anon-editor"  >
	<div class="vector-menu-heading">
		Pages for logged out editors <a href="/wiki/Help:Introduction" aria-label="Learn more about editing"><span>learn more</span></a>
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-anoncontribs" class="mw-list-item"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y"><span>Contributions</span></a></li><li id="pt-anontalk" class="mw-list-item"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

	
	</div>
</div>

</nav>

		</div>
	</header>
</div>
<div class="mw-page-container">
	<div class="mw-page-container-inner">
		<div class="vector-sitenotice-container">
			<div id="siteNotice"><!-- CentralNotice --></div>
		</div>
		<div class="vector-column-start">
			<div class="vector-main-menu-container">
		<div id="mw-navigation">
			<nav id="mw-panel" class="vector-main-menu-landmark" aria-label="Site">
				<div id="vector-main-menu-pinned-container" class="vector-pinned-container">
				
				</div>
		</nav>
		</div>
	</div>
	<div class="vector-sticky-pinned-container">
				<nav id="mw-panel-toc" aria-label="Contents" data-event-name="ui.sidebar-toc" class="mw-table-of-contents-container vector-toc-landmark">
					<div id="vector-toc-pinned-container" class="vector-pinned-container">
					<div id="vector-toc" class="vector-toc vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-toc-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="toc-pinned"
	data-pinnable-element-id="vector-toc"
	
	
>
	<h2 class="vector-pinnable-header-label">Contents</h2>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-toc.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-toc.unpin">hide</button>
</div>


	<ul class="vector-toc-contents" id="mw-panel-toc-list">
		<li id="toc-mw-content-text"
			class="vector-toc-list-item vector-toc-level-1">
			<a href="#" class="vector-toc-link">
				<div class="vector-toc-text">(Top)</div>
			</a>
		</li>
		<li id="toc-Overview"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#Overview">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">1</span>
				<span>Overview</span>
			</div>
		</a>
		
			<button aria-controls="toc-Overview-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Overview subsection</span>
			</button>
		
		<ul id="toc-Overview-sublist" class="vector-toc-list">
			<li id="toc-Bottom-up_parse_tree_for_example_A_*_2_+_1"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Bottom-up_parse_tree_for_example_A_*_2_+_1">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.1</span>
					<span>Bottom-up parse tree for example A * 2 + 1</span>
				</div>
			</a>
			
			<ul id="toc-Bottom-up_parse_tree_for_example_A_*_2_+_1-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Shift_and_reduce_actions"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Shift_and_reduce_actions">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.2</span>
					<span>Shift and reduce actions</span>
				</div>
			</a>
			
			<ul id="toc-Shift_and_reduce_actions-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Bottom-up_parse_stack"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Bottom-up_parse_stack">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.3</span>
					<span>Bottom-up parse stack</span>
				</div>
			</a>
			
			<ul id="toc-Bottom-up_parse_stack-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Bottom-up_parse_steps_for_example_A_*_2_+_1"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Bottom-up_parse_steps_for_example_A_*_2_+_1">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.4</span>
					<span>Bottom-up parse steps for example A * 2 + 1</span>
				</div>
			</a>
			
			<ul id="toc-Bottom-up_parse_steps_for_example_A_*_2_+_1-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-LR_parse_steps_for_example_A_*_2_+_1"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#LR_parse_steps_for_example_A_*_2_+_1">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.5</span>
					<span>LR parse steps for example A * 2 + 1</span>
				</div>
			</a>
			
			<ul id="toc-LR_parse_steps_for_example_A_*_2_+_1-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Grammar_for_the_example_A_*_2_+_1"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Grammar_for_the_example_A_*_2_+_1">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.6</span>
					<span>Grammar for the example A * 2 + 1</span>
				</div>
			</a>
			
			<ul id="toc-Grammar_for_the_example_A_*_2_+_1-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Parse_table_for_the_example_grammar"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Parse_table_for_the_example_grammar">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.7</span>
					<span>Parse table for the example grammar</span>
				</div>
			</a>
			
			<ul id="toc-Parse_table_for_the_example_grammar-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-LR_parser_loop"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#LR_parser_loop">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">1.8</span>
					<span>LR parser loop</span>
				</div>
			</a>
			
			<ul id="toc-LR_parser_loop-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-LR_generator_analysis"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#LR_generator_analysis">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">2</span>
				<span>LR generator analysis</span>
			</div>
		</a>
		
			<button aria-controls="toc-LR_generator_analysis-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle LR generator analysis subsection</span>
			</button>
		
		<ul id="toc-LR_generator_analysis-sublist" class="vector-toc-list">
			<li id="toc-LR_states"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#LR_states">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.1</span>
					<span>LR states</span>
				</div>
			</a>
			
			<ul id="toc-LR_states-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Finite_state_machine"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Finite_state_machine">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2</span>
					<span>Finite state machine</span>
				</div>
			</a>
			
			<ul id="toc-Finite_state_machine-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Lookahead_sets"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Lookahead_sets">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.3</span>
					<span>Lookahead sets</span>
				</div>
			</a>
			
			<ul id="toc-Lookahead_sets-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Syntax_error_recovery"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Syntax_error_recovery">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.4</span>
					<span>Syntax error recovery</span>
				</div>
			</a>
			
			<ul id="toc-Syntax_error_recovery-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Variants_of_LR_parsers"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Variants_of_LR_parsers">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.5</span>
					<span>Variants of LR parsers</span>
				</div>
			</a>
			
			<ul id="toc-Variants_of_LR_parsers-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Theory"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Theory">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.6</span>
					<span>Theory</span>
				</div>
			</a>
			
			<ul id="toc-Theory-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-Additional_example_1_+_1"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#Additional_example_1_+_1">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">3</span>
				<span>Additional example 1 + 1</span>
			</div>
		</a>
		
			<button aria-controls="toc-Additional_example_1_+_1-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Additional example 1 + 1 subsection</span>
			</button>
		
		<ul id="toc-Additional_example_1_+_1-sublist" class="vector-toc-list">
			<li id="toc-Action_and_goto_tables"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Action_and_goto_tables">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.1</span>
					<span>Action and goto tables</span>
				</div>
			</a>
			
			<ul id="toc-Action_and_goto_tables-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Parsing_steps"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Parsing_steps">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.2</span>
					<span>Parsing steps</span>
				</div>
			</a>
			
			<ul id="toc-Parsing_steps-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Walkthrough"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Walkthrough">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.3</span>
					<span>Walkthrough</span>
				</div>
			</a>
			
			<ul id="toc-Walkthrough-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-Constructing_LR(0)_parsing_tables"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#Constructing_LR(0)_parsing_tables">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">4</span>
				<span>Constructing LR(0) parsing tables</span>
			</div>
		</a>
		
			<button aria-controls="toc-Constructing_LR(0)_parsing_tables-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Constructing LR(0) parsing tables subsection</span>
			</button>
		
		<ul id="toc-Constructing_LR(0)_parsing_tables-sublist" class="vector-toc-list">
			<li id="toc-Items"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Items">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.1</span>
					<span>Items</span>
				</div>
			</a>
			
			<ul id="toc-Items-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Item_sets"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Item_sets">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.2</span>
					<span>Item sets</span>
				</div>
			</a>
			
			<ul id="toc-Item_sets-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Extension_of_Item_Set_by_expansion_of_non-terminals"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Extension_of_Item_Set_by_expansion_of_non-terminals">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.3</span>
					<span>Extension of Item Set by expansion of non-terminals</span>
				</div>
			</a>
			
			<ul id="toc-Extension_of_Item_Set_by_expansion_of_non-terminals-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Closure_of_item_sets"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Closure_of_item_sets">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.4</span>
					<span>Closure of item sets</span>
				</div>
			</a>
			
			<ul id="toc-Closure_of_item_sets-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Augmented_grammar"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Augmented_grammar">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.5</span>
					<span>Augmented grammar</span>
				</div>
			</a>
			
			<ul id="toc-Augmented_grammar-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-Table_construction"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#Table_construction">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">5</span>
				<span>Table construction</span>
			</div>
		</a>
		
			<button aria-controls="toc-Table_construction-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Table construction subsection</span>
			</button>
		
		<ul id="toc-Table_construction-sublist" class="vector-toc-list">
			<li id="toc-Finding_the_reachable_item_sets_and_the_transitions_between_them"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Finding_the_reachable_item_sets_and_the_transitions_between_them">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">5.1</span>
					<span>Finding the reachable item sets and the transitions between them</span>
				</div>
			</a>
			
			<ul id="toc-Finding_the_reachable_item_sets_and_the_transitions_between_them-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Constructing_the_action_and_goto_tables"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Constructing_the_action_and_goto_tables">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">5.2</span>
					<span>Constructing the action and goto tables</span>
				</div>
			</a>
			
			<ul id="toc-Constructing_the_action_and_goto_tables-sublist" class="vector-toc-list">
				<li id="toc-A_note_about_LR(0)_versus_SLR_and_LALR_parsing"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#A_note_about_LR(0)_versus_SLR_and_LALR_parsing">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">5.2.1</span>
					<span>A note about LR(0) versus SLR and LALR parsing</span>
				</div>
			</a>
			
			<ul id="toc-A_note_about_LR(0)_versus_SLR_and_LALR_parsing-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
		</li>
		<li id="toc-Conflicts_in_the_constructed_tables"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Conflicts_in_the_constructed_tables">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">5.3</span>
					<span>Conflicts in the constructed tables</span>
				</div>
			</a>
			
			<ul id="toc-Conflicts_in_the_constructed_tables-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-See_also"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#See_also">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">6</span>
				<span>See also</span>
			</div>
		</a>
		
		<ul id="toc-See_also-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-References"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#References">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">7</span>
				<span>References</span>
			</div>
		</a>
		
		<ul id="toc-References-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-Further_reading"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#Further_reading">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">8</span>
				<span>Further reading</span>
			</div>
		</a>
		
		<ul id="toc-Further_reading-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-External_links"
		class="vector-toc-list-item vector-toc-level-1">
		<a class="vector-toc-link" href="#External_links">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">9</span>
				<span>External links</span>
			</div>
		</a>
		
		<ul id="toc-External_links-sublist" class="vector-toc-list">
		</ul>
	</li>
</ul>
</div>

					</div>
		</nav>
			</div>
		</div>
		<div class="mw-content-container">
			<main id="content" class="mw-body">
				<header class="mw-body-header vector-page-titlebar no-font-mode-scale">
					<nav aria-label="Contents" class="vector-toc-landmark">
						
<div id="vector-page-titlebar-toc" class="vector-dropdown vector-page-titlebar-toc vector-button-flush-left"  title="Table of Contents" >
	<input type="checkbox" id="vector-page-titlebar-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-titlebar-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
	<label id="vector-page-titlebar-toc-label" for="vector-page-titlebar-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
	</label>
	<div class="vector-dropdown-content">


							<div id="vector-page-titlebar-toc-unpinned-container" class="vector-unpinned-container">
			</div>
		
	</div>
</div>

					</nav>
					<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">LR parser</span></h1>
							
<div id="p-lang-btn" class="vector-dropdown mw-portlet mw-portlet-lang"  >
	<input type="checkbox" id="p-lang-btn-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-p-lang-btn" class="vector-dropdown-checkbox mw-interlanguage-selector" aria-label="Go to an article in another language. Available in 14 languages"   >
	<label id="p-lang-btn-label" for="p-lang-btn-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive mw-portlet-lang-heading-14" aria-hidden="true"  ><span class="vector-icon mw-ui-icon-language-progressive mw-ui-icon-wikimedia-language-progressive"></span>

<span class="vector-dropdown-label-text">14 languages</span>
	</label>
	<div class="vector-dropdown-content">

		<div class="vector-menu-content">
			
			<ul class="vector-menu-content-list">
				
				<li class="interlanguage-link interwiki-ar mw-list-item"><a href="https://ar.wikipedia.org/wiki/%D9%85%D8%AC%D8%B2%D8%A6_%D9%8A%D8%B3%D8%A7%D8%B1_%D9%8A%D9%85%D9%8A%D9%86" title="مجزئ يسار يمين – Arabic" lang="ar" hreflang="ar" data-title="مجزئ يسار يمين" data-language-autonym="العربية" data-language-local-name="Arabic" class="interlanguage-link-target"><span>العربية</span></a></li><li class="interlanguage-link interwiki-cs mw-list-item"><a href="https://cs.wikipedia.org/wiki/LR_syntaktick%C3%BD_analyz%C3%A1tor" title="LR syntaktický analyzátor – Czech" lang="cs" hreflang="cs" data-title="LR syntaktický analyzátor" data-language-autonym="Čeština" data-language-local-name="Czech" class="interlanguage-link-target"><span>Čeština</span></a></li><li class="interlanguage-link interwiki-de mw-list-item"><a href="https://de.wikipedia.org/wiki/LR-Parser" title="LR-Parser – German" lang="de" hreflang="de" data-title="LR-Parser" data-language-autonym="Deutsch" data-language-local-name="German" class="interlanguage-link-target"><span>Deutsch</span></a></li><li class="interlanguage-link interwiki-es mw-list-item"><a href="https://es.wikipedia.org/wiki/Analizador_sint%C3%A1ctico_LR" title="Analizador sintáctico LR – Spanish" lang="es" hreflang="es" data-title="Analizador sintáctico LR" data-language-autonym="Español" data-language-local-name="Spanish" class="interlanguage-link-target"><span>Español</span></a></li><li class="interlanguage-link interwiki-fa mw-list-item"><a href="https://fa.wikipedia.org/wiki/%D8%AA%D8%AC%D8%B2%DB%8C%D9%87%E2%80%8C%DA%A9%D9%86%D9%86%D8%AF%D9%87_%D8%A7%D9%84%E2%80%8C%D8%A2%D8%B1" title="تجزیه‌کننده ال‌آر – Persian" lang="fa" hreflang="fa" data-title="تجزیه‌کننده ال‌آر" data-language-autonym="فارسی" data-language-local-name="Persian" class="interlanguage-link-target"><span>فارسی</span></a></li><li class="interlanguage-link interwiki-fr mw-list-item"><a href="https://fr.wikipedia.org/wiki/Analyseur_LR" title="Analyseur LR – French" lang="fr" hreflang="fr" data-title="Analyseur LR" data-language-autonym="Français" data-language-local-name="French" class="interlanguage-link-target"><span>Français</span></a></li><li class="interlanguage-link interwiki-ko mw-list-item"><a href="https://ko.wikipedia.org/wiki/LR_%ED%8C%8C%EC%84%9C" title="LR 파서 – Korean" lang="ko" hreflang="ko" data-title="LR 파서" data-language-autonym="한국어" data-language-local-name="Korean" class="interlanguage-link-target"><span>한국어</span></a></li><li class="interlanguage-link interwiki-it mw-list-item"><a href="https://it.wikipedia.org/wiki/Parser_LR" title="Parser LR – Italian" lang="it" hreflang="it" data-title="Parser LR" data-language-autonym="Italiano" data-language-local-name="Italian" class="interlanguage-link-target"><span>Italiano</span></a></li><li class="interlanguage-link interwiki-ja mw-list-item"><a href="https://ja.wikipedia.org/wiki/LR%E6%B3%95" title="LR法 – Japanese" lang="ja" hreflang="ja" data-title="LR法" data-language-autonym="日本語" data-language-local-name="Japanese" class="interlanguage-link-target"><span>日本語</span></a></li><li class="interlanguage-link interwiki-no mw-list-item"><a href="https://no.wikipedia.org/wiki/LR-parser" title="LR-parser – Norwegian Bokmål" lang="nb" hreflang="nb" data-title="LR-parser" data-language-autonym="Norsk bokmål" data-language-local-name="Norwegian Bokmål" class="interlanguage-link-target"><span>Norsk bokmål</span></a></li><li class="interlanguage-link interwiki-pl mw-list-item"><a href="https://pl.wikipedia.org/wiki/Parser_LR" title="Parser LR – Polish" lang="pl" hreflang="pl" data-title="Parser LR" data-language-autonym="Polski" data-language-local-name="Polish" class="interlanguage-link-target"><span>Polski</span></a></li><li class="interlanguage-link interwiki-pt mw-list-item"><a href="https://pt.wikipedia.org/wiki/Analisador_sint%C3%A1tico_LR" title="Analisador sintático LR – Portuguese" lang="pt" hreflang="pt" data-title="Analisador sintático LR" data-language-autonym="Português" data-language-local-name="Portuguese" class="interlanguage-link-target"><span>Português</span></a></li><li class="interlanguage-link interwiki-ru mw-list-item"><a href="https://ru.wikipedia.org/wiki/LR-%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%82%D0%BE%D1%80" title="LR-анализатор – Russian" lang="ru" hreflang="ru" data-title="LR-анализатор" data-language-autonym="Русский" data-language-local-name="Russian" class="interlanguage-link-target"><span>Русский</span></a></li><li class="interlanguage-link interwiki-zh mw-list-item"><a href="https://zh.wikipedia.org/wiki/LR%E5%89%96%E6%9E%90%E5%99%A8" title="LR剖析器 – Chinese" lang="zh" hreflang="zh" data-title="LR剖析器" data-language-autonym="中文" data-language-local-name="Chinese" class="interlanguage-link-target"><span>中文</span></a></li>
			</ul>
			<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q1756442#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>
		</div>

	</div>
</div>
</header>
				<div class="vector-page-toolbar vector-feature-custom-font-size-clientpref--excluded">
					<div class="vector-page-toolbar-container">
						<div id="left-navigation">
							<nav aria-label="Namespaces">
								
<div id="p-associated-pages" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-associated-pages"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-nstab-main" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/LR_parser" title="View the content page [c]" accesskey="c"><span>Article</span></a></li><li id="ca-talk" class="vector-tab-noicon mw-list-item"><a href="/wiki/Talk:LR_parser" rel="discussion" title="Discuss improvements to the content page [t]" accesskey="t"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

								
<div id="vector-variants-dropdown" class="vector-dropdown emptyPortlet"  >
	<input type="checkbox" id="vector-variants-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-variants-dropdown" class="vector-dropdown-checkbox " aria-label="Change language variant"   >
	<label id="vector-variants-dropdown-label" for="vector-variants-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">English</span>
	</label>
	<div class="vector-dropdown-content">


					
<div id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

				
	</div>
</div>

							</nav>
						</div>
						<div id="right-navigation" class="vector-collapsible">
							<nav aria-label="Views">
								
<div id="p-views" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-views"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-view" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/LR_parser"><span>Read</span></a></li><li id="ca-edit" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=LR_parser&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-history" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=LR_parser&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

							</nav>
				
							<nav class="vector-page-tools-landmark" aria-label="Page tools">
								
<div id="vector-page-tools-dropdown" class="vector-dropdown vector-page-tools-dropdown"  >
	<input type="checkbox" id="vector-page-tools-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-tools-dropdown" class="vector-dropdown-checkbox "  aria-label="Tools"  >
	<label id="vector-page-tools-dropdown-label" for="vector-page-tools-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">Tools</span>
	</label>
	<div class="vector-dropdown-content">


									<div id="vector-page-tools-unpinned-container" class="vector-unpinned-container">
						
<div id="vector-page-tools" class="vector-page-tools vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-page-tools-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="page-tools-pinned"
	data-pinnable-element-id="vector-page-tools"
	data-pinned-container-id="vector-page-tools-pinned-container"
	data-unpinned-container-id="vector-page-tools-unpinned-container"
>
	<div class="vector-pinnable-header-label">Tools</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-page-tools.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-page-tools.unpin">hide</button>
</div>

	
<div id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-has-collapsible-items"  title="More options" >
	<div class="vector-menu-heading">
		Actions
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-more-view" class="selected vector-more-collapsible-item mw-list-item"><a href="/wiki/LR_parser"><span>Read</span></a></li><li id="ca-more-edit" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=LR_parser&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-more-history" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=LR_parser&amp;action=history"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-tb" class="vector-menu mw-portlet mw-portlet-tb"  >
	<div class="vector-menu-heading">
		General
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-whatlinkshere" class="mw-list-item"><a href="/wiki/Special:WhatLinksHere/LR_parser" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/wiki/Special:RecentChangesLinked/LR_parser" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-upload" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u"><span>Upload file</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/w/index.php?title=LR_parser&amp;oldid=1287843227" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="/w/index.php?title=LR_parser&amp;action=info" title="More information about this page"><span>Page information</span></a></li><li id="t-cite" class="mw-list-item"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=LR_parser&amp;id=1287843227&amp;wpFormIdentifier=titleform" title="Information on how to cite this page"><span>Cite this page</span></a></li><li id="t-urlshortener" class="mw-list-item"><a href="/w/index.php?title=Special:UrlShortener&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLR_parser"><span>Get shortened URL</span></a></li><li id="t-urlshortener-qrcode" class="mw-list-item"><a href="/w/index.php?title=Special:QrCode&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLR_parser"><span>Download QR code</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-coll-print_export" class="vector-menu mw-portlet mw-portlet-coll-print_export"  >
	<div class="vector-menu-heading">
		Print/export
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="coll-download-as-rl" class="mw-list-item"><a href="/w/index.php?title=Special:DownloadAsPdf&amp;page=LR_parser&amp;action=show-download-screen" title="Download this page as a PDF file"><span>Download as PDF</span></a></li><li id="t-print" class="mw-list-item"><a href="/w/index.php?title=LR_parser&amp;printable=yes" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-wikibase-otherprojects" class="vector-menu mw-portlet mw-portlet-wikibase-otherprojects"  >
	<div class="vector-menu-heading">
		In other projects
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-wikibase" class="wb-otherproject-link wb-otherproject-wikibase-dataitem mw-list-item"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q1756442" title="Structured data on this page hosted by Wikidata [g]" accesskey="g"><span>Wikidata item</span></a></li>
		</ul>
		
	</div>
</div>

</div>

									</div>
				
	</div>
</div>

							</nav>
						</div>
					</div>
				</div>
				<div class="vector-column-end no-font-mode-scale">
					<div class="vector-sticky-pinned-container">
						<nav class="vector-page-tools-landmark" aria-label="Page tools">
							<div id="vector-page-tools-pinned-container" class="vector-pinned-container">
				
							</div>
		</nav>
						<nav class="vector-appearance-landmark" aria-label="Appearance">
							<div id="vector-appearance-pinned-container" class="vector-pinned-container">
				<div id="vector-appearance" class="vector-appearance vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-appearance-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="appearance-pinned"
	data-pinnable-element-id="vector-appearance"
	data-pinned-container-id="vector-appearance-pinned-container"
	data-unpinned-container-id="vector-appearance-unpinned-container"
>
	<div class="vector-pinnable-header-label">Appearance</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-appearance.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-appearance.unpin">hide</button>
</div>


</div>

							</div>
		</nav>
					</div>
				</div>
				<div id="bodyContent" class="vector-body" aria-labelledby="firstHeading" data-mw-ve-target-container>
					<div class="vector-body-before-content">
							<div class="mw-indicators">
		</div>

						<div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>
					</div>
					<div id="contentSub"><div id="mw-content-subtitle"></div></div>
					
					
					<div id="mw-content-text" class="mw-body-content"><div class="mw-content-ltr mw-parser-output" lang="en" dir="ltr"><div class="shortdescription nomobile noexcerpt noprint searchaux" style="display:none">Type of parser in computer science</div>
<style data-mw-deduplicate="TemplateStyles:r1251242444">.mw-parser-output .ambox{border:1px solid #a2a9b1;border-left:10px solid #36c;background-color:#fbfbfb;box-sizing:border-box}.mw-parser-output .ambox+link+.ambox,.mw-parser-output .ambox+link+style+.ambox,.mw-parser-output .ambox+link+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+style+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+link+.ambox{margin-top:-1px}html body.mediawiki .mw-parser-output .ambox.mbox-small-left{margin:4px 1em 4px 0;overflow:hidden;width:238px;border-collapse:collapse;font-size:88%;line-height:1.25em}.mw-parser-output .ambox-speedy{border-left:10px solid #b32424;background-color:#fee7e6}.mw-parser-output .ambox-delete{border-left:10px solid #b32424}.mw-parser-output .ambox-content{border-left:10px solid #f28500}.mw-parser-output .ambox-style{border-left:10px solid #fc3}.mw-parser-output .ambox-move{border-left:10px solid #9932cc}.mw-parser-output .ambox-protection{border-left:10px solid #a2a9b1}.mw-parser-output .ambox .mbox-text{border:none;padding:0.25em 0.5em;width:100%}.mw-parser-output .ambox .mbox-image{border:none;padding:2px 0 2px 0.5em;text-align:center}.mw-parser-output .ambox .mbox-imageright{border:none;padding:2px 0.5em 2px 0;text-align:center}.mw-parser-output .ambox .mbox-empty-cell{border:none;padding:0;width:1px}.mw-parser-output .ambox .mbox-image-div{width:52px}@media(min-width:720px){.mw-parser-output .ambox{margin:0 10%}}@media print{body.ns-0 .mw-parser-output .ambox{display:none!important}}</style><table class="box-Technical plainlinks metadata ambox ambox-style ambox-technical" role="presentation"><tbody><tr><td class="mbox-image"><div class="mbox-image-div"><span typeof="mw:File"><span><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png" decoding="async" width="40" height="40" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/60px-Edit-clear.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/80px-Edit-clear.svg.png 2x" data-file-width="48" data-file-height="48"></span></span></div></td><td class="mbox-text"><div class="mbox-text-span">This article <b>may be too technical for most readers to understand</b>.<span class="hide-when-compact"> Please <a class="external text" href="https://en.wikipedia.org/w/index.php?title=LR_parser&amp;action=edit">help improve it</a> to <a href="/wiki/Wikipedia:Make_technical_articles_understandable" title="Wikipedia:Make technical articles understandable">make it understandable to non-experts</a>, without removing the technical details.</span>  <span class="date-container"><i>(<span class="date">November 2023</span>)</i></span><span class="hide-when-compact"><i> (<small><a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this message</a></small>)</i></span></div></td></tr></tbody></table>
<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>LR parsers</b> are a type of <a href="/wiki/Bottom-up_parsing" title="Bottom-up parsing">bottom-up parser</a> that analyse <a href="/wiki/Deterministic_context-free_language" title="Deterministic context-free language">deterministic context-free languages</a> in linear time.<sup id="cite_ref-Knuth_1965_1-0" class="reference"><a href="#cite_note-Knuth_1965-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup> There are several variants of LR parsers: <a href="/wiki/SLR_parser" class="mw-redirect" title="SLR parser">SLR parsers</a>, <a href="/wiki/LALR_parser" title="LALR parser">LALR parsers</a>, <a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">canonical LR(1) parsers</a>, <a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">minimal LR(1) parsers</a>, and <a href="/wiki/Generalized_LR_parser" class="mw-redirect" title="Generalized LR parser">generalized LR parsers</a> (GLR parsers). LR parsers can be generated by a <a href="/wiki/Parser_generator" class="mw-redirect" title="Parser generator">parser generator</a> from a <a href="/wiki/Formal_grammar" title="Formal grammar">formal grammar</a> defining the syntax of the language to be parsed. They are widely used for the processing of <a href="/wiki/Computer_language" title="Computer language">computer languages</a>.
</p><p>An LR parser (left-to-right, rightmost derivation in reverse) reads input text from left to right without backing up (this is true for most parsers), and produces a <a href="/wiki/Rightmost_derivation" class="mw-redirect" title="Rightmost derivation">rightmost derivation</a> in reverse: it does a <a href="/wiki/Bottom-up_parsing" title="Bottom-up parsing">bottom-up parse</a> – not a <a href="/wiki/Top-down_parsing" title="Top-down parsing">top-down LL parse</a> or ad-hoc parse. The name "LR" is often followed by a numeric qualifier, as in "LR(1)" or sometimes "LR(<i>k</i>)". To avoid <a href="/wiki/Backtracking" title="Backtracking">backtracking</a> or guessing, the LR parser is allowed to peek ahead at <i>k</i> <a href="/wiki/Parsing#Lookahead" title="Parsing">lookahead</a> input <a href="/wiki/Symbol_(formal)" title="Symbol (formal)">symbols</a> before deciding how to parse earlier symbols. Typically <i>k</i> is 1 and is not mentioned. The name "LR" is often preceded by other qualifiers, as in "SLR" and "LALR".  The "LR(<i>k</i>)" notation for a grammar was suggested by Knuth to stand for "translatable from left to right with bound <i>k</i>."<sup id="cite_ref-Knuth_1965_1-1" class="reference"><a href="#cite_note-Knuth_1965-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup>
</p><p>LR parsers are deterministic; they produce a single correct parse without guesswork or backtracking, in linear time.  This is ideal for computer languages, but LR parsers are not suited for human languages which need more flexible but inevitably slower methods.  Some methods which can parse arbitrary context-free languages (e.g., <a href="/wiki/CYK_algorithm" title="CYK algorithm">Cocke–Younger–Kasami</a>, <a href="/wiki/Earley_parser" title="Earley parser">Earley</a>, <a href="/wiki/GLR_parser" title="GLR parser">GLR</a>) have worst-case performance of O(<var style="padding-right: 1px;">n</var><sup>3</sup>) time.  Other methods which backtrack or yield multiple parses may even take exponential time when they guess badly.<sup id="cite_ref-AhoUllman_1972_2-0" class="reference"><a href="#cite_note-AhoUllman_1972-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup>
</p><p>The above properties of <b>L</b>, <b>R</b>, and <i><b>k</b></i> are actually shared by all <a href="/wiki/Shift-reduce_parser" title="Shift-reduce parser">shift-reduce parsers</a>, including <a href="/wiki/Simple_precedence_parser" title="Simple precedence parser">precedence parsers</a>. But by convention, the LR name stands for the form of parsing invented by <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>, and excludes the earlier, less powerful precedence methods (for example <a href="/wiki/Operator-precedence_parser" title="Operator-precedence parser">Operator-precedence parser</a>).<sup id="cite_ref-Knuth_1965_1-2" class="reference"><a href="#cite_note-Knuth_1965-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup>
LR parsers can handle a larger range of languages and grammars than precedence parsers or top-down <a href="/wiki/LL_parsing" class="mw-redirect" title="LL parsing">LL parsing</a>.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span class="cite-bracket">[</span>3<span class="cite-bracket">]</span></a></sup> This is because the LR parser waits until it has seen an entire instance of some grammar pattern before committing to what it has found. An LL parser has to decide or guess what it is seeing much sooner, when it has only seen the leftmost input symbol of that pattern.
</p>
<meta property="mw:PageProp/toc">
<div class="mw-heading mw-heading2"><h2 id="Overview">Overview</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=1" title="Edit section: Overview"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<div class="mw-heading mw-heading3"><h3 id="Bottom-up_parse_tree_for_example_A_*_2_+_1"><span id="Bottom-up_parse_tree_for_example_A_.2A_2_.2B_1"></span>Bottom-up parse tree for example A * 2 + 1</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=2" title="Edit section: Bottom-up parse tree for example A * 2 + 1"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<figure class="mw-default-size mw-halign-right" typeof="mw:File/Thumb"><a href="/wiki/File:Shift-Reduce_Parse_Steps_for_A*2%2B1.svg" class="mw-file-description"><img src="//upload.wikimedia.org/wikipedia/en/thumb/5/5f/Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg/250px-Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg.png" decoding="async" width="212" height="200" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/en/thumb/5/5f/Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg/330px-Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/5/5f/Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg/500px-Shift-Reduce_Parse_Steps_for_A%2A2%2B1.svg.png 2x" data-file-width="512" data-file-height="484"></a><figcaption>Bottom-up parse tree built in numbered steps</figcaption></figure>
<p>An LR parser scans and parses the input text in one forward pass over the text.  The parser builds up the <a href="/wiki/Parse_tree" title="Parse tree">parse tree</a> incrementally, bottom up, and left to right, without guessing or backtracking.  At every point in this pass, the parser has accumulated a list of subtrees or phrases of the input text that have been already parsed.  Those subtrees are not yet joined together because the parser has not yet reached the right end of the syntax pattern that will combine them.
</p><p>At step 6 in an example parse, only "A * 2" has been parsed, incompletely.  Only the shaded lower-left corner of the parse tree exists.  None of the parse tree nodes numbered 7 and above exist yet.  Nodes 3, 4, and 6 are the roots of isolated subtrees for variable A, operator *, and number 2, respectively.  These three root nodes are temporarily held in a parse stack.  The remaining unparsed portion of the input stream is "+ 1".
</p>
<div class="mw-heading mw-heading3"><h3 id="Shift_and_reduce_actions">Shift and reduce actions</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=3" title="Edit section: Shift and reduce actions"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>As with other shift-reduce parsers, an LR parser works by doing some combination of Shift steps and Reduce steps.  
</p>
<ul><li>A <b>Shift</b> step advances in the input stream by one symbol.  That shifted symbol becomes a new single-node parse tree.</li>
<li>A <b>Reduce</b> step applies a completed grammar rule to some of the recent parse trees, joining them together as one tree with a new root symbol.</li></ul>
<p>If the input has no syntax errors, the parser continues with these steps until all of the input has been consumed and all of the parse trees have been reduced to a single tree representing an entire legal input.
</p><p>LR parsers differ from other shift-reduce parsers in how they decide when to reduce, and how to pick between rules with similar endings.  But the final decisions and the sequence of shift or reduce steps are the same.
</p><p>Much of the LR parser's efficiency is from being deterministic. To avoid guessing, the LR parser often looks ahead (rightwards) at the next scanned symbol, before deciding what to do with previously scanned symbols.  The lexical scanner works one or more symbols ahead of the parser.  The <b>lookahead</b> symbols are the 'right-hand context' for the parsing decision.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4"><span class="cite-bracket">[</span>4<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading3"><h3 id="Bottom-up_parse_stack">Bottom-up parse stack</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=4" title="Edit section: Bottom-up parse stack"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<figure class="mw-default-size mw-halign-right" typeof="mw:File/Thumb"><a href="/wiki/File:Bottom-Up_Parser.svg" class="mw-file-description"><img src="//upload.wikimedia.org/wikipedia/commons/thumb/d/db/Bottom-Up_Parser.svg/500px-Bottom-Up_Parser.svg.png" decoding="async" width="377" height="250" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/db/Bottom-Up_Parser.svg/565px-Bottom-Up_Parser.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/db/Bottom-Up_Parser.svg/753px-Bottom-Up_Parser.svg.png 2x" data-file-width="512" data-file-height="340"></a><figcaption>Bottom-up parser at step 6</figcaption></figure>
<p>Like other shift-reduce parsers, an LR parser lazily waits until it has scanned and parsed all parts of some construct before committing to what the combined construct is.  The parser then acts immediately on the combination instead of waiting any further.  In the parse tree example, the phrase A gets reduced to Value and then to Products in steps 1-3 as soon as lookahead * is seen, rather than waiting any later to organize those parts of the parse tree.  The decisions for how to handle A are based only on what the parser and scanner have already seen, without considering things that appear much later to the right.
</p><p>Reductions reorganize the most recently parsed things, immediately to the left of the lookahead symbol.  So the list of already-parsed things acts like a <a href="/wiki/Stack_(abstract_data_type)" title="Stack (abstract data type)">stack</a>.  This <b>parse stack</b> grows rightwards.  The base or bottom of the stack is on the left and holds the leftmost, oldest parse fragment.  Every reduction step acts only on the rightmost, newest parse fragments.  (This accumulative parse stack is very unlike the predictive, leftward-growing parse stack used by <a href="/wiki/Top-down_parser" class="mw-redirect" title="Top-down parser">top-down parsers</a>.)
</p>
<div class="mw-heading mw-heading3"><h3 id="Bottom-up_parse_steps_for_example_A_*_2_+_1"><span id="Bottom-up_parse_steps_for_example_A_.2A_2_.2B_1"></span>Bottom-up parse steps for example A * 2 + 1</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=5" title="Edit section: Bottom-up parse steps for example A * 2 + 1"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<table class="wikitable">

<tbody><tr>
<th><small>Step</small></th>
<th><small>Parse Stack</small></th>
<th><small>Unparsed</small></th>
<th><small>Shift/Reduce</small>
</th></tr>
<tr>
<td>0</td>
<td><i>empty</i></td>
<td align="right">A * 2 + 1</td>
<td>shift
</td></tr>
<tr>
<td>1</td>
<td><i>id</i></td>
<td align="right">* 2 + 1</td>
<td>Value → <i>id</i>
</td></tr>
<tr>
<td>2</td>
<td>Value</td>
<td align="right">* 2 + 1</td>
<td>Products → Value
</td></tr>
<tr>
<td>3</td>
<td>Products</td>
<td align="right">* 2 + 1</td>
<td>shift
</td></tr>
<tr>
<td>4</td>
<td>Products *</td>
<td align="right">2 + 1</td>
<td>shift
</td></tr>
<tr>
<td>5</td>
<td>Products * <i>int</i></td>
<td align="right">+ 1</td>
<td>Value → <i>int</i>
</td></tr>
<tr>
<td>6</td>
<td>Products * Value</td>
<td align="right">+ 1</td>
<td>Products → Products * Value
</td></tr>
<tr>
<td>7</td>
<td>Products</td>
<td align="right">+ 1</td>
<td>Sums → Products
</td></tr>
<tr>
<td>8</td>
<td>Sums</td>
<td align="right">+ 1</td>
<td>shift
</td></tr>
<tr>
<td>9</td>
<td>Sums +</td>
<td align="right">1</td>
<td>shift
</td></tr>
<tr>
<td>10</td>
<td>Sums + <i>int</i></td>
<td><i>eof</i></td>
<td>Value → <i>int</i>
</td></tr>
<tr>
<td>11</td>
<td>Sums + Value</td>
<td><i>eof</i></td>
<td>Products → Value
</td></tr>
<tr>
<td>12</td>
<td>Sums + Products</td>
<td><i>eof</i></td>
<td>Sums → Sums + Products
</td></tr>
<tr>
<td>13</td>
<td>Sums</td>
<td><i>eof</i></td>
<td>accept
</td></tr>
</tbody></table>
<p>Step 6 applies a grammar rule with multiple parts:
</p>
<dl><dd>Products → Products * Value</dd></dl>
<p>This matches the stack top holding the parsed phrases "... Products * Value".  The reduce step replaces this instance of the rule's right hand side, "Products * Value" by the rule's left hand side symbol, here a larger Products.  If the parser builds complete parse trees, the three trees for inner Products, *, and Value are combined by a new tree root for Products.  Otherwise, <a href="/wiki/Semantics#Programming_languages" title="Semantics">semantic</a><sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="/wiki/MOS:BROKENSECTIONLINKS" class="mw-redirect" title="MOS:BROKENSECTIONLINKS"><span title="Anchor &quot;Semantics#Programming languages&quot; links to a specific web page: &quot;Programming languages&quot;. The anchor (Programming languages) has been deleted. (2025-04-28)">broken anchor</span></a></i>]</sup> details from the inner Products and Value are output to some later compiler pass, or are combined and saved in the new Products symbol.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span class="cite-bracket">[</span>5<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading3"><h3 id="LR_parse_steps_for_example_A_*_2_+_1"><span id="LR_parse_steps_for_example_A_.2A_2_.2B_1"></span>LR parse steps for example A * 2 + 1</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=6" title="Edit section: LR parse steps for example A * 2 + 1"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>In LR parsers, the shift and reduce decisions are potentially based on the entire stack of everything that has been previously parsed, not just on a single, topmost stack symbol. If done in an unclever way, that could lead to very slow parsers that get slower and slower for longer inputs. LR parsers do this with constant speed, by summarizing all the relevant left context information into a single number called the LR(0) <b>parser state</b>. For each grammar and LR analysis method, there is a fixed (finite) number of such states. Besides holding the already-parsed symbols, the parse stack also remembers the state numbers reached by everything up to those points.
</p><p>At every parse step, the entire input text is divided into a stack of previously parsed phrases, a current look-ahead symbol, and the remaining unscanned text.  The parser's next action is determined by its current LR(0) <style data-mw-deduplicate="TemplateStyles:r1239334494">@media screen{html.skin-theme-clientpref-night .mw-parser-output div:not(.notheme)>.tmp-color,html.skin-theme-clientpref-night .mw-parser-output p>.tmp-color,html.skin-theme-clientpref-night .mw-parser-output table:not(.notheme) .tmp-color{color:inherit!important}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output div:not(.notheme)>.tmp-color,html.skin-theme-clientpref-os .mw-parser-output p>.tmp-color,html.skin-theme-clientpref-os .mw-parser-output table:not(.notheme) .tmp-color{color:inherit!important}}</style><span class="tmp-color" style="color:#928">state number</span> (rightmost on the stack) and the lookahead symbol. In the steps below, all the black details are exactly the same as in other non-LR shift-reduce parsers. LR parser stacks add the state information in purple, summarizing the black phrases to their left on the stack and what syntax possibilities to expect next.  Users of an LR parser can usually ignore state information.  These states are explained in a later section.
</p>
<table class="wikitable">

<tbody><tr>
<th><small><br>Step</small></th>
<th><small>Parse Stack<br><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">state</span></sub> [Symbol<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">state</span></sub>]* </small></th>
<th><small>Look<br>Ahead</small></th>
<th><small><br>Unscanned</small></th>
<th><small>Parser<br>Action</small></th>
<th><small><br>Grammar Rule</small></th>
<th><small>Next<br>State</small>
</th></tr>
<tr>
<td align="center">0</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub>
</td>
<td><i>id</i></td>
<td align="right">* 2 + 1</td>
<td>shift</td>
<td></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">9</span>
</td></tr>
<tr>
<td align="center">1</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> <i>id</i><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">9</span></sub>
</td>
<td>*</td>
<td align="right">2 + 1</td>
<td>reduce</td>
<td>Value → <i>id</i></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">7</span>
</td></tr>
<tr>
<td align="center">2</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Value<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">7</span></sub>
</td>
<td>*</td>
<td align="right">2 + 1</td>
<td>reduce</td>
<td>Products → Value</td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span>
</td></tr>
<tr>
<td align="center">3</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub>
</td>
<td>*</td>
<td align="right">2 + 1</td>
<td>shift</td>
<td></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">5</span>
</td></tr>
<tr>
<td align="center">4</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub> *<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">5</span></sub>
</td>
<td><i>int</i></td>
<td align="right">+ 1</td>
<td>shift</td>
<td></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">8</span>
</td></tr>
<tr>
<td align="center">5</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub> *<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">5</span></sub> <i>int</i><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">8</span></sub>
</td>
<td>+</td>
<td align="right">1</td>
<td>reduce</td>
<td>Value → <i>int</i></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">6</span>
</td></tr>
<tr>
<td align="center">6</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub> *<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">5</span></sub> Value<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">6</span></sub>
</td>
<td>+</td>
<td align="right">1</td>
<td>reduce</td>
<td>Products → Products * Value</td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span>
</td></tr>
<tr>
<td align="center">7</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub>
</td>
<td>+</td>
<td align="right">1</td>
<td>reduce</td>
<td>Sums → Products</td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span>
</td></tr>
<tr>
<td align="center">8</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub>
</td>
<td>+</td>
<td align="right">1</td>
<td>shift</td>
<td></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">2</span>
</td></tr>
<tr>
<td align="center">9</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub> +<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">2</span></sub>
</td>
<td><i>int</i></td>
<td align="right"><i>eof</i></td>
<td>shift</td>
<td></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">8</span>
</td></tr>
<tr>
<td align="center">10</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub> +<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">2</span></sub> <i>int</i><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">8</span></sub>
</td>
<td><i>eof</i></td>
<td></td>
<td>reduce</td>
<td>Value → <i>int</i></td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">7</span>
</td></tr>
<tr>
<td align="center">11</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub> +<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">2</span></sub> Value<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">7</span></sub>
</td>
<td><i>eof</i></td>
<td></td>
<td>reduce</td>
<td>Products → Value</td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">3</span>
</td></tr>
<tr>
<td align="center">12</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub> +<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">2</span></sub> Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">3</span></sub>
</td>
<td><i>eof</i></td>
<td></td>
<td>reduce</td>
<td>Sums → Sums + Products</td>
<td align="center"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span>
</td></tr>
<tr>
<td align="center">13</td>
<td><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> Sums<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">1</span></sub>
</td>
<td><i>eof</i></td>
<td></td>
<td>accept</td>
<td></td>
<td>
</td></tr>
</tbody></table>
<p>At initial step 0, the input stream "A * 2 + 1" is divided into
</p>
<ul><li>an empty section on the parse stack,</li>
<li>lookahead text "A" scanned as an <i>id</i> symbol, and</li>
<li>the remaining unscanned text "* 2 + 1".</li></ul>
<p>The parse stack begins by holding only initial state 0.  When state 0 sees the lookahead <i>id</i>, it knows to shift that <i>id</i> onto the stack, and scan the next input symbol <b>*</b>, and advance to state 9.
</p>
<hr style="width: 550px;; max-width:100%;">
<p>At step 4, the total input stream "A * 2 + 1" is currently divided into 
</p>
<ul><li>the parsed section "A&nbsp;*" with 2 stacked phrases Products and <b>*</b>,</li>
<li>lookahead text "2" scanned as an <i>int</i> symbol, and</li>
<li>the remaining unscanned text " + 1".</li></ul>
<p>The states corresponding to the stacked phrases are 0, 4, and 5.  The current, rightmost state on the stack is state 5.  When state 5 sees the lookahead <i>int</i>, it knows to shift that <i>int</i> onto the stack as its own phrase, and scan the next input symbol <b>+</b>, and advance to state 8.
</p>
<hr style="width: 550px;; max-width:100%;">
<p>At step 12, all of the input stream has been consumed but only partially organized.  The current state is 3.  When state 3 sees the lookahead <i>eof</i>, it knows to apply the completed grammar rule
</p>
<dl><dd><dl><dd>Sums → Sums + Products</dd></dl></dd></dl>
<p>by combining the stack's rightmost three phrases for Sums, <b>+</b>, and Products into one thing.  State 3 itself doesn't know what the next state should be.  This is found by going back to state 0, just to the left of the phrase being reduced.  When state 0 sees this new completed instance of a Sums, it advances to state 1 (again).  This consulting of older states is why they are kept on the stack, instead of keeping only the current state.
</p>
<div class="mw-heading mw-heading3"><h3 id="Grammar_for_the_example_A_*_2_+_1"><span id="Grammar_for_the_example_A_.2A_2_.2B_1"></span>Grammar for the example A * 2 + 1</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=7" title="Edit section: Grammar for the example A * 2 + 1"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>LR parsers are constructed from a grammar that formally defines the syntax of the input language as a set of patterns.  The grammar doesn't cover all language rules, such as the size of numbers, or the consistent use of names and their definitions in the context of the whole program.  LR parsers use a <a href="/wiki/Context-free_grammar" title="Context-free grammar">context-free grammar</a> that deals just with local patterns of symbols.
</p><p>The example grammar used here is a tiny subset of the Java or C language:
</p>
<dl><dd><dl><dd>r0: Goal → Sums <i>eof</i></dd>
<dd>r1: Sums → Sums + Products</dd>
<dd>r2: Sums → Products</dd>
<dd>r3: Products → Products * Value</dd>
<dd>r4: Products → Value</dd>
<dd>r5: Value → <i>int</i></dd>
<dd>r6: Value → <i>id</i></dd></dl></dd></dl>
<p>The grammar's <a href="/wiki/Terminal_symbol" class="mw-redirect" title="Terminal symbol">terminal symbols</a> are the multi-character symbols or 'tokens' found in the input stream by a <a href="/wiki/Lexical_analysis" title="Lexical analysis">lexical scanner</a>.  Here these include <b>+</b> <b>*</b> and <i>int</i> for any integer constant, and <i>id</i> for any identifier name, and <i>eof</i> for end of input file.  The grammar doesn't care what the <i>int</i> values or <i>id</i> spellings are, nor does it care about blanks or line breaks.  The grammar uses these terminal symbols but does not define them.  They are always leaf nodes (at the bottom bushy end) of the parse tree.
</p><p>The capitalized terms like Sums are <a href="/wiki/Nonterminal_symbol" class="mw-redirect" title="Nonterminal symbol">nonterminal symbols</a>.  These are names for concepts or patterns in the language. They are defined in the grammar and never occur themselves in the input stream.  They are always internal nodes (above the bottom) of the parse tree. They only happen as a result of the parser applying some grammar rule.  Some nonterminals are defined with two or more rules; these are alternative patterns.  Rules can refer back to themselves, which are called <i>recursive</i>.  This grammar uses recursive rules to handle repeated math operators.  Grammars for complete languages use recursive rules to handle lists, parenthesized expressions, and nested statements.
</p><p>Any given computer language can be described by several different grammars.  An LR(1) parser can handle many but not all common grammars.  It is usually possible to manually modify a grammar so that it fits the limitations of LR(1) parsing and the generator tool.
</p><p>The grammar for an LR parser must be <a href="/wiki/Ambiguous_grammar" title="Ambiguous grammar">unambiguous</a> itself, or must be augmented by tie-breaking precedence rules.  This means there is only one correct way to apply the grammar to a given legal example of the language, resulting in a unique parse tree with just one meaning, and a unique sequence of shift/reduce actions for that example.  LR parsing is not a useful technique for human languages with ambiguous grammars that depend on the interplay of words.  Human languages are better handled by parsers like <a href="/wiki/Generalized_LR_parser" class="mw-redirect" title="Generalized LR parser">Generalized LR parser</a>, the <a href="/wiki/Earley_parser" title="Earley parser">Earley parser</a>, or the <a href="/wiki/CYK_algorithm" title="CYK algorithm">CYK algorithm</a> that can simultaneously compute all possible parse trees in one pass.
</p>
<div class="mw-heading mw-heading3"><h3 id="Parse_table_for_the_example_grammar">Parse table for the example grammar</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=8" title="Edit section: Parse table for the example grammar"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Most LR parsers are table driven. The parser's program code is a simple generic loop that is the same for all grammars and languages. The knowledge of the grammar and its syntactic implications are encoded into unchanging data tables called <b>parse tables</b> (or <b>parsing tables</b>). Entries in a table show whether to shift or reduce (and by which grammar rule), for every legal combination of parser state and lookahead symbol.  The parse tables also tell how to compute the next state, given just a current state and a next symbol.
</p><p>The parse tables are much larger than the grammar.  LR tables are hard to accurately compute by hand for big grammars.  So they are mechanically derived from the grammar by some <a href="/wiki/Parser_generator" class="mw-redirect" title="Parser generator">parser generator</a> tool like <a href="/wiki/GNU_Bison" title="GNU Bison">Bison</a>.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span class="cite-bracket">[</span>6<span class="cite-bracket">]</span></a></sup>
</p><p>Depending on how the states and parsing table are generated, the resulting parser is called either a <a href="/wiki/Simple_LR_parser" title="Simple LR parser"><b>SLR</b> (simple LR) parser</a>, <a href="/wiki/LALR_parser" title="LALR parser"><b>LALR</b> (look-ahead LR) parser</a>, or <a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">canonical LR parser</a>. LALR parsers handle more grammars than SLR parsers. Canonical LR parsers handle even more grammars, but use many more states and much larger tables.  The example grammar is SLR.
</p><p>LR parse tables are two-dimensional.  Each current LR(0) parser state has its own row.  Each possible next symbol has its own column.  Some combinations of state and next symbol are not possible for valid input streams.  These blank cells trigger syntax error messages.
</p><p>The <b>Action</b> left half of the table has columns for lookahead terminal symbols.  These cells determine whether the next parser action is shift (to state <i>n</i>), or reduce (by grammar rule <b>r</b><sub><i>n</i></sub>).
</p><p>The <b>Goto</b> right half of the table has columns for nonterminal symbols.  These cells show which state to advance to, after some reduction's Left Hand Side has created an expected new instance of that symbol.  This is like a shift action but for nonterminals; the lookahead terminal symbol is unchanged.
</p><p>The table column "Current Rules" documents the meaning and syntax possibilities for each state, as worked out by the parser generator.  It is not included in the actual tables used at parsing time.  The <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> (pink dot) marker shows where the parser is now, within some partially recognized grammar rules.  The things to the left of <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> have been parsed, and the things to the right are expected soon.  A state has several such current rules if the parser has not yet narrowed possibilities down to a single rule.
</p>
<table class="wikitable">

<tbody><tr>
<th>Curr</th>
<th></th>
<th colspan="5">Lookahead</th>
<th></th>
<th colspan="3">LHS Goto
</th></tr>
<tr>
<th>State</th>
<th>Current Rules</th>
<th><i>int</i></th>
<th><i>id</i></th>
<th>*  &nbsp;</th>
<th>+ &nbsp;</th>
<th><i>eof</i></th>
<th></th>
<th>Sums</th>
<th>Products</th>
<th>Value
</th></tr>
<tr>
<td>0</td>
<td>Goal → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Sums <i>eof</i></td>
<td>8</td>
<td>9</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>1</td>
<td>4</td>
<td>7
</td></tr>
<tr>
<td>1</td>
<td>Goal → Sums <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <i>eof</i> <br> Sums → Sums <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + Products</td>
<td></td>
<td></td>
<td></td>
<td><br>2</td>
<td>accept<br>&nbsp;</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>2</td>
<td>Sums → Sums + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Products</td>
<td>8</td>
<td>9</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>3</td>
<td>7
</td></tr>
<tr>
<td>3</td>
<td>Sums → Sums + Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <br> Products → Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * Value</td>
<td></td>
<td></td>
<td><br>5</td>
<td>r1 <br>&nbsp;</td>
<td>r1 <br>&nbsp;</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>4</td>
<td>Sums → Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <br> Products → Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * Value</td>
<td></td>
<td></td>
<td><br>5</td>
<td>r2 <br>&nbsp;</td>
<td>r2 <br>&nbsp;</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>5</td>
<td>Products → Products * <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Value</td>
<td>8</td>
<td>9</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>6
</td></tr>
<tr>
<td>6</td>
<td>Products → Products * Value <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></td>
<td></td>
<td></td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>7</td>
<td>Products → Value <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></td>
<td></td>
<td></td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>8</td>
<td>Value → <i>int</i> <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></td>
<td></td>
<td></td>
<td>r5</td>
<td>r5</td>
<td>r5</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
<tr>
<td>9</td>
<td>Value → <i>id</i> <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></td>
<td></td>
<td></td>
<td>r6</td>
<td>r6</td>
<td>r6</td>
<td></td>
<td></td>
<td></td>
<td>
</td></tr>
</tbody></table>
<p>In state 2 above, the parser has just found and shifted-in the <b>+</b> of grammar rule
</p>
<dl><dd><dl><dd>r1: Sums → Sums + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Products</dd></dl></dd></dl>
<p>The next expected phrase is Products.  Products begins with terminal symbols <i>int</i> or <i>id</i>.  If the lookahead is either of those, the parser shifts them in and advances to state 8 or 9, respectively.  When a Products has been found, the parser advances to state 3 to accumulate the complete list of summands and find the end of rule r0.  A Products can also begin with nonterminal  Value.  For any other lookahead or nonterminal, the parser announces a syntax error.
</p>
<hr style="width: 550px;; max-width:100%;">
<p>In state 3, the parser has just found a Products phrase, that could be from two possible grammar rules:
</p>
<dl><dd><dl><dd>r1: Sums → Sums + Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd>
<dd>r3: Products → Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * Value</dd></dl></dd></dl>
<p>The choice between r1 and r3 can't be decided just from looking backwards at prior phrases.  The parser has to check the lookahead symbol to tell what to do.  If the lookahead is <b>*</b>, it is in rule 3, so the parser shifts in the <b>*</b> and advances to state 5.  If the lookahead is <i>eof</i>, it is at the end of rule 1 and rule 0, so the parser is done.
</p>
<hr style="width: 550px;; max-width:100%;">
<p>In state 9 above, all the non-blank, non-error cells are for the same reduction r6.  Some parsers save time and table space by not checking the lookahead symbol in these simple cases.  Syntax errors are then detected somewhat later, after some harmless reductions, but still before the next shift action or parser decision.
</p><p>Individual table cells must not hold multiple, alternative actions, otherwise the parser would be nondeterministic with guesswork and backtracking.  If the grammar is not LR(1), some cells will have shift/reduce conflicts between a possible shift action and reduce action, or reduce/reduce conflicts between multiple grammar rules.  LR(<i>k</i>) parsers resolve these conflicts (where possible) by checking additional lookahead symbols beyond the first.
</p>
<div class="mw-heading mw-heading3"><h3 id="LR_parser_loop">LR parser loop</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=9" title="Edit section: LR parser loop"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The LR parser begins with a nearly empty parse stack containing just the start state 0, and with the lookahead holding the input stream's first scanned symbol.  The parser then repeats the following loop step until done, or stuck on a syntax error:
</p><p>The topmost state on the parse stack is some state <i>s</i>, and the current lookahead is some terminal symbol <i>t</i>.  Look up the next parser action from row <i>s</i> and column <i>t</i> of the Lookahead Action table.  That action is either Shift, Reduce, Accept, or Error:
</p>
<ul><li>Shift <i>n</i>:</li></ul>
<dl><dd><dl><dd>Shift the matched terminal <i>t</i> onto the parse stack and scan the next input symbol into the lookahead buffer.</dd>
<dd>Push next state <i>n</i> onto the parse stack as the new current state.</dd></dl></dd></dl>
<ul><li>Reduce r<sub><i>m</i></sub>:  Apply grammar rule r<sub><i>m</i></sub>: Lhs → S<sub>1</sub> S<sub>2</sub> ... S<sub>L</sub></li></ul>
<dl><dd><dl><dd>Remove the matched topmost L symbols (and parse trees and associated state numbers) from the parse stack.</dd>
<dd>This exposes a prior state <i>p</i> that was expecting an instance of the Lhs symbol.</dd>
<dd>Join the L parse trees together as one parse tree with new root symbol Lhs.</dd>
<dd>Lookup the next state <i>n</i> from row <i>p</i> and column <i>Lhs</i> of the LHS Goto table.</dd>
<dd>Push the symbol and tree for Lhs onto the parse stack.</dd>
<dd>Push next state <i>n</i> onto the parse stack as the new current state.</dd>
<dd>The lookahead and input stream remain unchanged.</dd></dl></dd></dl>
<ul><li>Accept: Lookahead <i>t</i> is the <i>eof</i> marker.  End of parsing. If the state stack contains just the start state report success. Otherwise, report a syntax error.</li>
<li>Error: Report a syntax error.  The parser ends, or attempts some recovery.</li></ul>
<p>LR parser stack usually stores just the LR(0) automaton states, as the grammar symbols may be derived from them (in the automaton, all input transitions to some state are marked with the same symbol, which is the symbol associated with this state). Moreover, these symbols are almost never needed as the state is all that matters when making the parsing decision.<sup id="cite_ref-Compilers_2006_7-0" class="reference"><a href="#cite_note-Compilers_2006-7"><span class="cite-bracket">[</span>7<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading2"><h2 id="LR_generator_analysis">LR generator analysis</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=10" title="Edit section: LR generator analysis"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>This section of the article can be skipped by most users of LR parser generators.
</p>
<div class="mw-heading mw-heading3"><h3 id="LR_states">LR states</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=11" title="Edit section: LR states"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>State 2 in the example parse table is for the partially parsed rule 
</p>
<dl><dd><dl><dd>r1: Sums → Sums + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Products</dd></dl></dd></dl>
<p>This shows how the parser got here, by seeing Sums then <b>+</b> while looking for a larger Sums.  The <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> marker has advanced beyond the beginning of the rule.  It also shows how the parser expects to eventually complete the rule, by next finding a complete Products.  But more details are needed on how to parse all the parts of that Products.
</p><p>The partially parsed rules for a state are called its "core LR(0) items".  The parser generator adds additional rules or items for all the possible next steps in building up the expected Products:
</p>
<dl><dd><dl><dd>r3: Products → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Products * Value</dd>
<dd>r4: Products → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> Value</dd>
<dd>r5: Value → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <i>int</i></dd>
<dd>r6: Value → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <i>id</i></dd></dl></dd></dl>
<p>The <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> marker is at the beginning of each of these added rules; the parser has not yet confirmed and parsed any part of them.  These additional items are called the "closure" of the core items. For each nonterminal symbol immediately following a <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big>, the generator adds the rules defining that symbol.  This adds more <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> markers, and possibly different follower symbols.  This closure process continues until all follower symbols have been expanded.  The follower nonterminals for state 2 begins with Products.  Value is then added by closure. The follower terminals are <i>int</i> and <i>id</i>.
</p><p>The kernel and closure items together show all possible legal ways to proceed from the current state to future states and complete phrases.  If a follower symbol appears in only one item, it leads to a next state containing only one core item with the <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> marker advanced.  So <i>int</i> leads to next state 8 with core
</p>
<dl><dd><dl><dd>r5: Value → <i>int</i> <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl></dd></dl>
<p>If the same follower symbol appears in several items, the parser cannot yet tell which rule applies here.  So that symbol leads to a next state that shows all remaining possibilities, again with the <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> marker advanced.  Products appears in both r1 and r3.  So Products leads to next state 3 with core
</p>
<dl><dd><dl><dd>r1: Sums → Sums + Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd>
<dd>r3: Products → Products <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * Value</dd></dl></dd></dl>
<p>In words, that means if the parser has seen a single Products, it might be done, or it might still have even more things to multiply together. All the core items have the same symbol preceding the <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> marker; all transitions into this state are always with that same symbol.
</p><p>Some transitions will be to cores and states that have been enumerated already.  Other transitions lead to new states.  The generator starts with the grammar's goal rule.  From there it keeps exploring known states and transitions until all needed states have been found.
</p><p>These states are called "LR(0)" states because they use a lookahead of <i>k</i>=0, i.e. no lookahead.  The only checking of input symbols occurs when the symbol is shifted in.  Checking of lookaheads for reductions is done separately by the parse table, not by the enumerated states themselves.
</p>
<div class="mw-heading mw-heading3"><h3 id="Finite_state_machine">Finite state machine</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=12" title="Edit section: Finite state machine"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The parse table describes all possible LR(0) states and their transitions.  They form a <a href="/wiki/Finite-state_machine" title="Finite-state machine">finite-state machine</a> (FSM).  An FSM is a simple engine for parsing simple unnested languages, without using a stack.  In this LR application, the FSM's modified "input language" has both terminal and nonterminal symbols, and covers any partially parsed stack snapshot of the full LR parse.
</p><p>Recall step 5 of the Parse Steps Example:
</p>
<table class="wikitable">

<tbody><tr>
<th><small>&lt;<br>Step</small></th>
<th><small>Parse Stack<br><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">state</span></sub> Symbol <sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">state</span></sub> ...</small></th>
<th><small>Look<br>Ahead</small></th>
<th><small><br>Unscanned</small>
</th></tr>
<tr>
<td>5</td>
<td>
<p><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">0</span></sub> 
Products<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">4</span></sub> *<sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">5</span></sub>
<i>int</i><sub><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#928">8</span></sub> 
</p>
</td>
<td>+</td>
<td align="right">1
</td></tr>
</tbody></table>
<p>The parse stack shows a series of state transitions, from the start state 0, to state 4 and then on to 5 and current state 8.  The symbols on the parse stack are the shift or goto symbols for those transitions.  Another way to view this, is that the finite state machine can scan the stream "Products&nbsp;*&nbsp;<i>int</i>&nbsp;+&nbsp;1" (without using yet another stack) and find the leftmost complete phrase that should be reduced next.  And that is indeed its job!
</p><p>How can a mere FSM do this when the original unparsed language has nesting and recursion and definitely requires an analyzer with a stack?  The trick is that everything to the left of the stack top has already been fully reduced.  This eliminates all the loops and nesting from those phrases.  The FSM can ignore all the older beginnings of phrases, and track just the newest phrases that might be completed next.  The obscure name for this in LR theory is "viable prefix".
</p>
<div class="mw-heading mw-heading3"><h3 id="Lookahead_sets">Lookahead sets</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=13" title="Edit section: Lookahead sets"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The states and transitions give all the needed information for the parse table's shift actions and goto actions.  The generator also needs to calculate the expected lookahead sets for each reduce action.
</p><p>In <b>SLR</b> parsers, these lookahead sets are determined directly from the grammar, without considering the individual states and transitions.  For each nonterminal S, the SLR generator works out Follows(S), the set of all the terminal symbols which can immediately follow some occurrence of S.  In the parse table, each reduction to S uses Follow(S) as its LR(1) lookahead set.  Such follow sets are also used by generators for LL top-down parsers.  A grammar that has no shift/reduce or reduce/reduce conflicts when using Follow sets is called an SLR grammar.
</p><p><b>LALR</b> parsers have the same states as SLR parsers, but use a more complicated, more precise way of working out the minimum necessary reduction lookaheads for each individual state.  Depending on the details of the grammar, this may turn out to be the same as the Follow set computed by SLR parser generators, or it may turn out to be a subset of the SLR lookaheads.  Some grammars are okay for LALR parser generators but not for SLR parser generators.  This happens when the grammar has spurious shift/reduce or reduce/reduce conflicts using Follow sets, but no conflicts when using the exact sets computed by the LALR generator.  The grammar is then called LALR(1) but not SLR.
</p><p>An SLR or LALR parser avoids having duplicate states.  But this minimization is not necessary, and can sometimes create unnecessary lookahead conflicts.  <b>Canonical LR</b> parsers use duplicated (or "split") states to better remember the left and right context of a nonterminal's use. Each occurrence of a symbol S in the grammar can be treated independently with its own lookahead set, to help resolve reduction conflicts.  This handles a few more grammars.  Unfortunately, this greatly magnifies the size of the parse tables if done for all parts of the grammar.  This splitting of states can also be done manually and selectively with any SLR or LALR parser, by making two or more named copies of some nonterminals.  A grammar that is conflict-free for a canonical LR generator but has conflicts in an LALR generator is called LR(1) but not LALR(1), and not SLR.
</p><p>SLR, LALR, and canonical LR parsers make exactly the same shift and reduce decisions when the input stream is the correct language.  When the input has a syntax error, the LALR parser may do some additional (harmless) reductions before detecting the error than would the canonical LR parser.  And the SLR parser may do even more.  This happens because the SLR and LALR parsers are using a generous superset approximation to the true, minimal lookahead symbols for that particular state.
</p>
<div class="mw-heading mw-heading3"><h3 id="Syntax_error_recovery">Syntax error recovery</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=14" title="Edit section: Syntax error recovery"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>LR parsers can generate somewhat helpful error messages for the first syntax error in a program, by simply enumerating all the terminal symbols that could have appeared next instead of the unexpected bad lookahead symbol.  But this does not help the parser work out how to parse the remainder of the input program to look for further, independent errors.  If the parser recovers badly from the first error, it is very likely to mis-parse everything else and produce a cascade of unhelpful spurious error messages.
</p><p>In the <a href="/wiki/Yacc" title="Yacc">yacc</a> and bison parser generators, the parser has an ad hoc mechanism to abandon the current statement, discard some parsed phrases and lookahead tokens surrounding the error, and resynchronize the parse at some reliable statement-level delimiter like semicolons or braces.  This often works well for allowing the parser and compiler to look over the rest of the program.
</p><p>Many syntactic coding errors are simple typos or omissions of a trivial symbol.  Some LR parsers attempt to detect and automatically repair these common cases.  The parser enumerates every possible single-symbol insertion, deletion, or substitution at the error point.  The compiler does a trial parse with each change to see if it worked okay.  (This requires backtracking to snapshots of the parse stack and input stream, normally unneeded by the parser.)  Some best repair is picked.  This gives a very helpful error message and resynchronizes the parse well.  However, the repair is not trustworthy enough to permanently modify the input file.  Repair of syntax errors is easiest to do consistently in parsers (like LR) that have parse tables and an explicit data stack.
</p>
<div class="mw-heading mw-heading3"><h3 id="Variants_of_LR_parsers">Variants of LR parsers</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=15" title="Edit section: Variants of LR parsers"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The LR parser generator decides what should happen for each combination of parser state and lookahead symbol.  These decisions are usually turned into read-only data tables that drive a generic parser loop that is grammar- and state-independent.  But there are also other ways to turn those decisions into an active parser.
</p><p>Some LR parser generators create separate tailored program code for each state, rather than a parse table.  These parsers can run several times faster than the generic parser loop in table-driven parsers.  The fastest parsers use generated assembler code.
</p><p>In the <a href="/wiki/Recursive_ascent_parser" title="Recursive ascent parser">recursive ascent parser</a> variation, the explicit parse stack structure is also replaced by the implicit stack used by subroutine calls.  Reductions terminate several levels of subroutine calls, which is clumsy in most languages.  So recursive ascent parsers are generally slower, less obvious, and harder to hand-modify than <a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">recursive descent parsers</a>.
</p><p>Another variation replaces the parse table by pattern-matching rules in non-procedural languages such as <a href="/wiki/Prolog" title="Prolog">Prolog</a>.
</p><p><b>GLR</b> <a href="/wiki/Generalized_LR_parser" class="mw-redirect" title="Generalized LR parser">Generalized LR parsers</a> use LR bottom-up techniques to find all possible parses of input text, not just one correct parse.   This is essential for ambiguous grammar such as used for human languages.  The multiple valid parse trees are computed simultaneously, without backtracking.  GLR is sometimes helpful for computer languages that are not easily described by a conflict-free LALR(1) grammar.
</p><p><b>LC</b> <a href="/wiki/Left_corner_parser" title="Left corner parser">Left corner parsers</a> use LR bottom-up techniques for recognizing the left end of alternative grammar rules.  When the alternatives have been narrowed down to a single possible rule, the parser then switches to top-down LL(1) techniques for parsing the rest of that rule.  LC parsers have smaller parse tables than LALR parsers and better error diagnostics.  There are no widely used generators for deterministic LC parsers.  Multiple-parse LC parsers are helpful with human languages with very large grammars.
</p>
<div class="mw-heading mw-heading3"><h3 id="Theory">Theory</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=16" title="Edit section: Theory"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>LR parsers were invented by <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a> in 1965 as an efficient generalization of <a href="/wiki/Simple_precedence_parser" title="Simple precedence parser">precedence parsers</a>.  Knuth proved that LR parsers were the most general-purpose parsers possible that would still be efficient in the worst cases.<sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (September 2019)">citation needed</span></a></i>]</sup>  
</p>
<dl><dd>"LR(<i>k</i>) grammars can be efficiently parsed with an execution time essentially proportional to the length of the string."<sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup></dd>
<dd>For every <span class="nowrap"><i>k</i> ≥ 1</span>, "a language can be generated by an LR(<i>k</i>) grammar if and only if it is deterministic [and context-free], if and only if it can be generated by an LR(1) grammar."<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span class="cite-bracket">[</span>9<span class="cite-bracket">]</span></a></sup></dd></dl>
<p>In other words, if a language was reasonable enough to allow an efficient one-pass parser, it could be described by an LR(<i>k</i>) grammar.  And that grammar could always be mechanically transformed into an equivalent (but larger) LR(1) grammar.  So an LR(1) parsing method was, in theory, powerful enough to handle any reasonable language.  In practice, the natural grammars for many programming languages are close to being LR(1).<sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (June 2012)">citation needed</span></a></i>]</sup>
</p><p>The canonical LR parsers described by Knuth had too many states and very big parse tables that were impractically large for the limited memory of computers of that era.  LR parsing became practical when <a href="/w/index.php?title=Frank_DeRemer&amp;action=edit&amp;redlink=1" class="new" title="Frank DeRemer (page does not exist)">Frank DeRemer</a> invented <a href="/wiki/Simple_LR_parser" title="Simple LR parser">SLR</a> and <a href="/wiki/LALR" class="mw-redirect" title="LALR">LALR</a> parsers with much fewer states.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span class="cite-bracket">[</span>10<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11"><span class="cite-bracket">[</span>11<span class="cite-bracket">]</span></a></sup>
</p><p>For full details on LR theory and how LR parsers are derived from grammars, see <i>The Theory of Parsing, Translation, and Compiling, Volume 1</i> (Aho and Ullman).<sup id="cite_ref-Compilers_2006_7-1" class="reference"><a href="#cite_note-Compilers_2006-7"><span class="cite-bracket">[</span>7<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-AhoUllman_1972_2-1" class="reference"><a href="#cite_note-AhoUllman_1972-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup>
</p><p><a href="/wiki/Earley_parser" title="Earley parser">Earley parsers</a> apply the techniques and <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> notation of LR parsers to the task of generating all possible parses for ambiguous grammars such as for human languages.
</p><p>While LR(<i>k</i>) grammars have equal generative power for all <i>k</i>≥1, the case of LR(0) grammars is slightly different.
A language <i>L</i> is said to have the <i>prefix property</i> if no word in <i>L</i> is a <a href="/wiki/Prefix_(formal_languages)" class="mw-redirect" title="Prefix (formal languages)">proper prefix</a> of another word in <i>L</i>.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12"><span class="cite-bracket">[</span>12<span class="cite-bracket">]</span></a></sup>
A language <i>L</i> has an LR(0) grammar if and only if <i>L</i> is a <a href="/wiki/Deterministic_context-free_language" title="Deterministic context-free language">deterministic context-free language</a> with the prefix property.<sup id="cite_ref-13" class="reference"><a href="#cite_note-13"><span class="cite-bracket">[</span>13<span class="cite-bracket">]</span></a></sup>
As a consequence, a language <i>L</i> is deterministic context-free if and only if <a href="/wiki/Concatenation#Concatenation_of_sets_of_strings" title="Concatenation"><i>L</i>$</a> has an LR(0) grammar, where "$" is not a symbol of <i>L</i><span class="nowrap" style="padding-left:0.1em;">'</span>s <a href="/wiki/Alphabet_(formal_languages)" title="Alphabet (formal languages)">alphabet</a>.<sup id="cite_ref-14" class="reference"><a href="#cite_note-14"><span class="cite-bracket">[</span>14<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading2"><h2 id="Additional_example_1_+_1"><span id="Additional_example_1_.2B_1"></span>Additional example 1 + 1</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=17" title="Edit section: Additional example 1 + 1"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<figure class="mw-halign-right" typeof="mw:File/Frame"><a href="/wiki/File:LR_Parser.png" class="mw-file-description"><img src="//upload.wikimedia.org/wikipedia/commons/2/2b/LR_Parser.png" decoding="async" width="325" height="278" class="mw-file-element" data-file-width="325" data-file-height="278"></a><figcaption>Bottom-up parse of 1+1</figcaption></figure>
<p>This example of LR parsing uses the following small grammar with goal symbol E:
</p>
<dl><dd>(1)   E → E * B</dd>
<dd>(2)   E → E + B</dd>
<dd>(3)   E → B</dd>
<dd>(4)   B → 0</dd>
<dd>(5)   B → 1</dd></dl>
<p>to parse the following input:
</p>
<dl><dd><b>1 + 1</b></dd></dl>
<div class="mw-heading mw-heading3"><h3 id="Action_and_goto_tables">Action and goto tables</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=18" title="Edit section: Action and goto tables"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The two LR(0) parsing tables for this grammar look as follows:
</p>
<table class="wikitable">

<tbody><tr style="text-align:center; background:#e0e0e0;">
<td><i><b>state</b></i>
</td>
<td colspan="5"><i><b>action</b></i>
</td>
<td colspan="2"><i><b>goto</b></i>
</td></tr>
<tr style="text-align:center;">
<td style="width:12%;">&nbsp;
</td>
<td style="width:11%; background:#d0e0ff;"><b>*</b>
</td>
<td style="width:11%; background:#d0e0ff;"><b>+</b>
</td>
<td style="width:11%; background:#d0e0ff;"><b>0</b>
</td>
<td style="width:11%; background:#d0e0ff;"><b>1</b>
</td>
<td style="width:11%; background:#d0e0ff;"><b>$</b>
</td>
<td style="width:11%; background:#c0e0d0;"><b>E</b>
</td>
<td style="width:11%; background:#c0e0d0;"><b>B</b>
</td></tr>
<tr style="text-align:center;">
<td><b>0</b></td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>s1</td>
<td>s2</td>
<td>&nbsp;</td>
<td>3</td>
<td>4
</td></tr>
<tr style="text-align:center;">
<td><b>1</b></td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr style="text-align:center;">
<td><b>2</b></td>
<td>r5</td>
<td>r5</td>
<td>r5</td>
<td>r5</td>
<td>r5</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr style="text-align:center;">
<td><b>3</b></td>
<td>s5</td>
<td>s6</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>acc</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr style="text-align:center;">
<td><b>4</b></td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr style="text-align:center;">
<td><b>5</b></td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>s1</td>
<td>s2</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>7
</td></tr>
<tr style="text-align:center;">
<td><b>6</b></td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>s1</td>
<td>s2</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>8
</td></tr>
<tr style="text-align:center;">
<td><b>7</b></td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr style="text-align:center;">
<td><b>8</b></td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr></tbody></table>
<p>The <b>action table</b> is indexed by a state of the parser and a terminal (including a special terminal $ that indicates the end of the input stream) and contains three types of actions:
</p>
<ul><li><i>shift</i>, which is written as "s<i>n</i>" and indicates that the next state is <i>n</i></li>
<li><i>reduce</i>, which is written as "r<i>m</i>" and indicates that a reduction with grammar rule <i>m</i> should be performed</li>
<li><i>accept</i>, which is written as "acc" and indicates that the parser accepts the string in the input stream.</li></ul>
<p>The <b>goto table</b> is indexed by a state of the parser and a nonterminal and simply indicates what the next state of the parser will be if it has recognized a certain nonterminal. This table is important to find out the next state after every reduction. After a reduction, the next state is found by looking up the <b>goto table</b> entry for top of the stack (i.e. current state) and the reduced rule's LHS (i.e. non-terminal).
</p>
<div class="mw-heading mw-heading3"><h3 id="Parsing_steps">Parsing steps</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=19" title="Edit section: Parsing steps"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The table below illustrates each step in the process. Here the state refers to the element at the top of the stack (the right-most element), and the next action is determined by referring to the action table above. A $ is appended to the input string to denote the end of the stream.
</p>
<table class="wikitable">
<tbody><tr>
<th>State
</th>
<th>Input stream
</th>
<th>Output stream
</th>
<th>Stack
</th>
<th>Next action
</th></tr>
<tr>
<td>0
</td>
<td>1 + 1 $
</td>
<td>
</td>
<td>[0]
</td>
<td>Shift 2
</td></tr>
<tr>
<td>2
</td>
<td>+ 1 $
</td>
<td>
</td>
<td>[0,2]
</td>
<td>Reduce 5
</td></tr>
<tr>
<td>4
</td>
<td>+ 1 $
</td>
<td>5
</td>
<td>[0,4]
</td>
<td>Reduce 3
</td></tr>
<tr>
<td>3
</td>
<td>+ 1 $
</td>
<td>5,3
</td>
<td>[0,3]
</td>
<td>Shift 6
</td></tr>
<tr>
<td>6
</td>
<td>1 $
</td>
<td>5,3
</td>
<td>[0,3,6]
</td>
<td>Shift 2
</td></tr>
<tr>
<td>2
</td>
<td>$
</td>
<td>5,3
</td>
<td>[0,3,6,2]
</td>
<td>Reduce 5
</td></tr>
<tr>
<td>8
</td>
<td>$
</td>
<td>5,3,5
</td>
<td>[0,3,6,8]
</td>
<td>Reduce 2
</td></tr>
<tr>
<td>3
</td>
<td>$
</td>
<td>5,3,5,2
</td>
<td>[0,3]
</td>
<td>Accept
</td></tr></tbody></table>
<div class="mw-heading mw-heading3"><h3 id="Walkthrough">Walkthrough</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=20" title="Edit section: Walkthrough"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The parser starts out with the stack containing just the initial state ('0'):
</p>
<dl><dd>[<b>0</b>]</dd></dl>
<p>The first symbol from the input string that the parser sees is '1'. To find the next action (shift, reduce, accept or error), the action table is indexed with the current state (the "current state" is just whatever is on the top of the stack), which in this case is 0, and the current input symbol, which is '1'. The action table specifies a shift to state 2, and so state 2 is pushed onto the stack (again, all the state information is in the stack, so "shifting to state 2" is the same as pushing 2 onto the stack). The resulting stack is
</p>
<dl><dd>[<b>0</b> '1' <b>2</b>]</dd></dl>
<p>where the top of the stack is 2. For the sake of explaining the symbol (e.g., '1', B) is shown that caused the transition to the next state, although strictly speaking it is not part of the stack.
</p><p>In state 2, the action table says to reduce with grammar rule 5 (regardless of what terminal the parser sees on the input stream), which means that the parser has just recognized the right-hand side of rule 5. In this case, the parser writes 5 to the output stream, pops one state from the stack (since the right-hand side of the rule has one symbol), and pushes on the stack the state from the cell in the goto table for state 0 and B, i.e., state 4. The resulting stack is:
</p>
<dl><dd>[<b>0</b> B <b>4</b>]</dd></dl>
<p>However, in state 4, the action table says the parser should now reduce with rule 3. So it writes 3 to the output stream, pops one state from the stack, and finds the new state in the goto table for state 0 and E, which is state 3. The resulting stack:
</p>
<dl><dd>[<b>0</b> E <b>3</b>]</dd></dl>
<p>The next terminal that the parser sees is a '+' and according to the action table it should then shift to state 6:
</p>
<dl><dd>[<b>0</b> E <b>3</b> '+' <b>6</b>]</dd></dl>
<p>The resulting stack can be interpreted as the history of a <a href="/wiki/Finite-state_machine" title="Finite-state machine">finite-state machine</a> that has just read a nonterminal E followed by a terminal '+'. The transition table of this automaton is defined by the shift actions in the action table and the goto actions in the goto table.
</p><p>The next terminal is now '1' and this means that the parser performs a shift and go to state 2:
</p>
<dl><dd>[<b>0</b> E <b>3</b> '+' <b>6</b> '1' <b>2</b>]</dd></dl>
<p>Just as the previous '1' this one is reduced to B giving the following stack:
</p>
<dl><dd>[<b>0</b> E <b>3</b> '+' <b>6</b> B <b>8</b>]</dd></dl>
<p>The stack corresponds with a list of states of a finite automaton that has read a nonterminal E, followed by a '+' and then a nonterminal B. In state 8 the parser always performs a reduce with rule 2. The top 3 states on the stack correspond with the 3 symbols in the right-hand side of rule 2. This time we pop 3 elements off of the stack (since the right-hand side of the rule has 3 symbols) and look up the goto state for E and 0, thus pushing state 3 back onto the stack
</p>
<dl><dd>[<b>0</b> E <b>3</b>]</dd></dl>
<p>Finally, the parser reads a '$' (end of input symbol) from the input stream, which means that according to the action table (the current state is 3) the parser accepts the input string. The rule numbers that will then have been written to the output stream will be [5, 3, 5, 2] which is indeed a <a href="/wiki/Rightmost_derivation" class="mw-redirect" title="Rightmost derivation">rightmost derivation</a> of the string "1 + 1" in reverse.
</p>
<div class="mw-heading mw-heading2"><h2 id="Constructing_LR(0)_parsing_tables"><span id="Constructing_LR.280.29_parsing_tables"></span>Constructing LR(0) parsing tables</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=21" title="Edit section: Constructing LR(0) parsing tables"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<div class="mw-heading mw-heading3"><h3 id="Items">Items</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=22" title="Edit section: Items"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The construction of these parsing tables is based on the notion of <i>LR(0) items</i> (simply called <i>items</i> here) which are grammar rules with a special dot added somewhere in the right-hand side. For example, the rule E → E + B has the following four corresponding items:
</p>
<dl><dd>E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E + B</dd>
<dd>E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + B</dd>
<dd>E → E + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> B</dd>
<dd>E → E + B <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>Rules of the form <i>A</i> → ε have only a single item <i>A</i> → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big>. The item E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + B, for example, indicates that the parser has recognized a string corresponding with E on the input stream and now expects to read a '+' followed by another string corresponding with B.
</p>
<div class="mw-heading mw-heading3"><h3 id="Item_sets">Item sets</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=23" title="Edit section: Item sets"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>It is usually not possible to characterize the state of the parser with a single item because it may not know in advance which rule it is going to use for reduction. For example, if there is also a rule E → E * B then the items E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + B and E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * B will both apply after a string corresponding with E has been read. Therefore, it is convenient to characterize the state of the parser by a set of items, in this case the set { E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + B, E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * B }.
</p>
<div class="mw-heading mw-heading3"><h3 id="Extension_of_Item_Set_by_expansion_of_non-terminals">Extension of Item Set by expansion of non-terminals</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=24" title="Edit section: Extension of Item Set by expansion of non-terminals"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>An item with a dot before a nonterminal, such as E → E + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> B, indicates that the parser expects to parse the nonterminal B next.  To ensure the item set contains all possible rules the parser may be in the midst of parsing, it must include all items describing how B itself will be parsed.  This means that if there are rules such as B → 1 and B → 0 then the item set must also include the items B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1 and B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 0. In general this can be formulated as follows:
</p>
<dl><dd>If there is an item of the form <i>A</i> → <i>v</i> <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <i>Bw</i> in an item set and in the grammar there is a rule of the form <i>B</i> → <i>w' </i> then the item <i>B</i> → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> <i>w' </i> should also be in the item set.</dd></dl>
<div class="mw-heading mw-heading3"><h3 id="Closure_of_item_sets">Closure of item sets</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=25" title="Edit section: Closure of item sets"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Thus, any set of items can be extended by recursively adding all the appropriate items until all nonterminals preceded by dots are accounted for. The minimal extension is called the <i>closure</i> of an item set and written as <b>clos</b>(<i>I</i>) where <i>I</i> is an item set. It is these closed item sets that are taken as the states of the parser, although only the ones that are actually reachable from the begin state will be included in the tables.
</p>
<div class="mw-heading mw-heading3"><h3 id="Augmented_grammar">Augmented grammar</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=26" title="Edit section: Augmented grammar"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Before the transitions between the different states are determined, the grammar is augmented with an extra rule
</p>
<dl><dd>(0) S → E eof</dd></dl>
<p>where S is a new start symbol and E the old start symbol. The parser will use this rule for reduction exactly when it has accepted the whole input string.
</p><p>For this example, the same grammar as above is augmented thus:
</p>
<dl><dd>(0) S → E eof</dd>
<dd>(1) E → E * B</dd>
<dd>(2) E → E + B</dd>
<dd>(3) E → B</dd>
<dd>(4) B → 0</dd>
<dd>(5) B → 1</dd></dl>
<p>It is for this augmented grammar that the item sets and the transitions between them will be determined.
</p>
<div class="mw-heading mw-heading2"><h2 id="Table_construction">Table construction</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=27" title="Edit section: Table construction"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<div class="mw-heading mw-heading3"><h3 id="Finding_the_reachable_item_sets_and_the_transitions_between_them">Finding the reachable item sets and the transitions between them</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=28" title="Edit section: Finding the reachable item sets and the transitions between them"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The first step of constructing the tables consists of determining the transitions between the closed item sets. These transitions will be determined as if we are considering a finite automaton that can read terminals as well as nonterminals. The begin state of this automaton is always the closure of the first item of the added rule: S → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E eof:
</p>
<dl><dd><b>Item set 0</b></dd>
<dd>S → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E eof</dd>
<dd><b>+</b> E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E * B</dd>
<dd><b>+</b> E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E + B</dd>
<dd><b>+</b> E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> B</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 0</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1</dd></dl>
<p>The <a href="/wiki/Boldface" class="mw-redirect" title="Boldface">boldfaced</a> "<b>+</b>" in front of an item indicates the items that were added for the closure (not to be confused with the mathematical '+' operator which is a terminal). The original items without a "<b>+</b>" are called the <i>kernel</i> of the item set.
</p><p>Starting at the begin state (S0), all of the states that can be reached from this state are now determined. The possible transitions for an item set can be found by looking at the symbols (terminals and nonterminals) found following the dots; in the case of item set 0 those symbols are the terminals '0' and '1' and the nonterminals E and B. To find the item set that each symbol <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\textstyle x\in \{0,1,E,B\}}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="false" scriptlevel="0">
        <mi>x</mi>
        <mo>∈<!-- ∈ --></mo>
        <mo fence="false" stretchy="false">{</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mi>E</mi>
        <mo>,</mo>
        <mi>B</mi>
        <mo fence="false" stretchy="false">}</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\textstyle x\in \{0,1,E,B\}}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ff417be1e2937f56fd61b045e3faea6ff39d9e3e" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.838ex; width:15.462ex; height:2.843ex;" alt="{\textstyle x\in \{0,1,E,B\}}"></span> leads to,  the following procedure is followed for each of the symbols:
</p>
<ol><li>Take the subset, <i>S</i>, of all items in the current item set where there is a dot in front of the symbol of interest, <i>x</i>.</li>
<li>For each item in <i>S</i>, move the dot to the right of <i>x</i>.</li>
<li>Close the resulting set of items.</li></ol>
<p>For the terminal '0' (i.e. where x = '0') this results in:
</p>
<dl><dd><b>Item set 1</b></dd>
<dd>B → 0 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>and for the terminal '1' (i.e. where x = '1') this results in:
</p>
<dl><dd><b>Item set 2</b></dd>
<dd>B → 1 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>and for the nonterminal E (i.e. where x = E) this results in:
</p>
<dl><dd><b>Item set 3</b></dd>
<dd>S → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> eof</dd>
<dd>E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> * B</dd>
<dd>E → E <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> + B</dd></dl>
<p>and for the nonterminal B (i.e. where x = B) this results in:
</p>
<dl><dd><b>Item set 4</b></dd>
<dd>E → B <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>The closure does not add new items in all cases - in the new sets above, for example, there are no nonterminals following the dot.
</p><p>Above procedure is continued until no more new item sets are found. For the item sets 1, 2, and 4 there will be no transitions since the dot is not in front of any symbol. For item set 3 though, we have dots in front of terminals '*' and '+'. For symbol <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\textstyle x={\texttt {*}}}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="false" scriptlevel="0">
        <mi>x</mi>
        <mo>=</mo>
        <mrow class="MJX-TeXAtom-ORD">
          <mrow class="MJX-TeXAtom-ORD">
            <mtext mathvariant="monospace">*</mtext>
          </mrow>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\textstyle x={\texttt {*}}}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/da489c020c898d8f3053e33bd608d5cfcb8036b7" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:5.649ex; height:1.843ex;" alt="{\textstyle x={\texttt {*}}}"></span> the transition goes to:
</p>
<dl><dd><b>Item set 5</b></dd>
<dd>E → E * <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> B</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 0</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1</dd></dl>
<p>and for  <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\textstyle x={\texttt {+}}}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="false" scriptlevel="0">
        <mi>x</mi>
        <mo>=</mo>
        <mrow class="MJX-TeXAtom-ORD">
          <mrow class="MJX-TeXAtom-ORD">
            <mtext mathvariant="monospace">+</mtext>
          </mrow>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\textstyle x={\texttt {+}}}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/12f5fc106b34b143f31e62cdf7017c4fcd045dbf" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:5.649ex; height:1.843ex;" alt="{\textstyle x={\texttt {+}}}"></span> the transition goes to:
</p>
<dl><dd><b>Item set 6</b></dd>
<dd>E → E + <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> B</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 0</dd>
<dd><b>+</b> B → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1</dd></dl>
<p>Now, the third iteration begins.
</p><p>For item set 5, the terminals '0' and '1' and the nonterminal B must be considered, but the resulting closed item sets for the terminals are equal to already found item sets 1 and 2, respectively. For the nonterminal B, the transition goes to:
</p>
<dl><dd><b>Item set 7</b></dd>
<dd>E → E * B <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>For item set 6, the terminal '0' and '1' and the nonterminal B must be considered, but as before, the resulting item sets for the terminals are equal to the already found item sets 1 and 2. For the nonterminal B the transition goes to:
</p>
<dl><dd><b>Item set 8</b></dd>
<dd>E → E + B <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>These final item sets 7 and 8 have no symbols beyond their dots so no more new item sets are added, so the item generating procedure is complete. The finite automaton, with item sets as its states is shown below.
</p><p>The transition table for the automaton now looks as follows:
</p>
<table class="wikitable" style="text-align:center">

<tbody><tr style="background:#e0e0d0;">
<th style="background:#d0e0ff; width:28%;">Item Set
</th>
<th style="width:12%;">*
</th>
<th style="width:12%;">+
</th>
<th style="width:12%;">0
</th>
<th style="width:12%;">1
</th>
<th style="width:12%;">E
</th>
<th style="width:12%;">B
</th></tr>
<tr>
<th>0
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4
</td></tr>
<tr>
<th>1
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr>
<th>2
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr>
<th>3
</th>
<td>5</td>
<td>6</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr>
<th>4
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr>
<th>5
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>1</td>
<td>2</td>
<td>&nbsp;</td>
<td>7
</td></tr>
<tr>
<th>6
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>1</td>
<td>2</td>
<td>&nbsp;</td>
<td>8
</td></tr>
<tr>
<th>7
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr>
<tr>
<th>8
</th>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;
</td></tr></tbody></table>
<div class="mw-heading mw-heading3"><h3 id="Constructing_the_action_and_goto_tables">Constructing the action and goto tables</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=29" title="Edit section: Constructing the action and goto tables"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>From this table and the found item sets, the action and goto table are constructed as follows:
</p>
<ol><li>The columns for nonterminals are copied to the goto table.</li>
<li>The columns for the terminals are copied to the action table as shift actions.</li>
<li>An extra column for '$' (end of input) is added to the action table. An <i>acc</i> action is added to the '$' column for each item set that contains an item of the form S → w <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> eof.</li>
<li>If an item set <i>i</i> contains an item of the form <i>A</i> → <i>w</i> <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> and <i>A</i> → <i>w</i> is rule <i>m</i> with <i>m</i> &gt; 0 then the row for state <i>i</i> in the action table is completely filled with the reduce action r<i>m</i>.</li></ol>
<p>The reader may verify that these steps produce the action and goto table presented earlier.
</p>
<div class="mw-heading mw-heading4"><h4 id="A_note_about_LR(0)_versus_SLR_and_LALR_parsing"><span id="A_note_about_LR.280.29_versus_SLR_and_LALR_parsing"></span>A note about LR(0) versus SLR and LALR parsing</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=30" title="Edit section: A note about LR(0) versus SLR and LALR parsing"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Only step 4 of the above procedure produces reduce actions, and so all reduce actions must occupy an entire table row, causing the reduction to occur regardless of the next symbol in the input stream.  This is why these are LR(0) parse tables: they don't do any lookahead (that is, they look ahead zero symbols) before deciding which reduction to perform.  A grammar that needs lookahead to disambiguate reductions would require a parse table row containing different reduce actions in different columns, and the above procedure is not capable of creating such rows.
</p><p>Refinements to the <b>LR</b>(0) table construction procedure (such as <a href="/wiki/Simple_LR_parser" title="Simple LR parser">SLR</a> and <a href="/wiki/LALR_parser" title="LALR parser">LALR</a>) are capable of constructing reduce actions that do not occupy entire rows.  Therefore, they are capable of parsing more grammars than LR(0) parsers.
</p>
<div class="mw-heading mw-heading3"><h3 id="Conflicts_in_the_constructed_tables">Conflicts in the constructed tables</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=31" title="Edit section: Conflicts in the constructed tables"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The automaton is constructed in such a way that it is guaranteed to be deterministic. However, when reduce actions are added to the action table it can happen that the same cell is filled with a reduce action and a shift action (a <i>shift-reduce conflict</i>) or with two different reduce actions (a <i>reduce-reduce conflict</i>). However, it  can be shown that when this happens the grammar is not an LR(0) grammar. A classic real-world example of a shift-reduce conflict is the <a href="/wiki/Dangling_else" title="Dangling else">dangling else</a> problem.
</p><p>A small example of a non-LR(0) grammar with a shift-reduce conflict is:
</p>
<dl><dd>(1) E → 1 E</dd>
<dd>(2) E → 1</dd></dl>
<p>One of the item sets found is:
</p>
<dl><dd><b>Item set 1</b></dd>
<dd>E → 1 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> E</dd>
<dd>E → 1 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd>
<dd><b>+</b> E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1 E</dd>
<dd><b>+</b> E → <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big> 1</dd></dl>
<p>There is a shift-reduce conflict in this item set: when constructing the action table according to the rules above,  the cell for  [item set 1, terminal '1'] contains <b>s1</b> (shift to state 1) <b>and r2</b> (reduce with grammar rule 2).
</p><p>A small example of a non-LR(0) grammar with a reduce-reduce conflict is:
</p>
<dl><dd>(1) E → A 1</dd>
<dd>(2) E → B 2</dd>
<dd>(3) A → 1</dd>
<dd>(4) B → 1</dd></dl>
<p>In this case the following item set is obtained:
</p>
<dl><dd><b>Item set 1</b></dd>
<dd>A → 1 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd>
<dd>B → 1 <big><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1239334494"><span class="tmp-color" style="color:#f7f">•</span></big></dd></dl>
<p>There is a reduce-reduce conflict in this item set because in the cells in the action table for this item set there will be both a reduce action for rule 3 and one for rule 4.
</p><p>Both examples above can be solved by letting the parser use the follow set (see <a href="/wiki/LL_parser" title="LL parser">LL parser</a>) of a nonterminal <i>A</i> to decide if it is going to use one of <i>A</i>s rules for a reduction; it will only use the rule <i>A</i> → <i>w</i> for a reduction if the next symbol on the input stream is in the follow set of <i>A</i>. This solution results in so-called <a href="/wiki/Simple_LR_parser" title="Simple LR parser">Simple LR parsers</a>.
</p>
<div class="mw-heading mw-heading2"><h2 id="See_also">See also</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=32" title="Edit section: See also"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<ul><li><a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">Canonical LR parser</a></li>
<li><a href="/wiki/SLR_grammar" title="SLR grammar">Simple LR</a></li>
<li><a href="/wiki/LALR_parser" title="LALR parser">Look-Ahead LR</a></li>
<li><a href="/wiki/GLR_parser" title="GLR parser">Generalized LR</a></li></ul>
<div class="mw-heading mw-heading2"><h2 id="References">References</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=33" title="Edit section: References"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<style data-mw-deduplicate="TemplateStyles:r1239543626">.mw-parser-output .reflist{margin-bottom:0.5em;list-style-type:decimal}@media screen{.mw-parser-output .reflist{font-size:90%}}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}</style><div class="reflist reflist-columns references-column-width" style="column-width: 33em;">
<ol class="references">
<li id="cite_note-Knuth_1965-1"><span class="mw-cite-backlink">^ <a href="#cite_ref-Knuth_1965_1-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Knuth_1965_1-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-Knuth_1965_1-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><style data-mw-deduplicate="TemplateStyles:r1238218222">.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}}</style><cite id="CITEREFKnuth1965" class="citation journal cs1"><a href="/wiki/Donald_Knuth" title="Donald Knuth">Knuth, D. E.</a> (July 1965). <a rel="nofollow" class="external text" href="https://doi.org/10.1016%2FS0019-9958%2865%2990426-2">"On the translation of languages from left to right"</a>. <i>Information and Control</i>. <b>8</b> (6): <span class="nowrap">607–</span>639. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1016%2FS0019-9958%2865%2990426-2">10.1016/S0019-9958(65)90426-2</a></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Information+and+Control&amp;rft.atitle=On+the+translation+of+languages+from+left+to+right&amp;rft.volume=8&amp;rft.issue=6&amp;rft.pages=607-639&amp;rft.date=1965-07&amp;rft_id=info%3Adoi%2F10.1016%2FS0019-9958%2865%2990426-2&amp;rft.aulast=Knuth&amp;rft.aufirst=D.+E.&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1016%252FS0019-9958%252865%252990426-2&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ALR+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-AhoUllman_1972-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-AhoUllman_1972_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-AhoUllman_1972_2-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFAhoUllman1972" class="citation book cs1"><a href="/wiki/Alfred_Aho" title="Alfred Aho">Aho, Alfred V.</a>; <a href="/wiki/Jeffrey_Ullman" title="Jeffrey Ullman">Ullman, Jeffrey D.</a> (1972). <a rel="nofollow" class="external text" href="https://archive.org/details/theoryofparsingt00ahoa"><i>The Theory of Parsing, Translation, and Compiling (Volume 1: Parsing.)</i></a> (Repr.&nbsp;ed.). <a href="/wiki/Englewood_Cliffs,_NJ" class="mw-redirect" title="Englewood Cliffs, NJ">Englewood Cliffs, NJ</a>: <a href="/wiki/Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-0139145568" title="Special:BookSources/978-0139145568"><bdi>978-0139145568</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Theory+of+Parsing%2C+Translation%2C+and+Compiling+%28Volume+1%3A+Parsing.%29&amp;rft.place=Englewood+Cliffs%2C+NJ&amp;rft.edition=Repr.&amp;rft.pub=Prentice+Hall&amp;rft.date=1972&amp;rft.isbn=978-0139145568&amp;rft.aulast=Aho&amp;rft.aufirst=Alfred+V.&amp;rft.au=Ullman%2C+Jeffrey+D.&amp;rft_id=https%3A%2F%2Farchive.org%2Fdetails%2Ftheoryofparsingt00ahoa&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ALR+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="https://cs.stackexchange.com/q/43">Language theoretic comparison of LL and LR grammars</a></span>
</li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text">
Engineering a Compiler (2nd edition), by Keith Cooper and Linda Torczon, <a href="/wiki/Morgan_Kaufmann" class="mw-redirect" title="Morgan Kaufmann">Morgan Kaufmann</a> 2011.</span>
</li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">
Crafting and Compiler, by Charles Fischer, Ron Cytron, and Richard LeBlanc, Addison Wesley 2009.</span>
</li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text">Flex &amp; Bison: Text Processing Tools, by John Levine, O'Reilly Media 2009.</span>
</li>
<li id="cite_note-Compilers_2006-7"><span class="mw-cite-backlink">^ <a href="#cite_ref-Compilers_2006_7-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Compilers_2006_7-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Compilers: Principles, Techniques, and Tools (2nd Edition), by Alfred Aho, Monica Lam, Ravi Sethi, and Jeffrey Ullman, Prentice Hall 2006.</span>
</li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text">Knuth (1965), p.638</span>
</li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text">Knuth (1965), p.635. Knuth didn't mention the restriction <span class="nowrap"><i>k</i> ≥ 1</span> there, but it is required by his theorems he referred to, viz. on p. 629 and p. 630. Similarly, the restriction to <a href="/wiki/Context-free_language" title="Context-free language">context-free languages</a> is tacitly understood from the context.</span>
</li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text">
Practical Translators for LR(<i>k</i>) Languages, by Frank DeRemer, MIT PhD dissertation 1969.</span>
</li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text">
Simple LR(<i>k</i>) Grammars, by Frank DeRemer, Comm. ACM 14:7 1971.</span>
</li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFHopcroftUllman1979" class="citation book cs1">Hopcroft, John E.; Ullman, Jeffrey D. (1979). <a rel="nofollow" class="external text" href="https://archive.org/details/introductiontoau00hopc"><i>Introduction to Automata Theory, Languages, and Computation</i></a>. Addison-Wesley. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/0-201-02988-X" title="Special:BookSources/0-201-02988-X"><bdi>0-201-02988-X</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Introduction+to+Automata+Theory%2C+Languages%2C+and+Computation&amp;rft.pub=Addison-Wesley&amp;rft.date=1979&amp;rft.isbn=0-201-02988-X&amp;rft.aulast=Hopcroft&amp;rft.aufirst=John+E.&amp;rft.au=Ullman%2C+Jeffrey+D.&amp;rft_id=https%3A%2F%2Farchive.org%2Fdetails%2Fintroductiontoau00hopc&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ALR+parser" class="Z3988"></span> Here: Exercise 5.8, p.121.</span>
</li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text">Hopcroft, Ullman (1979), Theorem 10.12, p.260</span>
</li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text">Hopcroft, Ullman (1979), Corollary p.260</span>
</li>
</ol></div>
<div class="mw-heading mw-heading2"><h2 id="Further_reading">Further reading</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=34" title="Edit section: Further reading"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<ul><li>Chapman, Nigel P., <a rel="nofollow" class="external text" href="https://books.google.com/books?id=nEA9AAAAIAAJ"><i>LR Parsing: Theory and Practice</i></a>, <a href="/wiki/Cambridge_University_Press" title="Cambridge University Press">Cambridge University Press</a>, 1987. <link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/0-521-30413-X" title="Special:BookSources/0-521-30413-X"><bdi>0-521-30413-X</bdi></a></li>
<li>Pager, D., A Practical General Method for Constructing LR(k) Parsers. Acta Informatica 7, 249 - 268 (1977)</li>
<li>"Compiler Construction: Principles and Practice" by Kenneth C. Louden. <link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/0-534-939724" title="Special:BookSources/0-534-939724"><bdi>0-534-939724</bdi></a></li></ul>
<div class="mw-heading mw-heading2"><h2 id="External_links">External links</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=LR_parser&amp;action=edit&amp;section=35" title="Edit section: External links"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<ul><li><a rel="nofollow" class="external text" href="http://dickgrune.com/Books/PTAPG_1st_Edition/">dickgrune.com</a>, Parsing Techniques - A Practical Guide 1st Ed. web page of book includes downloadable pdf.</li>
<li><a rel="nofollow" class="external text" href="http://www.supereasyfree.com/software/simulators/compilers/principles-techniques-and-tools/parsing-simulator/parsing-simulator.php">Parsing Simulator</a> This simulator is used to generate parsing tables LR and to resolve the exercises of the book</li>
<li><a rel="nofollow" class="external text" href="http://www.cs.uic.edu/~spopuri/cparser.html">Internals of an LALR(1) parser generated by GNU Bison</a> - Implementation issues</li>
<li><a rel="nofollow" class="external text" href="http://www.cs.grinnell.edu/~rebelsky/Courses/CS362/2004S/Outlines/outline.20.html">Course notes on LR parsing</a></li>
<li><a rel="nofollow" class="external text" href="https://web.archive.org/web/20150924022736/http://www.gobosoft.com/eiffel/gobo/geyacc/algorithm.html">Shift-reduce and Reduce-reduce conflicts in an LALR parser</a></li>
<li><a rel="nofollow" class="external text" href="https://web.archive.org/web/20120205044802/http://www.cs.uky.edu/~lewis/essays/compilers/bu-parse.html">A LR parser example</a></li>
<li><a rel="nofollow" class="external text" href="http://david.tribble.com/text/lrk_parsing.html">Practical LR(k) Parser Construction</a></li>
<li><a rel="nofollow" class="external text" href="http://david.tribble.com/text/honalee.html">The Honalee LR(k) Algorithm</a></li></ul>
<div class="navbox-styles"><style data-mw-deduplicate="TemplateStyles:r1129693374">.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:": "}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:" · ";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:" (";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:")";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:" "counter(listitem)"\a0 "}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:" ("counter(listitem)"\a0 "}</style><style data-mw-deduplicate="TemplateStyles:r1236075235">.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}body.skin--responsive .mw-parser-output .navbox-image img{max-width:none!important}@media print{body.ns-0 .mw-parser-output .navbox{display:none!important}}</style></div><div role="navigation" class="navbox" aria-labelledby="Parsing_algorithms116" style="padding:3px"><table class="nowraplinks mw-collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1129693374"><style data-mw-deduplicate="TemplateStyles:r1239400231">.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}html.skin-theme-clientpref-night .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}}@media print{.mw-parser-output .navbar{display:none!important}}</style><div class="navbar plainlinks hlist navbar-mini"><ul><li class="nv-view"><a href="/wiki/Template:Parsers" title="Template:Parsers"><abbr title="View this template">v</abbr></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Parsers" title="Template talk:Parsers"><abbr title="Discuss this template">t</abbr></a></li><li class="nv-edit"><a href="/wiki/Special:EditPage/Template:Parsers" title="Special:EditPage/Template:Parsers"><abbr title="Edit this template">e</abbr></a></li></ul></div><div id="Parsing_algorithms116" style="font-size:114%;margin:0 4em"><a href="/wiki/Parsing" title="Parsing">Parsing algorithms</a></div></th></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Top-down_parsing" title="Top-down parsing">Top-down</a></th><td class="navbox-list-with-group navbox-list navbox-odd hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Earley_parser" title="Earley parser">Earley</a></li>
<li><a href="/wiki/LL_parser" title="LL parser">LL</a></li>
<li><a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">Recursive descent</a>
<ul><li><a href="/wiki/Tail_recursive_parser" title="Tail recursive parser">Tail recursive</a></li></ul></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Bottom-up_parsing" title="Bottom-up parsing">Bottom-up</a></th><td class="navbox-list-with-group navbox-list navbox-even hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li>Precedence
<ul><li><a href="/wiki/Simple_precedence_parser" title="Simple precedence parser">Simple</a></li>
<li><a href="/wiki/Operator-precedence_parser" title="Operator-precedence parser">Operator</a>
<ul><li><a href="/wiki/Shunting_yard_algorithm" title="Shunting yard algorithm">Shunting-yard</a></li></ul></li></ul></li>
<li><a class="mw-selflink selflink">LR</a>
<ul><li><a href="/wiki/Simple_LR_parser" title="Simple LR parser">Simple</a></li>
<li><a href="/wiki/LALR_parser" title="LALR parser">Look-ahead</a></li>
<li><a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">Canonical</a></li>
<li><a href="/wiki/GLR_parser" title="GLR parser">Generalized</a></li></ul></li>
<li><a href="/wiki/CYK_algorithm" title="CYK algorithm">CYK</a></li>
<li><a href="/wiki/Recursive_ascent_parser" title="Recursive ascent parser">Recursive ascent</a></li>
<li><a href="/wiki/Shift-reduce_parser" title="Shift-reduce parser">Shift-reduce</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%">Mixed, other</th><td class="navbox-list-with-group navbox-list navbox-odd hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Parser_combinator" title="Parser combinator">Combinator</a></li>
<li><a href="/wiki/Chart_parser" title="Chart parser">Chart</a>
<ul><li><a href="/wiki/Left_corner_parser" title="Left corner parser">Left corner</a></li></ul></li>
<li>Statistical</li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%">Related topics</th><td class="navbox-list-with-group navbox-list navbox-even hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Parsing_expression_grammar" title="Parsing expression grammar">PEG</a></li>
<li><a href="/wiki/Definite_clause_grammar" title="Definite clause grammar">Definite clause grammar</a></li>
<li><a href="/wiki/Deterministic_parsing" title="Deterministic parsing">Deterministic parsing</a></li>
<li><a href="/wiki/Dynamic_programming" title="Dynamic programming">Dynamic programming</a></li>
<li><a href="/wiki/Memoization" title="Memoization">Memoization</a></li>
<li><a href="/wiki/Compiler-compiler" title="Compiler-compiler">Parser generator</a>
<ul><li><a href="/wiki/LALR_parser_generator" title="LALR parser generator">LALR</a></li></ul></li>
<li><a href="/wiki/Parse_tree" title="Parse tree">Parse tree</a></li>
<li><a href="/wiki/Abstract_syntax_tree" title="Abstract syntax tree">AST</a></li>
<li><a href="/wiki/Scannerless_parsing" title="Scannerless parsing">Scannerless parsing</a></li>
<li><a href="/wiki/History_of_compiler_construction" title="History of compiler construction">History of compiler construction</a></li>
<li><a href="/wiki/Comparison_of_parser_generators" title="Comparison of parser generators">Comparison of parser generators</a></li>
<li><a href="/wiki/Operator-precedence_grammar" title="Operator-precedence grammar">Operator-precedence grammar</a></li></ul>
</div></td></tr></tbody></table></div>
<!-- 
NewPP limit report
Parsed by mw‐web.eqiad.main‐5f578674cf‐tpmtn
Cached time: 20250806224116
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.508 seconds
Real time usage: 0.751 seconds
Preprocessor visited node count: 5196/1000000
Revision size: 63171/2097152 bytes
Post‐expand include size: 68339/2097152 bytes
Template argument size: 12266/2097152 bytes
Highest expansion depth: 14/100
Expensive parser function count: 4/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 123168/5000000 bytes
Lua time usage: 0.228/10.000 seconds
Lua memory usage: 5349360/52428800 bytes
Number of Wikibase entities loaded: 0/500
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  564.975      1 -total
 22.39%  126.472      1 Template:Reflist
 22.18%  125.325      1 Template:Short_description
 16.99%   95.981      1 Template:Parsers
 16.57%   93.593      1 Template:Cite_journal
 16.30%   92.096      1 Template:Navbox
 16.23%   91.707      2 Template:Pagetype
 11.25%   63.546    139 Template:Color
  9.71%   54.856      1 Template:Technical
  8.86%   50.036    139 Template:Ifsubst
-->

<!-- Saved in parser cache with key enwiki:pcache:18030:|#|:idhash:canonical and timestamp 20250806224116 and revision id 1287843227. Rendering was triggered because: page-view
 -->
</div><!--esi <esi:include src="/esitest-fa8a495983347898/content" /> --><noscript><img src="https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&amp;usesul3=1" alt="" width="1" height="1" style="border: none; position: absolute;"></noscript>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=LR_parser&amp;oldid=1287843227">https://en.wikipedia.org/w/index.php?title=LR_parser&amp;oldid=1287843227</a>"</div></div>
					<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Category</a>: <ul><li><a href="/wiki/Category:Parsing_algorithms" title="Category:Parsing algorithms">Parsing algorithms</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_with_short_description" title="Category:Articles with short description">Articles with short description</a></li><li><a href="/wiki/Category:Short_description_is_different_from_Wikidata" title="Category:Short description is different from Wikidata">Short description is different from Wikidata</a></li><li><a href="/wiki/Category:Wikipedia_articles_that_are_too_technical_from_November_2023" title="Category:Wikipedia articles that are too technical from November 2023">Wikipedia articles that are too technical from November 2023</a></li><li><a href="/wiki/Category:All_articles_that_are_too_technical" title="Category:All articles that are too technical">All articles that are too technical</a></li><li><a href="/wiki/Category:Pages_with_broken_anchors" title="Category:Pages with broken anchors">Pages with broken anchors</a></li><li><a href="/wiki/Category:Pages_containing_broken_anchor_template_with_unsupported_parameters" title="Category:Pages containing broken anchor template with unsupported parameters">Pages containing broken anchor template with unsupported parameters</a></li><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_September_2019" title="Category:Articles with unsourced statements from September 2019">Articles with unsourced statements from September 2019</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_June_2012" title="Category:Articles with unsourced statements from June 2012">Articles with unsourced statements from June 2012</a></li></ul></div></div>
				</div>
			</main>
			
		</div>
		<div class="mw-footer-container">
			
<footer id="footer" class="mw-footer" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 28 April 2025, at 20:10<span class="anonymous-show">&#160;(UTC)</span>.</li>
	<li id="footer-info-copyright">Text is available under the <a href="/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License" title="Wikipedia:Text of the Creative Commons Attribution-ShareAlike 4.0 International License">Creative Commons Attribution-ShareAlike 4.0 License</a>;
additional terms may apply. By using this site, you agree to the <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use" class="extiw" title="foundation:Special:MyLanguage/Policy:Terms of Use">Terms of Use</a> and <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy" class="extiw" title="foundation:Special:MyLanguage/Policy:Privacy policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a rel="nofollow" class="external text" href="https://wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="/wiki/Wikipedia:About">About Wikipedia</a></li>
	<li id="footer-places-disclaimers"><a href="/wiki/Wikipedia:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
	<li id="footer-places-wm-codeofconduct"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct">Code of Conduct</a></li>
	<li id="footer-places-developers"><a href="https://developer.wikimedia.org">Developers</a></li>
	<li id="footer-places-statslink"><a href="https://stats.wikimedia.org/#/en.wikipedia.org">Statistics</a></li>
	<li id="footer-places-cookiestatement"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement">Cookie statement</a></li>
	<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=LR_parser&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-copyrightico"><a href="https://www.wikimedia.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/static/images/footer/wikimedia-button.svg" width="84" height="29"><img src="/static/images/footer/wikimedia.svg" width="25" height="25" alt="Wikimedia Foundation" lang="en" loading="lazy"></picture></a></li>
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/w/resources/assets/poweredby_mediawiki.svg" width="88" height="31"><img src="/w/resources/assets/mediawiki_compact.svg" alt="Powered by MediaWiki" lang="en" width="25" height="25" loading="lazy"></picture></a></li>
</ul>

</footer>

		</div>
	</div> 
</div> 
<div class="vector-header-container vector-sticky-header-container no-font-mode-scale">
	<div id="vector-sticky-header" class="vector-sticky-header">
		<div class="vector-sticky-header-start">
			<div class="vector-sticky-header-icon-start vector-button-flush-left vector-button-flush-right" aria-hidden="true">
				<button class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-sticky-header-search-toggle" tabindex="-1" data-event-name="ui.vector-sticky-search-form.icon"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
			</button>
		</div>
			
		<div role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box">
			<div class="vector-typeahead-search-container">
				<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail">
					<form action="/w/index.php" id="vector-sticky-search-form" class="cdx-search-input cdx-search-input--has-end-button">
						<div  class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
							<div class="cdx-text-input cdx-text-input--has-start-icon">
								<input
									class="cdx-text-input__input mw-searchInput" autocomplete="off"
									
									type="search" name="search" placeholder="Search Wikipedia">
								<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
							</div>
							<input type="hidden" name="title" value="Special:Search">
						</div>
						<button class="cdx-button cdx-search-input__end-button">Search</button>
					</form>
				</div>
			</div>
		</div>
		<div class="vector-sticky-header-context-bar">
				<nav aria-label="Contents" class="vector-toc-landmark">
						
					<div id="vector-sticky-header-toc" class="vector-dropdown mw-portlet mw-portlet-sticky-header-toc vector-sticky-header-toc vector-button-flush-left"  >
						<input type="checkbox" id="vector-sticky-header-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-sticky-header-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
						<label id="vector-sticky-header-toc-label" for="vector-sticky-header-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
						</label>
						<div class="vector-dropdown-content">
					
						<div id="vector-sticky-header-toc-unpinned-container" class="vector-unpinned-container">
						</div>
					
						</div>
					</div>
			</nav>
				<div class="vector-sticky-header-context-bar-primary" aria-hidden="true" ><span class="mw-page-title-main">LR parser</span></div>
			</div>
		</div>
		<div class="vector-sticky-header-end" aria-hidden="true">
			<div class="vector-sticky-header-icons">
				<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-talk-sticky-header" tabindex="-1" data-event-name="talk-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbles mw-ui-icon-wikimedia-speechBubbles"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-subject-sticky-header" tabindex="-1" data-event-name="subject-sticky-header"><span class="vector-icon mw-ui-icon-article mw-ui-icon-wikimedia-article"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-history-sticky-header" tabindex="-1" data-event-name="history-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-history mw-ui-icon-wikimedia-wikimedia-history"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only mw-watchlink" id="ca-watchstar-sticky-header" tabindex="-1" data-event-name="watch-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-star mw-ui-icon-wikimedia-wikimedia-star"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-edit-sticky-header" tabindex="-1" data-event-name="wikitext-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-wikiText mw-ui-icon-wikimedia-wikimedia-wikiText"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-ve-edit-sticky-header" tabindex="-1" data-event-name="ve-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-edit mw-ui-icon-wikimedia-wikimedia-edit"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-viewsource-sticky-header" tabindex="-1" data-event-name="ve-edit-protected-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-editLock mw-ui-icon-wikimedia-wikimedia-editLock"></span>

<span></span>
			</a>
		</div>
			<div class="vector-sticky-header-buttons">
				<button class="cdx-button cdx-button--weight-quiet mw-interlanguage-selector" id="p-lang-btn-sticky-header" tabindex="-1" data-event-name="ui.dropdown-p-lang-btn-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-language mw-ui-icon-wikimedia-wikimedia-language"></span>

<span>14 languages</span>
			</button>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive" id="ca-addsection-sticky-header" tabindex="-1" data-event-name="addsection-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbleAdd-progressive mw-ui-icon-wikimedia-speechBubbleAdd-progressive"></span>

<span>Add topic</span>
			</a>
		</div>
			<div class="vector-sticky-header-icon-end">
				<div class="vector-user-links">
				</div>
			</div>
		</div>
	</div>
</div>
<div class="mw-portlet mw-portlet-dock-bottom emptyPortlet" id="p-dock-bottom">
	<ul>
		
	</ul>
</div>
<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgHostname":"mw-web.eqiad.main-5f578674cf-797rv","wgBackendResponseTime":266,"wgPageParseReport":{"limitreport":{"cputime":"0.508","walltime":"0.751","ppvisitednodes":{"value":5196,"limit":1000000},"revisionsize":{"value":63171,"limit":2097152},"postexpandincludesize":{"value":68339,"limit":2097152},"templateargumentsize":{"value":12266,"limit":2097152},"expansiondepth":{"value":14,"limit":100},"expensivefunctioncount":{"value":4,"limit":500},"unstrip-depth":{"value":1,"limit":20},"unstrip-size":{"value":123168,"limit":5000000},"entityaccesscount":{"value":0,"limit":500},"timingprofile":["100.00%  564.975      1 -total"," 22.39%  126.472      1 Template:Reflist"," 22.18%  125.325      1 Template:Short_description"," 16.99%   95.981      1 Template:Parsers"," 16.57%   93.593      1 Template:Cite_journal"," 16.30%   92.096      1 Template:Navbox"," 16.23%   91.707      2 Template:Pagetype"," 11.25%   63.546    139 Template:Color","  9.71%   54.856      1 Template:Technical","  8.86%   50.036    139 Template:Ifsubst"]},"scribunto":{"limitreport-timeusage":{"value":"0.228","limit":"10.000"},"limitreport-memusage":{"value":5349360,"limit":52428800}},"cachereport":{"origin":"mw-web.eqiad.main-5f578674cf-tpmtn","timestamp":"20250806224116","ttl":2592000,"transientcontent":false}}});});</script>
<script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"Article","name":"LR parser","url":"https:\/\/en.wikipedia.org\/wiki\/LR_parser","sameAs":"http:\/\/www.wikidata.org\/entity\/Q1756442","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q1756442","author":{"@type":"Organization","name":"Contributors to Wikimedia projects"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2001-08-22T14:47:56Z","dateModified":"2025-04-28T20:10:10Z","headline":"type of parser"}</script>
</body>
</html>