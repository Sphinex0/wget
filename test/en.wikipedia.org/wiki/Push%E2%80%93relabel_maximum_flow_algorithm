<!DOCTYPE html>
<html class="client-nojs vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available" lang="en" dir="ltr">
<head>
<meta charset="UTF-8">
<title>Push–relabel maximum flow algorithm - Wikipedia</title>
<script>(function(){var className="client-js vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available";var cookie=document.cookie.match(/(?:^|; )enwikimwclientpreferences=([^;]+)/);if(cookie){cookie[1].split('%2C').forEach(function(pref){className=className.replace(new RegExp('(^| )'+pref.replace(/-clientpref-\w+$|[^\w-]+/g,'')+'-clientpref-\\w+( |$)'),'$1'+pref+'$2');});}document.documentElement.className=className;}());RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"9a585d78-e414-4d15-90c3-f9ba81a066fd","wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Push–relabel_maximum_flow_algorithm","wgTitle":"Push–relabel maximum flow algorithm","wgCurRevisionId":1303395268,"wgRevisionId":1303395268,"wgArticleId":3444072,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles with short description","Short description is different from Wikidata","Wikipedia articles with style issues from July 2025","All articles with style issues","All articles with unsourced statements","Articles with unsourced statements from December 2024","Articles with example C code","Articles with example Python (programming language) code","Network flow problem","Graph algorithms"],"wgPageViewLanguage":"en","wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Push–relabel_maximum_flow_algorithm","wgRelevantArticleId":3444072,"wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgNoticeProject":"wikipedia","wgCiteReferencePreviewsActive":false,"wgFlaggedRevsParams":{"tags":{"status":{"levels":1}}},"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgPopupsFlags":0,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgMFDisplayWikibaseDescriptions":{"search":true,"watchlist":true,"tagline":false,"nearby":true},"wgWMESchemaEditAttemptStepOversample":false,"wgWMEPageLength":40000,"wgMetricsPlatformUserExperiments":{"active_experiments":[],"overrides":[],"enrolled":[],"assigned":[],"subject_ids":[],"sampling_units":[]},"wgEditSubmitButtonLabelPublish":true,"wgULSPosition":"interlanguage","wgULSisCompactLinksEnabled":false,"wgVector2022LanguageInHeader":true,"wgULSisLanguageSelectorEmpty":false,"wgWikibaseItemId":"Q583889","wgCheckUserClientHintsHeadersJsApi":["brands","architecture","bitness","fullVersionList","mobile","model","platform","platformVersion"],"GEHomepageSuggestedEditsEnableTopics":true,"wgGESuggestedEditsTaskTypes":{"taskTypes":["copyedit","link-recommendation"],"unavailableTaskTypes":[]},"wgGETopicsMatchModeEnabled":false,"wgGELevelingUpEnabledForUser":false};
RLSTATE={"ext.globalCssJs.user.styles":"ready","site.styles":"ready","user.styles":"ready","ext.globalCssJs.user":"ready","user":"ready","user.options":"loading","ext.cite.styles":"ready","ext.math.styles":"ready","ext.pygments":"ready","skins.vector.search.codex.styles":"ready","skins.vector.styles":"ready","skins.vector.icons":"ready","jquery.makeCollapsible.styles":"ready","ext.wikimediamessages.styles":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","wikibase.client.init":"ready"};RLPAGEMODULES=["ext.xLab","ext.cite.ux-enhancements","ext.pygments.view","site","mediawiki.page.ready","jquery.makeCollapsible","mediawiki.toc","skins.vector.js","ext.centralNotice.geoIP","ext.centralNotice.startUp","ext.gadget.ReferenceTooltips","ext.gadget.switcher","ext.urlShortener.toolbar","ext.centralauth.centralautologin","mmv.bootstrap","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.echo.centralauth","ext.eventLogging","ext.wikimediaEvents","ext.navigationTiming","ext.uls.interface","ext.cx.eventlogging.campaigns","ext.cx.uls.quick.actions","wikibase.client.vector-2022","ext.checkUser.clientHints","ext.quicksurveys.init","ext.growthExperiments.SuggestedEditSession"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.impl(function(){return["user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
}];});});</script>
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=ext.cite.styles%7Cext.math.styles%7Cext.pygments%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediamessages.styles%7Cjquery.makeCollapsible.styles%7Cskins.vector.icons%2Cstyles%7Cskins.vector.search.codex.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector-2022">
<script async="" src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector-2022"></script>
<meta name="ResourceLoaderDynamicStyles" content="">
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector-2022">
<meta name="generator" content="MediaWiki 1.45.0-wmf.12">
<meta name="referrer" content="origin">
<meta name="referrer" content="origin-when-cross-origin">
<meta name="robots" content="max-image-preview:standard">
<meta name="format-detection" content="telephone=no">
<meta name="viewport" content="width=1120">
<meta property="og:title" content="Push–relabel maximum flow algorithm - Wikipedia">
<meta property="og:type" content="website">
<link rel="preconnect" href="//upload.wikimedia.org">
<link rel="alternate" media="only screen and (max-width: 640px)" href="//en.m.wikipedia.org/wiki/Push%E2%80%93relabel_maximum_flow_algorithm">
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit">
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png">
<link rel="icon" href="/static/favicon/wikipedia.ico">
<link rel="search" type="application/opensearchdescription+xml" href="/w/rest.php/v1/search" title="Wikipedia (en)">
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd">
<link rel="canonical" href="https://en.wikipedia.org/wiki/Push%E2%80%93relabel_maximum_flow_algorithm">
<link rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/deed.en">
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<link rel="dns-prefetch" href="auth.wikimedia.org">
</head>
<body class="skin--responsive skin-vector skin-vector-search-vue mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-Push–relabel_maximum_flow_algorithm rootpage-Push–relabel_maximum_flow_algorithm skin-vector-2022 action-view"><a class="mw-jump-link" href="#bodyContent">Jump to content</a>
<div class="vector-header-container">
	<header class="vector-header mw-header no-font-mode-scale">
		<div class="vector-header-start">
			<nav class="vector-main-menu-landmark" aria-label="Site">
				
<div id="vector-main-menu-dropdown" class="vector-dropdown vector-main-menu-dropdown vector-button-flush-left vector-button-flush-right"  title="Main menu" >
	<input type="checkbox" id="vector-main-menu-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-main-menu-dropdown" class="vector-dropdown-checkbox "  aria-label="Main menu"  >
	<label id="vector-main-menu-dropdown-label" for="vector-main-menu-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-menu mw-ui-icon-wikimedia-menu"></span>

<span class="vector-dropdown-label-text">Main menu</span>
	</label>
	<div class="vector-dropdown-content">


				<div id="vector-main-menu-unpinned-container" class="vector-unpinned-container">
		
<div id="vector-main-menu" class="vector-main-menu vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-main-menu-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="main-menu-pinned"
	data-pinnable-element-id="vector-main-menu"
	data-pinned-container-id="vector-main-menu-pinned-container"
	data-unpinned-container-id="vector-main-menu-unpinned-container"
>
	<div class="vector-pinnable-header-label">Main menu</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-main-menu.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-main-menu.unpin">hide</button>
</div>

	
<div id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation"  >
	<div class="vector-menu-heading">
		Navigation
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-mainpage-description" class="mw-list-item"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"><span>Main page</span></a></li><li id="n-contents" class="mw-list-item"><a href="/wiki/Wikipedia:Contents" title="Guides to browsing Wikipedia"><span>Contents</span></a></li><li id="n-currentevents" class="mw-list-item"><a href="/wiki/Portal:Current_events" title="Articles related to current events"><span>Current events</span></a></li><li id="n-randompage" class="mw-list-item"><a href="/wiki/Special:Random" title="Visit a randomly selected article [x]" accesskey="x"><span>Random article</span></a></li><li id="n-aboutsite" class="mw-list-item"><a href="/wiki/Wikipedia:About" title="Learn about Wikipedia and how it works"><span>About Wikipedia</span></a></li><li id="n-contactpage" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia"><span>Contact us</span></a></li>
		</ul>
		
	</div>
</div>

	
	
<div id="p-interaction" class="vector-menu mw-portlet mw-portlet-interaction"  >
	<div class="vector-menu-heading">
		Contribute
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-help" class="mw-list-item"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia"><span>Help</span></a></li><li id="n-introduction" class="mw-list-item"><a href="/wiki/Help:Introduction" title="Learn how to edit Wikipedia"><span>Learn to edit</span></a></li><li id="n-portal" class="mw-list-item"><a href="/wiki/Wikipedia:Community_portal" title="The hub for editors"><span>Community portal</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="/wiki/Special:RecentChanges" title="A list of recent changes to Wikipedia [r]" accesskey="r"><span>Recent changes</span></a></li><li id="n-upload" class="mw-list-item"><a href="/wiki/Wikipedia:File_upload_wizard" title="Add images or other media for use on Wikipedia"><span>Upload file</span></a></li><li id="n-specialpages" class="mw-list-item"><a href="/wiki/Special:SpecialPages"><span>Special pages</span></a></li>
		</ul>
		
	</div>
</div>

</div>

				</div>

	</div>
</div>

		</nav>
			
<a href="/wiki/Main_Page" class="mw-logo">
	<img class="mw-logo-icon" src="/static/images/icons/wikipedia.png" alt="" aria-hidden="true" height="50" width="50">
	<span class="mw-logo-container skin-invert">
		<img class="mw-logo-wordmark" alt="Wikipedia" src="/static/images/mobile/copyright/wikipedia-wordmark-en.svg" style="width: 7.5em; height: 1.125em;">
		<img class="mw-logo-tagline" alt="The Free Encyclopedia" src="/static/images/mobile/copyright/wikipedia-tagline-en.svg" width="117" height="13" style="width: 7.3125em; height: 0.8125em;">
	</span>
</a>

		</div>
		<div class="vector-header-end">
			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-collapses vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<a href="/wiki/Special:Search" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only search-toggle" title="Search Wikipedia [f]" accesskey="f"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
	</a>
	<div class="vector-typeahead-search-container">
		<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail cdx-typeahead-search--auto-expand-width">
			<form action="/w/index.php" id="searchform" class="cdx-search-input cdx-search-input--has-end-button">
				<div id="simpleSearch" class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
					<div class="cdx-text-input cdx-text-input--has-start-icon">
						<input
							class="cdx-text-input__input mw-searchInput" autocomplete="off"
							 type="search" name="search" placeholder="Search Wikipedia" aria-label="Search Wikipedia" autocapitalize="sentences" spellcheck="false" title="Search Wikipedia [f]" accesskey="f" id="searchInput"
							>
						<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
					</div>
					<input type="hidden" name="title" value="Special:Search">
				</div>
				<button class="cdx-button cdx-search-input__end-button">Search</button>
			</form>
		</div>
	</div>
</div>

			<nav class="vector-user-links vector-user-links-wide" aria-label="Personal tools">
	<div class="vector-user-links-main">
	
<div id="p-vector-user-menu-preferences" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-userpage" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	<nav class="vector-appearance-landmark" aria-label="Appearance">
		
<div id="vector-appearance-dropdown" class="vector-dropdown "  title="Change the appearance of the page&#039;s font size, width, and color" >
	<input type="checkbox" id="vector-appearance-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-appearance-dropdown" class="vector-dropdown-checkbox "  aria-label="Appearance"  >
	<label id="vector-appearance-dropdown-label" for="vector-appearance-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-appearance mw-ui-icon-wikimedia-appearance"></span>

<span class="vector-dropdown-label-text">Appearance</span>
	</label>
	<div class="vector-dropdown-content">


			<div id="vector-appearance-unpinned-container" class="vector-unpinned-container">
				
			</div>
		
	</div>
</div>

	</nav>
	
<div id="p-vector-user-menu-notifications" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-overflow" class="vector-menu mw-portlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			<li id="pt-sitesupport-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en" class=""><span>Donate</span></a>
</li>
<li id="pt-createaccount-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:CreateAccount&amp;returnto=Push%E2%80%93relabel+maximum+flow+algorithm" title="You are encouraged to create an account and log in; however, it is not mandatory" class=""><span>Create account</span></a>
</li>
<li id="pt-login-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:UserLogin&amp;returnto=Push%E2%80%93relabel+maximum+flow+algorithm" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o" class=""><span>Log in</span></a>
</li>

			
		</ul>
		
	</div>
</div>

	</div>
	
<div id="vector-user-links-dropdown" class="vector-dropdown vector-user-menu vector-button-flush-right vector-user-menu-logged-out"  title="Log in and more options" >
	<input type="checkbox" id="vector-user-links-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-user-links-dropdown" class="vector-dropdown-checkbox "  aria-label="Personal tools"  >
	<label id="vector-user-links-dropdown-label" for="vector-user-links-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-ellipsis mw-ui-icon-wikimedia-ellipsis"></span>

<span class="vector-dropdown-label-text">Personal tools</span>
	</label>
	<div class="vector-dropdown-content">


		
<div id="p-personal" class="vector-menu mw-portlet mw-portlet-personal user-links-collapsible-item"  title="User menu" >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-sitesupport" class="user-links-collapsible-item mw-list-item"><a href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en"><span>Donate</span></a></li><li id="pt-createaccount" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Push%E2%80%93relabel+maximum+flow+algorithm" title="You are encouraged to create an account and log in; however, it is not mandatory"><span class="vector-icon mw-ui-icon-userAdd mw-ui-icon-wikimedia-userAdd"></span> <span>Create account</span></a></li><li id="pt-login" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Push%E2%80%93relabel+maximum+flow+algorithm" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o"><span class="vector-icon mw-ui-icon-logIn mw-ui-icon-wikimedia-logIn"></span> <span>Log in</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-user-menu-anon-editor" class="vector-menu mw-portlet mw-portlet-user-menu-anon-editor"  >
	<div class="vector-menu-heading">
		Pages for logged out editors <a href="/wiki/Help:Introduction" aria-label="Learn more about editing"><span>learn more</span></a>
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-anoncontribs" class="mw-list-item"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y"><span>Contributions</span></a></li><li id="pt-anontalk" class="mw-list-item"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

	
	</div>
</div>

</nav>

		</div>
	</header>
</div>
<div class="mw-page-container">
	<div class="mw-page-container-inner">
		<div class="vector-sitenotice-container">
			<div id="siteNotice"><!-- CentralNotice --></div>
		</div>
		<div class="vector-column-start">
			<div class="vector-main-menu-container">
		<div id="mw-navigation">
			<nav id="mw-panel" class="vector-main-menu-landmark" aria-label="Site">
				<div id="vector-main-menu-pinned-container" class="vector-pinned-container">
				
				</div>
		</nav>
		</div>
	</div>
	<div class="vector-sticky-pinned-container">
				<nav id="mw-panel-toc" aria-label="Contents" data-event-name="ui.sidebar-toc" class="mw-table-of-contents-container vector-toc-landmark">
					<div id="vector-toc-pinned-container" class="vector-pinned-container">
					<div id="vector-toc" class="vector-toc vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-toc-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="toc-pinned"
	data-pinnable-element-id="vector-toc"
	
	
>
	<h2 class="vector-pinnable-header-label">Contents</h2>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-toc.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-toc.unpin">hide</button>
</div>


	<ul class="vector-toc-contents" id="mw-panel-toc-list">
		<li id="toc-mw-content-text"
			class="vector-toc-list-item vector-toc-level-1">
			<a href="#" class="vector-toc-link">
				<div class="vector-toc-text">(Top)</div>
			</a>
		</li>
		<li id="toc-History"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#History">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">1</span>
				<span>History</span>
			</div>
		</a>
		
		<ul id="toc-History-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-Concepts"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#Concepts">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">2</span>
				<span>Concepts</span>
			</div>
		</a>
		
			<button aria-controls="toc-Concepts-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Concepts subsection</span>
			</button>
		
		<ul id="toc-Concepts-sublist" class="vector-toc-list">
			<li id="toc-Definitions_and_notations"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Definitions_and_notations">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.1</span>
					<span>Definitions and notations</span>
				</div>
			</a>
			
			<ul id="toc-Definitions_and_notations-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Operations"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Operations">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2</span>
					<span>Operations</span>
				</div>
			</a>
			
			<ul id="toc-Operations-sublist" class="vector-toc-list">
				<li id="toc-Initialization"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Initialization">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2.1</span>
					<span>Initialization</span>
				</div>
			</a>
			
			<ul id="toc-Initialization-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Push"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Push">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2.2</span>
					<span>Push</span>
				</div>
			</a>
			
			<ul id="toc-Push-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Relabel"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Relabel">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2.3</span>
					<span>Relabel</span>
				</div>
			</a>
			
			<ul id="toc-Relabel-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Effects_of_push_and_relabel"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Effects_of_push_and_relabel">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">2.2.4</span>
					<span>Effects of push and relabel</span>
				</div>
			</a>
			
			<ul id="toc-Effects_of_push_and_relabel-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
		</li>
	</ul>
	</li>
	<li id="toc-The_generic_push–relabel_algorithm"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#The_generic_push–relabel_algorithm">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">3</span>
				<span>The generic push–relabel algorithm</span>
			</div>
		</a>
		
			<button aria-controls="toc-The_generic_push–relabel_algorithm-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle The generic push–relabel algorithm subsection</span>
			</button>
		
		<ul id="toc-The_generic_push–relabel_algorithm-sublist" class="vector-toc-list">
			<li id="toc-Correctness"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Correctness">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.1</span>
					<span>Correctness</span>
				</div>
			</a>
			
			<ul id="toc-Correctness-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Time_complexity"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Time_complexity">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.2</span>
					<span>Time complexity</span>
				</div>
			</a>
			
			<ul id="toc-Time_complexity-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Example"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Example">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">3.3</span>
					<span>Example</span>
				</div>
			</a>
			
			<ul id="toc-Example-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-Practical_implementations"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#Practical_implementations">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">4</span>
				<span>Practical implementations</span>
			</div>
		</a>
		
			<button aria-controls="toc-Practical_implementations-sublist" class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-toc-toggle">
				<span class="vector-icon mw-ui-icon-wikimedia-expand"></span>
				<span>Toggle Practical implementations subsection</span>
			</button>
		
		<ul id="toc-Practical_implementations-sublist" class="vector-toc-list">
			<li id="toc-&quot;Current-arc&quot;_data_structure_and_discharge_operation"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#&quot;Current-arc&quot;_data_structure_and_discharge_operation">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.1</span>
					<span>"Current-arc" data structure and discharge operation</span>
				</div>
			</a>
			
			<ul id="toc-&quot;Current-arc&quot;_data_structure_and_discharge_operation-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Active_node_selection_rules"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Active_node_selection_rules">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.2</span>
					<span>Active node selection rules</span>
				</div>
			</a>
			
			<ul id="toc-Active_node_selection_rules-sublist" class="vector-toc-list">
				<li id="toc-FIFO_selection_rule"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#FIFO_selection_rule">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.2.1</span>
					<span>FIFO selection rule</span>
				</div>
			</a>
			
			<ul id="toc-FIFO_selection_rule-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Relabel-to-front_selection_rule"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Relabel-to-front_selection_rule">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.2.2</span>
					<span>Relabel-to-front selection rule</span>
				</div>
			</a>
			
			<ul id="toc-Relabel-to-front_selection_rule-sublist" class="vector-toc-list">
			</ul>
		</li>
		<li id="toc-Highest_label_selection_rule"
			class="vector-toc-list-item vector-toc-level-3">
			<a class="vector-toc-link" href="#Highest_label_selection_rule">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.2.3</span>
					<span>Highest label selection rule</span>
				</div>
			</a>
			
			<ul id="toc-Highest_label_selection_rule-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
		</li>
		<li id="toc-Implementation_techniques"
			class="vector-toc-list-item vector-toc-level-2">
			<a class="vector-toc-link" href="#Implementation_techniques">
				<div class="vector-toc-text">
					<span class="vector-toc-numb">4.3</span>
					<span>Implementation techniques</span>
				</div>
			</a>
			
			<ul id="toc-Implementation_techniques-sublist" class="vector-toc-list">
			</ul>
		</li>
	</ul>
	</li>
	<li id="toc-Sample_implementations"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#Sample_implementations">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">5</span>
				<span>Sample implementations</span>
			</div>
		</a>
		
		<ul id="toc-Sample_implementations-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-References"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#References">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">6</span>
				<span>References</span>
			</div>
		</a>
		
		<ul id="toc-References-sublist" class="vector-toc-list">
		</ul>
	</li>
</ul>
</div>

					</div>
		</nav>
			</div>
		</div>
		<div class="mw-content-container">
			<main id="content" class="mw-body">
				<header class="mw-body-header vector-page-titlebar no-font-mode-scale">
					<nav aria-label="Contents" class="vector-toc-landmark">
						
<div id="vector-page-titlebar-toc" class="vector-dropdown vector-page-titlebar-toc vector-button-flush-left"  title="Table of Contents" >
	<input type="checkbox" id="vector-page-titlebar-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-titlebar-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
	<label id="vector-page-titlebar-toc-label" for="vector-page-titlebar-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
	</label>
	<div class="vector-dropdown-content">


							<div id="vector-page-titlebar-toc-unpinned-container" class="vector-unpinned-container">
			</div>
		
	</div>
</div>

					</nav>
					<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Push–relabel maximum flow algorithm</span></h1>
							
<div id="p-lang-btn" class="vector-dropdown mw-portlet mw-portlet-lang"  >
	<input type="checkbox" id="p-lang-btn-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-p-lang-btn" class="vector-dropdown-checkbox mw-interlanguage-selector" aria-label="Go to an article in another language. Available in 9 languages"   >
	<label id="p-lang-btn-label" for="p-lang-btn-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive mw-portlet-lang-heading-9" aria-hidden="true"  ><span class="vector-icon mw-ui-icon-language-progressive mw-ui-icon-wikimedia-language-progressive"></span>

<span class="vector-dropdown-label-text">9 languages</span>
	</label>
	<div class="vector-dropdown-content">

		<div class="vector-menu-content">
			
			<ul class="vector-menu-content-list">
				
				<li class="interlanguage-link interwiki-cs mw-list-item"><a href="https://cs.wikipedia.org/wiki/Goldberg%C5%AFv_algoritmus" title="Goldbergův algoritmus – Czech" lang="cs" hreflang="cs" data-title="Goldbergův algoritmus" data-language-autonym="Čeština" data-language-local-name="Czech" class="interlanguage-link-target"><span>Čeština</span></a></li><li class="interlanguage-link interwiki-de mw-list-item"><a href="https://de.wikipedia.org/wiki/Goldberg-Tarjan-Algorithmus" title="Goldberg-Tarjan-Algorithmus – German" lang="de" hreflang="de" data-title="Goldberg-Tarjan-Algorithmus" data-language-autonym="Deutsch" data-language-local-name="German" class="interlanguage-link-target"><span>Deutsch</span></a></li><li class="interlanguage-link interwiki-fa mw-list-item"><a href="https://fa.wikipedia.org/wiki/%D8%A7%D9%84%DA%AF%D9%88%D8%B1%DB%8C%D8%AA%D9%85_%D8%A7%D8%B1%D8%B3%D8%A7%D9%84-%D8%A8%D8%B1%DA%86%D8%B3%D8%A8" title="الگوریتم ارسال-برچسب – Persian" lang="fa" hreflang="fa" data-title="الگوریتم ارسال-برچسب" data-language-autonym="فارسی" data-language-local-name="Persian" class="interlanguage-link-target"><span>فارسی</span></a></li><li class="interlanguage-link interwiki-fr mw-list-item"><a href="https://fr.wikipedia.org/wiki/Algorithme_de_poussage/r%C3%A9%C3%A9tiquetage" title="Algorithme de poussage/réétiquetage – French" lang="fr" hreflang="fr" data-title="Algorithme de poussage/réétiquetage" data-language-autonym="Français" data-language-local-name="French" class="interlanguage-link-target"><span>Français</span></a></li><li class="interlanguage-link interwiki-ja mw-list-item"><a href="https://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AA%E3%83%95%E3%83%AD%E3%83%BC%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E6%B3%95" title="プリフロープッシュ法 – Japanese" lang="ja" hreflang="ja" data-title="プリフロープッシュ法" data-language-autonym="日本語" data-language-local-name="Japanese" class="interlanguage-link-target"><span>日本語</span></a></li><li class="interlanguage-link interwiki-pl mw-list-item"><a href="https://pl.wikipedia.org/wiki/Algorytm_push-relabel" title="Algorytm push-relabel – Polish" lang="pl" hreflang="pl" data-title="Algorytm push-relabel" data-language-autonym="Polski" data-language-local-name="Polish" class="interlanguage-link-target"><span>Polski</span></a></li><li class="interlanguage-link interwiki-ru mw-list-item"><a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%BF%D1%80%D0%BE%D1%82%D0%B0%D0%BB%D0%BA%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_%D0%BF%D1%80%D0%B5%D0%B4%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B0" title="Алгоритм проталкивания предпотока – Russian" lang="ru" hreflang="ru" data-title="Алгоритм проталкивания предпотока" data-language-autonym="Русский" data-language-local-name="Russian" class="interlanguage-link-target"><span>Русский</span></a></li><li class="interlanguage-link interwiki-sr mw-list-item"><a href="https://sr.wikipedia.org/wiki/Push-relabel_algoritam_maksimalnog_protoka_grafa" title="Push-relabel algoritam maksimalnog protoka grafa – Serbian" lang="sr" hreflang="sr" data-title="Push-relabel algoritam maksimalnog protoka grafa" data-language-autonym="Српски / srpski" data-language-local-name="Serbian" class="interlanguage-link-target"><span>Српски / srpski</span></a></li><li class="interlanguage-link interwiki-th mw-list-item"><a href="https://th.wikipedia.org/wiki/%E0%B8%82%E0%B8%B1%E0%B9%89%E0%B8%99%E0%B8%95%E0%B8%AD%E0%B8%99%E0%B8%A7%E0%B8%B4%E0%B8%98%E0%B8%B5%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%9C%E0%B8%A5%E0%B8%B1%E0%B8%81%E0%B8%94%E0%B8%B1%E0%B8%99_-_%E0%B8%95%E0%B8%B4%E0%B8%94%E0%B8%9B%E0%B9%89%E0%B8%B2%E0%B8%A2%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88" title="ขั้นตอนวิธีการผลักดัน - ติดป้ายใหม่ – Thai" lang="th" hreflang="th" data-title="ขั้นตอนวิธีการผลักดัน - ติดป้ายใหม่" data-language-autonym="ไทย" data-language-local-name="Thai" class="interlanguage-link-target"><span>ไทย</span></a></li>
			</ul>
			<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q583889#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>
		</div>

	</div>
</div>
</header>
				<div class="vector-page-toolbar vector-feature-custom-font-size-clientpref--excluded">
					<div class="vector-page-toolbar-container">
						<div id="left-navigation">
							<nav aria-label="Namespaces">
								
<div id="p-associated-pages" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-associated-pages"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-nstab-main" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/Push%E2%80%93relabel_maximum_flow_algorithm" title="View the content page [c]" accesskey="c"><span>Article</span></a></li><li id="ca-talk" class="vector-tab-noicon mw-list-item"><a href="/wiki/Talk:Push%E2%80%93relabel_maximum_flow_algorithm" rel="discussion" title="Discuss improvements to the content page [t]" accesskey="t"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

								
<div id="vector-variants-dropdown" class="vector-dropdown emptyPortlet"  >
	<input type="checkbox" id="vector-variants-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-variants-dropdown" class="vector-dropdown-checkbox " aria-label="Change language variant"   >
	<label id="vector-variants-dropdown-label" for="vector-variants-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">English</span>
	</label>
	<div class="vector-dropdown-content">


					
<div id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

				
	</div>
</div>

							</nav>
						</div>
						<div id="right-navigation" class="vector-collapsible">
							<nav aria-label="Views">
								
<div id="p-views" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-views"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-view" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/Push%E2%80%93relabel_maximum_flow_algorithm"><span>Read</span></a></li><li id="ca-edit" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-history" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

							</nav>
				
							<nav class="vector-page-tools-landmark" aria-label="Page tools">
								
<div id="vector-page-tools-dropdown" class="vector-dropdown vector-page-tools-dropdown"  >
	<input type="checkbox" id="vector-page-tools-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-tools-dropdown" class="vector-dropdown-checkbox "  aria-label="Tools"  >
	<label id="vector-page-tools-dropdown-label" for="vector-page-tools-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">Tools</span>
	</label>
	<div class="vector-dropdown-content">


									<div id="vector-page-tools-unpinned-container" class="vector-unpinned-container">
						
<div id="vector-page-tools" class="vector-page-tools vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-page-tools-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="page-tools-pinned"
	data-pinnable-element-id="vector-page-tools"
	data-pinned-container-id="vector-page-tools-pinned-container"
	data-unpinned-container-id="vector-page-tools-unpinned-container"
>
	<div class="vector-pinnable-header-label">Tools</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-page-tools.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-page-tools.unpin">hide</button>
</div>

	
<div id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-has-collapsible-items"  title="More options" >
	<div class="vector-menu-heading">
		Actions
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-more-view" class="selected vector-more-collapsible-item mw-list-item"><a href="/wiki/Push%E2%80%93relabel_maximum_flow_algorithm"><span>Read</span></a></li><li id="ca-more-edit" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-more-history" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=history"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-tb" class="vector-menu mw-portlet mw-portlet-tb"  >
	<div class="vector-menu-heading">
		General
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-whatlinkshere" class="mw-list-item"><a href="/wiki/Special:WhatLinksHere/Push%E2%80%93relabel_maximum_flow_algorithm" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/wiki/Special:RecentChangesLinked/Push%E2%80%93relabel_maximum_flow_algorithm" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-upload" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u"><span>Upload file</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;oldid=1303395268" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=info" title="More information about this page"><span>Page information</span></a></li><li id="t-cite" class="mw-list-item"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Push%E2%80%93relabel_maximum_flow_algorithm&amp;id=1303395268&amp;wpFormIdentifier=titleform" title="Information on how to cite this page"><span>Cite this page</span></a></li><li id="t-urlshortener" class="mw-list-item"><a href="/w/index.php?title=Special:UrlShortener&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FPush%25E2%2580%2593relabel_maximum_flow_algorithm"><span>Get shortened URL</span></a></li><li id="t-urlshortener-qrcode" class="mw-list-item"><a href="/w/index.php?title=Special:QrCode&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FPush%25E2%2580%2593relabel_maximum_flow_algorithm"><span>Download QR code</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-coll-print_export" class="vector-menu mw-portlet mw-portlet-coll-print_export"  >
	<div class="vector-menu-heading">
		Print/export
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="coll-download-as-rl" class="mw-list-item"><a href="/w/index.php?title=Special:DownloadAsPdf&amp;page=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=show-download-screen" title="Download this page as a PDF file"><span>Download as PDF</span></a></li><li id="t-print" class="mw-list-item"><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;printable=yes" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-wikibase-otherprojects" class="vector-menu mw-portlet mw-portlet-wikibase-otherprojects"  >
	<div class="vector-menu-heading">
		In other projects
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-wikibase" class="wb-otherproject-link wb-otherproject-wikibase-dataitem mw-list-item"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q583889" title="Structured data on this page hosted by Wikidata [g]" accesskey="g"><span>Wikidata item</span></a></li>
		</ul>
		
	</div>
</div>

</div>

									</div>
				
	</div>
</div>

							</nav>
						</div>
					</div>
				</div>
				<div class="vector-column-end no-font-mode-scale">
					<div class="vector-sticky-pinned-container">
						<nav class="vector-page-tools-landmark" aria-label="Page tools">
							<div id="vector-page-tools-pinned-container" class="vector-pinned-container">
				
							</div>
		</nav>
						<nav class="vector-appearance-landmark" aria-label="Appearance">
							<div id="vector-appearance-pinned-container" class="vector-pinned-container">
				<div id="vector-appearance" class="vector-appearance vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-appearance-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="appearance-pinned"
	data-pinnable-element-id="vector-appearance"
	data-pinned-container-id="vector-appearance-pinned-container"
	data-unpinned-container-id="vector-appearance-unpinned-container"
>
	<div class="vector-pinnable-header-label">Appearance</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-appearance.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-appearance.unpin">hide</button>
</div>


</div>

							</div>
		</nav>
					</div>
				</div>
				<div id="bodyContent" class="vector-body" aria-labelledby="firstHeading" data-mw-ve-target-container>
					<div class="vector-body-before-content">
							<div class="mw-indicators">
		</div>

						<div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>
					</div>
					<div id="contentSub"><div id="mw-content-subtitle"></div></div>
					
					
					<div id="mw-content-text" class="mw-body-content"><div class="mw-content-ltr mw-parser-output" lang="en" dir="ltr"><div class="shortdescription nomobile noexcerpt noprint searchaux" style="display:none">Algorithm in mathematical optimization</div>
<style data-mw-deduplicate="TemplateStyles:r1251242444">.mw-parser-output .ambox{border:1px solid #a2a9b1;border-left:10px solid #36c;background-color:#fbfbfb;box-sizing:border-box}.mw-parser-output .ambox+link+.ambox,.mw-parser-output .ambox+link+style+.ambox,.mw-parser-output .ambox+link+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+style+.ambox,.mw-parser-output .ambox+.mw-empty-elt+link+link+.ambox{margin-top:-1px}html body.mediawiki .mw-parser-output .ambox.mbox-small-left{margin:4px 1em 4px 0;overflow:hidden;width:238px;border-collapse:collapse;font-size:88%;line-height:1.25em}.mw-parser-output .ambox-speedy{border-left:10px solid #b32424;background-color:#fee7e6}.mw-parser-output .ambox-delete{border-left:10px solid #b32424}.mw-parser-output .ambox-content{border-left:10px solid #f28500}.mw-parser-output .ambox-style{border-left:10px solid #fc3}.mw-parser-output .ambox-move{border-left:10px solid #9932cc}.mw-parser-output .ambox-protection{border-left:10px solid #a2a9b1}.mw-parser-output .ambox .mbox-text{border:none;padding:0.25em 0.5em;width:100%}.mw-parser-output .ambox .mbox-image{border:none;padding:2px 0 2px 0.5em;text-align:center}.mw-parser-output .ambox .mbox-imageright{border:none;padding:2px 0.5em 2px 0;text-align:center}.mw-parser-output .ambox .mbox-empty-cell{border:none;padding:0;width:1px}.mw-parser-output .ambox .mbox-image-div{width:52px}@media(min-width:720px){.mw-parser-output .ambox{margin:0 10%}}@media print{body.ns-0 .mw-parser-output .ambox{display:none!important}}</style><table class="box-MOS plainlinks metadata ambox ambox-style ambox-mos" role="presentation"><tbody><tr><td class="mbox-image"><div class="mbox-image-div"><span typeof="mw:File"><span><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png" decoding="async" width="40" height="40" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/60px-Edit-clear.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/80px-Edit-clear.svg.png 2x" data-file-width="48" data-file-height="48"></span></span></div></td><td class="mbox-text"><div class="mbox-text-span">This article needs editing to <b>comply with Wikipedia's <a href="/wiki/Wikipedia:Manual_of_Style" title="Wikipedia:Manual of Style">Manual of Style</a>.</b> In particular, it has problems with  <a href="/wiki/MOS:FORMULA" class="mw-redirect" title="MOS:FORMULA">MOS:FORMULA</a> - avoid mixing <code class="nowrap" style="">&lt;math&gt;...&lt;/math&gt;</code> and <span class="nowrap">{{</span><a href="/wiki/Template:Math" title="Template:Math">math</a><span class="nowrap">}}</span> in the same expression.<span class="hide-when-compact"> Please help <a class="external text" href="https://en.wikipedia.org/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit">improve the content</a>.</span>  <span class="date-container"><i>(<span class="date">July 2025</span>)</i></span><span class="hide-when-compact"><i> (<small><a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this message</a></small>)</i></span></div></td></tr></tbody></table>
<p>In <a href="/wiki/Mathematical_optimization" title="Mathematical optimization">mathematical optimization</a>, the <b>push–relabel algorithm</b> (alternatively, <b>preflow–push algorithm</b>) is an algorithm for computing <a href="/wiki/Maximum_flow" class="mw-redirect" title="Maximum flow">maximum flows</a> in a <a href="/wiki/Flow_network" title="Flow network">flow network</a>. The name "push–relabel" comes from the two basic operations used in the algorithm. Throughout its execution, the algorithm maintains a "preflow" and gradually converts it into a maximum flow by moving flow locally between neighboring nodes using <i>push</i> operations under the guidance of an admissible network maintained by <i>relabel</i> operations. In comparison, the <a href="/wiki/Ford%E2%80%93Fulkerson_algorithm" title="Ford–Fulkerson algorithm">Ford–Fulkerson algorithm</a> performs global augmentations that send flow following paths from the source all the way to the sink.<sup id="cite_ref-clrs26_1-0" class="reference"><a href="#cite_note-clrs26-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup>
</p><p>The push–relabel algorithm is considered one of the most efficient maximum flow algorithms. The generic algorithm has a <a href="/wiki/Strongly_polynomial" class="mw-redirect" title="Strongly polynomial">strongly polynomial</a> <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span> time complexity, which is asymptotically more efficient than the <span class="texhtml"><i>O</i>(<i>VE</i><sup>&nbsp;2</sup>)</span> <a href="/wiki/Edmonds%E2%80%93Karp_algorithm" title="Edmonds–Karp algorithm">Edmonds–Karp algorithm</a>.<sup id="cite_ref-goldberg86_2-0" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup> Specific variants of the algorithms achieve even lower time complexities. The variant based on the highest label node selection rule has <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><span class="nowrap">√<span style="border-top:1px solid; padding:0 0.1em;"><i>E</i></span></span>)</span> time complexity and is generally regarded as the benchmark for maximum flow algorithms.<sup id="cite_ref-ahuja97_3-0" class="reference"><a href="#cite_note-ahuja97-3"><span class="cite-bracket">[</span>3<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-goldberg08_4-0" class="reference"><a href="#cite_note-goldberg08-4"><span class="cite-bracket">[</span>4<span class="cite-bracket">]</span></a></sup> Subcubic <span class="texhtml"><i>O</i>(<i>VE</i>log(<i>V</i><sup>&nbsp;2</sup>/<i>E</i>))</span> time complexity can be achieved using <a href="/wiki/Link-cut_tree" class="mw-redirect" title="Link-cut tree">dynamic trees</a>,<sup id="cite_ref-goldberg86_2-1" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup> although in practice it is less efficient.<sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (December 2024)">citation needed</span></a></i>]</sup>
</p><p>The push–relabel algorithm has been extended to compute <a href="/wiki/Minimum_cost_flow" class="mw-redirect" title="Minimum cost flow">minimum cost flows</a>.<sup id="cite_ref-goldberg97_5-0" class="reference"><a href="#cite_note-goldberg97-5"><span class="cite-bracket">[</span>5<span class="cite-bracket">]</span></a></sup> The idea of distance labels has led to a more efficient augmenting path algorithm, which in turn can be incorporated back into the push–relabel algorithm to create a variant with even higher empirical performance.<sup id="cite_ref-goldberg08_4-1" class="reference"><a href="#cite_note-goldberg08-4"><span class="cite-bracket">[</span>4<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-ahuja91_6-0" class="reference"><a href="#cite_note-ahuja91-6"><span class="cite-bracket">[</span>6<span class="cite-bracket">]</span></a></sup>
</p>
<meta property="mw:PageProp/toc">
<div class="mw-heading mw-heading2"><h2 id="History">History</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=1" title="Edit section: History"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The concept of a preflow was originally designed by <a href="/wiki/Alexander_V._Karzanov" title="Alexander V. Karzanov">Alexander V. Karzanov</a> and was published in 1974 in Soviet Mathematical Dokladi 15. This pre-flow algorithm also used a push operation; however, it used distances in the auxiliary network to determine where to push the flow instead of a labeling system.<sup id="cite_ref-goldberg86_2-2" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-goldberg2014_7-0" class="reference"><a href="#cite_note-goldberg2014-7"><span class="cite-bracket">[</span>7<span class="cite-bracket">]</span></a></sup>
</p><p>The push-relabel algorithm was designed by <a href="/wiki/Andrew_V._Goldberg" title="Andrew V. Goldberg">Andrew V. Goldberg</a> and <a href="/wiki/Robert_Tarjan" title="Robert Tarjan">Robert Tarjan</a>. The algorithm was initially presented in November 1986 in STOC '86: Proceedings of the eighteenth annual ACM symposium on Theory of computing, and then officially in October 1988 as an article in the Journal of the ACM. Both papers detail a generic form of the algorithm terminating in <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span> along with a <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;3</sup>)</span> sequential implementation, a <span class="texhtml"><i>O</i>(<i>VE</i>&nbsp;log(<i>V</i><sup>&nbsp;2</sup>/<i>E</i>))</span> implementation using dynamic trees, and parallel/distributed implementation.<sup id="cite_ref-goldberg86_2-3" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-goldberg88_8-0" class="reference"><a href="#cite_note-goldberg88-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup> As explained in,<sup id="cite_ref-amo93_9-0" class="reference"><a href="#cite_note-amo93-9"><span class="cite-bracket">[</span>9<span class="cite-bracket">]</span></a></sup> Goldberg-Tarjan introduced distance labels by incorporating them into the parallel maximum flow algorithm of Yossi Shiloach and <a href="/wiki/Uzi_Vishkin" title="Uzi Vishkin">Uzi Vishkin</a>.<sup id="cite_ref-sv82_10-0" class="reference"><a href="#cite_note-sv82-10"><span class="cite-bracket">[</span>10<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading2"><h2 id="Concepts">Concepts</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=2" title="Edit section: Concepts"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<div class="mw-heading mw-heading3"><h3 id="Definitions_and_notations">Definitions and notations</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=3" title="Edit section: Definitions and notations"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<style data-mw-deduplicate="TemplateStyles:r1236090951">.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}@media print{body.ns-0 .mw-parser-output .hatnote{display:none!important}}</style><div role="note" class="hatnote navigation-not-searchable">Main article: <a href="/wiki/Flow_network" title="Flow network">Flow network</a></div>
<p>Let:
</p>
<ul><li><span class="texhtml"><i>G</i> = (<i>V</i>, <i>E</i>)</span> be a <i>network</i> with <i>capacity function</i> <span class="texhtml"><i>c</i>: <i>V</i> × <i>V</i> → <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle \mathbb {R} }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="double-struck">R</mi>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \mathbb {R} }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.678ex; height:2.176ex;" alt="{\displaystyle \mathbb {R} }"></span><sub>∞</sub></span>,</li>
<li><span class="texhtml"><i>F</i> = (<i>G</i>, <i>c</i>, <i>s</i>, <i>t</i>)</span> a <i>flow network</i>, where <span class="texhtml"><i>s</i> ∈ <i>V</i></span> and <span class="texhtml"><i>t</i> ∈ <i>V</i></span> are chosen <i>source</i> and <i>sink</i> vertices respectively,</li>
<li><span class="texhtml"><i>f</i>&nbsp;: <i>V</i> × <i>V</i> → <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle \mathbb {R} }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="double-struck">R</mi>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \mathbb {R} }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.678ex; height:2.176ex;" alt="{\displaystyle \mathbb {R} }"></span></span> denote a <a href="/wiki/Flow_network#Flows" title="Flow network"><i>pre-flow</i></a> in <span class="texhtml mvar" style="font-style:italic;">F</span>,</li>
<li><span class="texhtml"><i>x</i><sub><i>f</i></sub>&nbsp;: <i>V</i> → <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle \mathbb {R} }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="double-struck">R</mi>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \mathbb {R} }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.678ex; height:2.176ex;" alt="{\displaystyle \mathbb {R} }"></span></span> denote the <i>excess</i> function with respect to the flow <span class="texhtml mvar" style="font-style:italic;">f</span>, defined by <span class="texhtml"><i>x</i><sub><i>f</i></sub> (<i>u</i>) = Σ<sub><i>v</i> ∈ <i>V</i></sub> <i>f</i> (<i>v</i>, <i>u</i>) − Σ<sub><i>v</i> ∈ <i>V</i></sub> <i>f</i> (<i>u</i>, <i>v</i>)</span>,</li>
<li><span class="texhtml"><i>c</i><sub><i>f</i></sub>&nbsp;: <i>V</i> × <i>V</i> → <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle \mathbb {R} }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="double-struck">R</mi>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \mathbb {R} }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.678ex; height:2.176ex;" alt="{\displaystyle \mathbb {R} }"></span><sub>∞</sub></span> denote the <i>residual capacity function</i> with respect to the flow <span class="texhtml mvar" style="font-style:italic;">f</span>, defined by <span class="texhtml"><i>c</i><sub><i>f</i></sub>&nbsp;(<i>e</i>) = <i>c</i>(<i>e</i>) − <i>f</i>&nbsp;(<i>e</i>)</span>,</li>
<li><span class="texhtml"><i>E</i><sub><i>f</i></sub> ⊂ <i>E</i></span> being the edges where <span class="texhtml"><i>f</i> &lt; <i>c</i></span>,</li></ul>
<p>and
</p>
<ul><li><span class="texhtml"><i>G</i><sub><i>f</i></sub> (<i>V</i>, <i>E</i><sub><i>f</i>&nbsp;</sub>)</span> denote the <a href="/wiki/Flow_network#Residuals" title="Flow network"><i>residual network</i></a> of <span class="texhtml mvar" style="font-style:italic;">G</span> with respect to the flow <span class="texhtml mvar" style="font-style:italic;">f</span>.</li></ul>
<p>The push–relabel algorithm uses a nonnegative integer valid <b>labeling function</b> which makes use of <i>distance labels</i>, or <i>heights</i>, on nodes to determine which arcs should be selected for the push operation. This labeling function is denoted by <span class="texhtml">𝓁&nbsp;: <i>V</i> → <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle \mathbb {N} }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mrow class="MJX-TeXAtom-ORD">
          <mi mathvariant="double-struck">N</mi>
        </mrow>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \mathbb {N} }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fdf9a96b565ea202d0f4322e9195613fb26a9bed" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.678ex; height:2.176ex;" alt="{\displaystyle \mathbb {N} }"></span></span>. This function must satisfy the following conditions in order to be considered valid:
</p>
<dl><dd><b>Valid labeling</b>:
<dl><dd><span class="texhtml">𝓁(<i>u</i>) ≤ 𝓁(<i>v</i>) + 1</span> for all <span class="texhtml">(<i>u</i>, <i>v</i>) ∈ <i>E</i><sub><i>f</i></sub></span></dd></dl></dd>
<dd><b>Source condition</b>:
<dl><dd><span class="texhtml">𝓁(<i>s</i>) = |&nbsp;<i>V</i>&nbsp;|</span></dd></dl></dd>
<dd><b>Sink conservation</b>:
<dl><dd><span class="texhtml">𝓁(<i>t</i>) = 0</span></dd></dl></dd></dl>
<p>In the algorithm, the label values of <span class="texhtml mvar" style="font-style:italic;">s</span> and <span class="texhtml mvar" style="font-style:italic;">t</span> are fixed. <span class="texhtml">𝓁(<i>u</i>)</span> is a lower bound of the unweighted distance from <span class="texhtml mvar" style="font-style:italic;">u</span> to <span class="texhtml mvar" style="font-style:italic;">t</span> in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>&nbsp; if <span class="texhtml mvar" style="font-style:italic;">t</span> is reachable from <span class="texhtml mvar" style="font-style:italic;">u</span>. If <span class="texhtml mvar" style="font-style:italic;">u</span> has been disconnected from <span class="texhtml mvar" style="font-style:italic;">t</span>, then <span class="texhtml">𝓁(<i>u</i>) − |&nbsp;<i>V</i>&nbsp;|</span> is a lower bound of the unweighted distance from <span class="texhtml mvar" style="font-style:italic;">u</span> to <span class="texhtml mvar" style="font-style:italic;">s</span>. As a result, if a valid labeling function exists, there are no <span class="texhtml"><i>s</i>-<i>t</i></span> paths in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>&nbsp; because no such paths can be longer than <span class="texhtml">|&nbsp;<i>V</i>&nbsp;| − 1</span>.
</p><p>An arc <span class="texhtml">(<i>u</i>, <i>v</i>) ∈ <i>E</i><sub><i>f</i></sub></span>&nbsp; is called <b>admissible</b> if <span class="texhtml">𝓁(<i>u</i>) = 𝓁(<i>v</i>) + 1</span>. The <b>admissible network</b> <span class="texhtml"><i>G̃</i><sub><i>f</i></sub> (<i>V</i>, <i>Ẽ</i><sub><i>f</i></sub>&nbsp;)</span> is composed of the set of arcs <span class="texhtml"><i>e</i> ∈ <i>E</i><sub><i>f</i></sub></span>&nbsp;  that are admissible. The admissible network is acyclic.
</p><p>For a fixed flow <span class="texhtml"><i>f</i></span>, a vertex <span class="texhtml"><i>v ∉ </i>{<i>s, t</i>} </span> is called <b>active</b> if it has positive excess with respect to <span class="texhtml"><i>f</i></span>, i.e., <span class="texhtml"><i>x</i><sub><i>f</i></sub> (<i>u</i>) &gt; 0</span>.
</p>
<div class="mw-heading mw-heading3"><h3 id="Operations">Operations</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=4" title="Edit section: Operations"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<div class="mw-heading mw-heading4"><h4 id="Initialization">Initialization</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=5" title="Edit section: Initialization"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The algorithm starts by creating a residual graph, initializing the preflow values to zero and performing a set of saturating push operations on residual arcs <span class="texhtml">(<i>s</i>, <i>v</i>)</span> exiting the source, where <span class="texhtml"><i>v</i> ∈ <i>V</i> \ {<i>s</i>}</span>. Similarly, the labels are initialized such that the label at the source is the number of nodes in the graph, <span class="texhtml">𝓁(<i>s</i>) = |&nbsp;<i>V</i>&nbsp;|</span>, and all other nodes are given a label of zero. Once the initialization is complete the algorithm repeatedly performs either the push or relabel operations against active nodes until no applicable operation can be performed.
</p>
<div class="mw-heading mw-heading4"><h4 id="Push">Push</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=6" title="Edit section: Push"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The push operation applies on an admissible out-arc <span class="texhtml">(<i>u</i>, <i>v</i>)</span> of an active node <span class="texhtml mvar" style="font-style:italic;">u</span> in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>. It moves <span class="texhtml">min{<i>x</i><sub><i>f</i></sub> (<i>u</i>), <i>c</i><sub><i>f</i></sub> (<i>u</i>,<i>v</i>)}</span> units of flow from <span class="texhtml mvar" style="font-style:italic;">u</span> to <span class="texhtml mvar" style="font-style:italic;">v</span>.
</p>
<pre>push(u, v):
    assert x<sub>f</sub>[u] &gt; 0 and 𝓁[u] == 𝓁[v] + 1
    Δ = min(x<sub>f</sub>[u], c[u][v] - f[u][v])
    f[u][v] += Δ
    f[v][u] -= Δ
    x<sub>f</sub>[u] -= Δ
    x<sub>f</sub>[v] += Δ
</pre>
<p>A push operation that causes <span class="texhtml"><i>f</i>&nbsp;(<i>u</i>, <i>v</i>)</span> to reach <span class="texhtml"><i>c</i>(<i>u</i>, <i>v</i>)</span> is called a <b>saturating push</b> since it uses up all the available capacity of the residual arc. Otherwise, all of the excess at the node is pushed across the residual arc. This is called an <b>unsaturating</b> or <b>non-saturating push</b>.
</p>
<div class="mw-heading mw-heading4"><h4 id="Relabel">Relabel</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=7" title="Edit section: Relabel"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The relabel operation applies on an active node <span class="texhtml mvar" style="font-style:italic;">u</span> which is neither the source nor the sink without any admissible out-arcs in <span class="texhtml"><i>G<sub>f</sub></i></span>. It modifies <span class="texhtml">𝓁(<i>u</i>)</span> to be the minimum value such that an admissible out-arc is created. Note that this always increases <span class="texhtml">𝓁(<i>u</i>)</span> and never creates a steep arc, which is an arc <span class="texhtml">(<i>u</i>, <i>v</i>)</span> such that <span class="texhtml"><i>c</i><sub><i>f</i></sub>&nbsp;(<i>u</i>, <i>v</i>) &gt; 0</span>, and <span class="texhtml">𝓁(<i>u</i>) &gt; 𝓁(<i>v</i>) + 1</span>.
</p>
<pre>relabel(u):
    assert x<sub>f</sub>[u] &gt; 0 and 𝓁[u] &lt;= 𝓁[v] for all v such that c<sub>f</sub>[u][v] &gt; 0
    𝓁[u] = 1 + min(𝓁[v] for all v such that c<sub>f</sub>[u][v] &gt; 0)
</pre>
<div class="mw-heading mw-heading4"><h4 id="Effects_of_push_and_relabel">Effects of push and relabel</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=8" title="Edit section: Effects of push and relabel"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>After a push or relabel operation, <span class="texhtml">𝓁</span> remains a valid labeling function with respect to <span class="texhtml mvar" style="font-style:italic;">f</span>.
</p><p>For a push operation on an admissible arc <span class="texhtml">(<i>u</i>, <i>v</i>)</span>, it may add an arc <span class="texhtml">(<i>v</i>, <i>u</i>)</span> to <span class="texhtml"><i>E<sub>f</sub></i></span>, where <span class="texhtml">𝓁(<i>v</i>) = 𝓁(<i>u</i>) − 1 ≤ 𝓁(<i>u</i>) + 1</span>; it may also remove the arc <span class="texhtml">(<i>u</i>, <i>v</i>)</span> from <span class="texhtml"><i>E</i><sub><i>f</i></sub></span>, where it effectively removes the constraint <span class="texhtml">𝓁(<i>u</i>) ≤ 𝓁(<i>v</i>) + 1</span>.
</p><p>To see that a relabel operation on node <span class="texhtml mvar" style="font-style:italic;">u</span> preserves the validity of <span class="texhtml">𝓁(<i>u</i>)</span>, notice that this is trivially guaranteed by definition for the out-arcs of <i>u</i> in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>. For the in-arcs of <span class="texhtml mvar" style="font-style:italic;">u</span> in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>, the increased <span class="texhtml">𝓁(<i>u</i>)</span> can only satisfy the constraints less tightly, not violate them.
</p>
<div class="mw-heading mw-heading2"><h2 id="The_generic_push–relabel_algorithm"><span id="The_generic_push.E2.80.93relabel_algorithm"></span>The generic push–relabel algorithm</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=9" title="Edit section: The generic push–relabel algorithm"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The generic push–relabel algorithm is used as a proof of concept only and does not contain implementation details on how to select an active node for the push and relabel operations. This generic version of the algorithm will terminate in <span class="texhtml"><i>O</i>(<i>V</i><sup>2</sup><i>E</i>)</span>.
</p><p>Since <span class="texhtml">𝓁(<i>s</i>) = |&nbsp;<i>V</i>&nbsp;|</span>, <span class="texhtml">𝓁(<i>t</i>) = 0</span>, and there are no paths longer than <span class="texhtml">|&nbsp;<i>V</i>&nbsp;| − 1</span> in <span class="texhtml"><i>G</i><sub><i>f</i></sub></span>, in order for <span class="texhtml">𝓁(<i>s</i>)</span> to satisfy the valid labeling condition <span class="texhtml mvar" style="font-style:italic;">s</span> must be disconnected from <span class="texhtml mvar" style="font-style:italic;">t</span>. At initialisation, the algorithm fulfills this requirement by creating a pre-flow <span class="texhtml mvar" style="font-style:italic;">f</span> that saturates all out-arcs of <span class="texhtml mvar" style="font-style:italic;">s</span>, after which <span class="texhtml">𝓁(<i>v</i>) = 0</span> is trivially valid for all <span class="texhtml"><i>v</i> ∈ <i>V</i> \ {<i>s</i>, <i>t</i>}</span>. After initialisation, the algorithm repeatedly executes an applicable push or relabel operation until no such operations apply, at which point the pre-flow has been converted into a maximum flow.
</p>
<pre>generic-push-relabel(G, c, s, t):
    create a pre-flow f that saturates all out-arcs of s
    <b>let</b> 𝓁[s] = |V|
    <b>let</b> 𝓁[v] = 0 for all v ∈ V \ {s}
    <b>while</b> there is an applicable push or relabel operation <b>do</b>
        execute the operation
</pre>
<div class="mw-heading mw-heading3"><h3 id="Correctness">Correctness</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=10" title="Edit section: Correctness"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The algorithm maintains the condition that <span class="texhtml">𝓁</span> is a valid labeling during its execution. This can be proven true by examining the effects of the push and relabel operations on the label function <span class="texhtml">𝓁</span>. The relabel operation increases the label value by the associated minimum plus one which will always satisfy the <span class="texhtml">𝓁(<i>u</i>) ≤ 𝓁(<i>v</i>) + 1</span> constraint. The push operation can send flow from <span class="texhtml mvar" style="font-style:italic;">u</span> to <span class="texhtml mvar" style="font-style:italic;">v</span> if <span class="texhtml">𝓁(<i>u</i>) = 𝓁(<i>v</i>) + 1</span>. This may add <span class="texhtml">(<i>v</i>, <i>u</i>)</span> to <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span> and may delete <span class="texhtml">(<i>u</i>, <i>v</i>)</span> from <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span>. The addition of <span class="texhtml">(<i>v</i>, <i>u</i>)</span> to <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span> will not affect the valid labeling since <span class="texhtml">𝓁(<i>v</i>) = 𝓁(<i>u</i>) − 1</span>.  The deletion of <span class="texhtml">(<i>u</i>, <i>v</i>)</span> from <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span> removes the corresponding constraint since the valid labeling property <span class="texhtml">𝓁(<i>u</i>) ≤ 𝓁(<i>v</i>) + 1</span> only applies to residual arcs in <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span>.<sup id="cite_ref-goldberg88_8-1" class="reference"><a href="#cite_note-goldberg88-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup>
</p><p>If a preflow <span class="texhtml mvar" style="font-style:italic;">f</span> and a valid labeling <span class="texhtml">𝓁</span> for <span class="texhtml mvar" style="font-style:italic;">f</span> exists then there is no augmenting path from <span class="texhtml mvar" style="font-style:italic;">s</span> to <span class="texhtml mvar" style="font-style:italic;">t</span> in the residual graph <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span>. This can be proven by contradiction based on inequalities which arise in the labeling function when supposing that an augmenting path does exist. If the algorithm terminates, then all nodes in <span class="texhtml"><i>V</i> \ {<i>s</i>, <i>t</i>}</span> are not active. This means all <span class="texhtml"><i>v</i> ∈ <i>V</i> \ {<i>s</i>, <i>t</i>}</span> have no excess flow, and with no excess the preflow <span class="texhtml mvar" style="font-style:italic;">f</span> obeys the flow conservation constraint and can be considered a normal flow. This flow is the maximum flow according to the <a href="/wiki/Max-flow_min-cut_theorem" title="Max-flow min-cut theorem">max-flow min-cut theorem</a> since there is no augmenting path from <span class="texhtml mvar" style="font-style:italic;">s</span> to <span class="texhtml mvar" style="font-style:italic;">t</span>.<sup id="cite_ref-goldberg88_8-2" class="reference"><a href="#cite_note-goldberg88-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup>
</p><p>Therefore, the algorithm will return the maximum flow upon termination.
</p>
<div class="mw-heading mw-heading3"><h3 id="Time_complexity">Time complexity</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=11" title="Edit section: Time complexity"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>In order to bound the time complexity of the algorithm, we must analyze the number of push and relabel operations which occur within the main loop. The numbers of relabel, saturating push and nonsaturating push operations are analyzed separately.
</p><p>In the algorithm, the relabel operation can be performed at most <span class="texhtml">(2|&nbsp;<i>V</i>&nbsp;| − 1)(|&nbsp;<i>V</i>&nbsp;| − 2) &lt; 2|&nbsp;<i>V</i>&nbsp;|<sup>2</sup></span> times. This is because the labeling <span class="texhtml">𝓁(<i>u</i>)</span> value for any node <i>u</i> can never decrease, and the maximum label value is at most <span class="texhtml">2|&nbsp;<i>V</i>&nbsp;| − 1</span> for all nodes. This means the relabel operation could potentially be performed <span class="texhtml">2|&nbsp;<i>V</i>&nbsp;| − 1 </span> times for all nodes <span class="texhtml"><i>V</i> \ {<i>s</i>, <i>t</i>}</span> (i.e.  <span class="texhtml">|&nbsp;<i>V</i>&nbsp;| − 2</span>). This results in a bound of <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup>)</span> for the relabel operation.
</p><p>Each saturating push on an admissible arc <span class="texhtml">(<i>u</i>, <i>v</i>)</span> removes the arc from <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span>. For the arc to be reinserted into <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span> for another saturating push, <span class="texhtml mvar" style="font-style:italic;">v</span> must first be relabeled, followed by a push on the arc <span class="texhtml">(<i>v</i>, <i>u</i>)</span>, then <span class="texhtml mvar" style="font-style:italic;">u</span> must be relabeled. In the process, <span class="texhtml">𝓁(<i>u</i>)</span> increases by at least two. Therefore, there are <span class="texhtml"><i>O</i>(<i>V</i>)</span> saturating pushes on <span class="texhtml">(<i>u</i>, <i>v</i>)</span>, and the total number of saturating pushes is at most <span class="texhtml">2|&nbsp;<i>V</i>&nbsp;||&nbsp;<i>E</i>&nbsp;|</span>. This results in a time bound of <span class="texhtml"><i>O</i>(<i>VE</i>)</span> for the saturating push operations.
</p><p>Bounding the number of nonsaturating pushes can be achieved via a <a href="/wiki/Potential_method" title="Potential method">potential argument</a>. We use the potential function <span class="texhtml">Φ = Σ<sub>[<i>u</i> ∈ <i>V</i> ∧ <i>x</i><sub><i>f</i></sub>&nbsp;(<i>u</i>) &gt; 0]</sub> 𝓁(<i>u</i>)</span> (i.e. <span class="texhtml">Φ</span> is the sum of the labels of all active nodes). It is obvious that <span class="texhtml">Φ</span> is <span class="texhtml">0</span> initially and stays nonnegative throughout the execution of the algorithm. Both relabels and saturating pushes can increase <span class="texhtml">Φ</span>. However, the value of <span class="texhtml">Φ</span> must be equal to 0 at termination since there cannot be any remaining active nodes at the end of the algorithm's execution. This means that over the execution of the algorithm, the nonsaturating pushes must make up the difference of the relabel and saturating push operations in order for <span class="texhtml">Φ</span> to terminate with a value of 0.
The relabel operation can increase <span class="texhtml">Φ</span> by at most <span class="texhtml">(2|&nbsp;<i>V</i>&nbsp;| − 1)(|&nbsp;<i>V</i>&nbsp;| − 2)</span>. A saturating push on <span class="texhtml">(<i>u</i>, <i>v</i>)</span> activates <span class="texhtml mvar" style="font-style:italic;">v</span> if it was inactive before the push, increasing <span class="texhtml">Φ</span> by at most <span class="texhtml">2|&nbsp;<i>V</i>&nbsp;| − 1</span>. Hence, the total contribution of all saturating pushes operations to <span class="texhtml">Φ</span> is at most <span class="texhtml">(2|&nbsp;<i>V</i>&nbsp;| − 1)(2|&nbsp;<i>V</i>&nbsp;||&nbsp;<i>E</i>&nbsp;|)</span>. A nonsaturating push on <span class="texhtml">(<i>u</i>, <i>v</i>)</span> always deactivates <span class="texhtml mvar" style="font-style:italic;">u</span>, but it can also activate <span class="texhtml mvar" style="font-style:italic;">v</span> as in a saturating push. As a result, it decreases <span class="texhtml">Φ</span> by at least <span class="texhtml">𝓁(<i>u</i>) − 𝓁(<i>v</i>) = 1</span>. Since relabels and saturating pushes increase <span class="texhtml">Φ</span>, the total number of nonsaturating pushes must make up the difference of <span class="texhtml">(2|&nbsp;<i>V</i>&nbsp;| − 1)(|&nbsp;<i>V</i>&nbsp;| − 2) + (2|&nbsp;<i>V</i>&nbsp;| − 1)(2|&nbsp;<i>V</i>&nbsp;||&nbsp;<i>E</i>&nbsp;|) ≤ 4|&nbsp;<i>V</i>&nbsp;|<sup>2</sup>|&nbsp;<i>E</i>&nbsp;|</span>. This results in a time bound of <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span> for the nonsaturating push operations.
</p><p>In sum, the algorithm executes <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup>)</span> relabels, <span class="texhtml"><i>O</i>(<i>VE</i>)</span> saturating pushes and <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span> nonsaturating pushes. Data structures can be designed to pick and execute an applicable operation in <span class="texhtml"><i>O</i>(1)</span> time. Therefore, the time complexity of the algorithm is <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span>.<sup id="cite_ref-clrs26_1-1" class="reference"><a href="#cite_note-clrs26-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-goldberg88_8-3" class="reference"><a href="#cite_note-goldberg88-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading3"><h3 id="Example">Example</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=12" title="Edit section: Example"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The following is a sample execution of the generic push-relabel algorithm, as defined above, on the following simple network flow graph diagram.
</p>
<style data-mw-deduplicate="TemplateStyles:r1273380762/mw-parser-output/.tmulti">.mw-parser-output .tmulti .multiimageinner{display:flex;flex-direction:column}.mw-parser-output .tmulti .trow{display:flex;flex-direction:row;clear:left;flex-wrap:wrap;width:100%;box-sizing:border-box}.mw-parser-output .tmulti .tsingle{margin:1px;float:left}.mw-parser-output .tmulti .theader{clear:both;font-weight:bold;text-align:center;align-self:center;background-color:transparent;width:100%}.mw-parser-output .tmulti .thumbcaption{background-color:transparent}.mw-parser-output .tmulti .text-align-left{text-align:left}.mw-parser-output .tmulti .text-align-right{text-align:right}.mw-parser-output .tmulti .text-align-center{text-align:center}@media all and (max-width:720px){.mw-parser-output .tmulti .thumbinner{width:100%!important;box-sizing:border-box;max-width:none!important;align-items:center}.mw-parser-output .tmulti .trow{justify-content:center}.mw-parser-output .tmulti .tsingle{float:none!important;max-width:100%!important;box-sizing:border-box;text-align:center}.mw-parser-output .tmulti .tsingle .thumbcaption{text-align:left}.mw-parser-output .tmulti .trow>.thumbcaption{text-align:center}}@media screen{html.skin-theme-clientpref-night .mw-parser-output .tmulti .multiimageinner span:not(.skin-invert-image):not(.skin-invert):not(.bg-transparent) img{background-color:white}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .tmulti .multiimageinner span:not(.skin-invert-image):not(.skin-invert):not(.bg-transparent) img{background-color:white}}</style><div class="thumb tmulti tnone center"><div class="thumbinner multiimageinner" style="width:708px;max-width:708px"><div class="trow"><div class="tsingle" style="width:352px;max-width:352px"><div class="thumbimage"><span typeof="mw:File"><a href="/wiki/File:Push_Relabel_Algoritm_Example_-_Initial_Graph.svg" class="mw-file-description"><img alt="Initial flow network graph" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Push_Relabel_Algoritm_Example_-_Initial_Graph.svg/500px-Push_Relabel_Algoritm_Example_-_Initial_Graph.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Push_Relabel_Algoritm_Example_-_Initial_Graph.svg/960px-Push_Relabel_Algoritm_Example_-_Initial_Graph.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span></div><div class="thumbcaption">Initial flow network graph</div></div><div class="tsingle" style="width:352px;max-width:352px"><div class="thumbimage"><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Final_Network_Graph.svg" class="mw-file-description"><img alt="Final maximum flow network graph" src="//upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Push-Relabel_Algorithm_Example_-_Final_Network_Graph.svg/500px-Push-Relabel_Algorithm_Example_-_Final_Network_Graph.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Push-Relabel_Algorithm_Example_-_Final_Network_Graph.svg/960px-Push-Relabel_Algorithm_Example_-_Final_Network_Graph.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span></div><div class="thumbcaption">Final maximum flow network graph</div></div></div></div></div>
<div style="clear:both;" class=""></div>
<p>In the example, the <span class="nowrap"><i>h</i></span> and <span class="nowrap"><i>e</i></span> values denote the label <span class="texhtml">𝓁</span> and excess <span class="texhtml"><i>x</i><sub><i>f</i></sub>&nbsp;</span>, respectively, of the node during the execution of the algorithm. Each residual graph in the example only contains the residual arcs with a capacity larger than zero. Each residual graph may contain multiple iterations of the <span class="nowrap"><i>perform operation</i></span> loop.
</p>
<div style="clear:both;" class=""></div>
<table class="wikitable">

<tbody><tr>
<th>Algorithm Operation(s)</th>
<th>Residual Graph
</th></tr>
<tr>
<td>Initialise the residual graph by setting the preflow to values 0 and initialising the labeling.</td>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_1.svg" class="mw-file-description" title="Step 1"><img alt="Step 1" src="//upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Push-Relabel_Algorithm_Example_-_Step_1.svg/500px-Push-Relabel_Algorithm_Example_-_Step_1.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Push-Relabel_Algorithm_Example_-_Step_1.svg/960px-Push-Relabel_Algorithm_Example_-_Step_1.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td>Initial saturating push is performed across all preflow arcs out of the source, <span class="texhtml mvar" style="font-style:italic;">s</span>.</td>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_2.svg" class="mw-file-description" title="Step 2"><img alt="Step 2" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Push-Relabel_Algorithm_Example_-_Step_2.svg/500px-Push-Relabel_Algorithm_Example_-_Step_2.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Push-Relabel_Algorithm_Example_-_Step_2.svg/960px-Push-Relabel_Algorithm_Example_-_Step_2.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td rowspan="2">Node <span class="texhtml mvar" style="font-style:italic;">a</span> is relabeled in order to push its excess flow towards the sink, <span class="texhtml mvar" style="font-style:italic;">t</span>.
<p>The excess at <span class="texhtml mvar" style="font-style:italic;">a</span> is then pushed to <span class="texhtml mvar" style="font-style:italic;">b</span> then <span class="texhtml mvar" style="font-style:italic;">d</span> in two subsequent saturating pushes; which still leaves <span class="texhtml mvar" style="font-style:italic;">a</span> with some excess.
</p>
</td></tr>
<tr>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_3.svg" class="mw-file-description" title="Step 3"><img alt="Step 3" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/11/Push-Relabel_Algorithm_Example_-_Step_3.svg/500px-Push-Relabel_Algorithm_Example_-_Step_3.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/11/Push-Relabel_Algorithm_Example_-_Step_3.svg/960px-Push-Relabel_Algorithm_Example_-_Step_3.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td rowspan="2">Once again, <span class="texhtml mvar" style="font-style:italic;">a</span> is relabeled in order to push its excess along its last remaining positive residual (i.e. push the excess back to <span class="texhtml mvar" style="font-style:italic;">s</span>).
<p>The node <span class="texhtml mvar" style="font-style:italic;">a</span> is then removed from the set of active nodes. 
</p>
</td></tr>
<tr>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_4.svg" class="mw-file-description" title="Step 4"><img alt="Step 4" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Push-Relabel_Algorithm_Example_-_Step_4.svg/500px-Push-Relabel_Algorithm_Example_-_Step_4.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Push-Relabel_Algorithm_Example_-_Step_4.svg/960px-Push-Relabel_Algorithm_Example_-_Step_4.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td>Relabel <span class="texhtml mvar" style="font-style:italic;">b</span> and then push its excess to <span class="texhtml mvar" style="font-style:italic;">t</span> and <span class="texhtml mvar" style="font-style:italic;">c</span>.</td>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_5.svg" class="mw-file-description" title="Step 5"><img alt="Step 5" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Push-Relabel_Algorithm_Example_-_Step_5.svg/500px-Push-Relabel_Algorithm_Example_-_Step_5.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Push-Relabel_Algorithm_Example_-_Step_5.svg/960px-Push-Relabel_Algorithm_Example_-_Step_5.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td>Relabel <span class="texhtml mvar" style="font-style:italic;">c</span> and then push its excess to <span class="texhtml mvar" style="font-style:italic;">d</span>.</td>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_6.svg" class="mw-file-description" title="Step 6"><img alt="Step 6" src="//upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Push-Relabel_Algorithm_Example_-_Step_6.svg/500px-Push-Relabel_Algorithm_Example_-_Step_6.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Push-Relabel_Algorithm_Example_-_Step_6.svg/960px-Push-Relabel_Algorithm_Example_-_Step_6.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td>Relabel <span class="texhtml mvar" style="font-style:italic;">d</span> and then push its excess to <span class="texhtml mvar" style="font-style:italic;">t</span>.</td>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_7.svg" class="mw-file-description" title="Step 7"><img alt="Step 7" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Push-Relabel_Algorithm_Example_-_Step_7.svg/500px-Push-Relabel_Algorithm_Example_-_Step_7.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Push-Relabel_Algorithm_Example_-_Step_7.svg/960px-Push-Relabel_Algorithm_Example_-_Step_7.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td rowspan="2">This leaves the node <span class="texhtml mvar" style="font-style:italic;">b</span> as the only remaining active node, but it cannot push its excess flow towards the sink.
<p>Relabel <span class="texhtml mvar" style="font-style:italic;">b</span> and then push its excess towards the source, <span class="texhtml mvar" style="font-style:italic;">s</span>, via the node <span class="texhtml mvar" style="font-style:italic;">a</span>.
</p>
</td></tr>
<tr>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_8.svg" class="mw-file-description" title="Step 8"><img alt="Step 8" src="//upload.wikimedia.org/wikipedia/commons/thumb/2/25/Push-Relabel_Algorithm_Example_-_Step_8.svg/500px-Push-Relabel_Algorithm_Example_-_Step_8.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/2/25/Push-Relabel_Algorithm_Example_-_Step_8.svg/960px-Push-Relabel_Algorithm_Example_-_Step_8.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr>
<tr>
<td rowspan="2">Push the last bit of excess at <span class="texhtml mvar" style="font-style:italic;">a</span> back to the source, <span class="texhtml mvar" style="font-style:italic;">s</span>.
<p>There are no remaining active nodes. The algorithm terminates and returns the maximum flow of the graph (as seen above). 
</p>
</td></tr>
<tr>
<td><span typeof="mw:File"><a href="/wiki/File:Push-Relabel_Algorithm_Example_-_Step_9.svg" class="mw-file-description" title="Step 9"><img alt="Step 9" src="//upload.wikimedia.org/wikipedia/commons/thumb/8/82/Push-Relabel_Algorithm_Example_-_Step_9.svg/500px-Push-Relabel_Algorithm_Example_-_Step_9.svg.png" decoding="async" width="350" height="229" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/82/Push-Relabel_Algorithm_Example_-_Step_9.svg/960px-Push-Relabel_Algorithm_Example_-_Step_9.svg.png 1.5x" data-file-width="1028" data-file-height="673"></a></span>
</td></tr></tbody></table>
<p>The example (but with initial flow of 0) can be run <a rel="nofollow" class="external text" href="http://www.adrian-haarbach.de/idp-graph-algorithms/implementation/maxflow-push-relabel/index_en.html">here</a> interactively.
</p>
<div class="mw-heading mw-heading2"><h2 id="Practical_implementations">Practical implementations</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=13" title="Edit section: Practical implementations"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>While the generic push–relabel algorithm has <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span> time complexity, efficient implementations achieve <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;3</sup>)</span> or lower time complexity by enforcing appropriate rules in selecting applicable push and relabel operations. The empirical performance can be further improved by heuristics.
</p>
<div class="mw-heading mw-heading3"><h3 id="&quot;Current-arc&quot;_data_structure_and_discharge_operation"><span id=".22Current-arc.22_data_structure_and_discharge_operation"></span>"Current-arc" data structure and discharge operation</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=14" title="Edit section: &quot;Current-arc&quot; data structure and discharge operation"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The "current-arc" data structure is a mechanism for visiting the in- and out-neighbors of a node in the flow network in a static circular order. If a singly linked list of neighbors is created for a node, the data structure can be as simple as a pointer into the list that steps through the list and rewinds to the head when it runs off the end.
</p><p>Based on the "current-arc" data structure, the discharge operation can be defined. A discharge operation applies on an active node and repeatedly pushes flow from the node until it becomes inactive, relabeling it as necessary to create admissible arcs in the process.
</p>
<pre>discharge(u):
    <b>while</b> x<sub>f</sub>[u] &gt; 0 <b>do</b>
        <b>if</b> current-arc[u] has run off the end of neighbors[u] <b>then</b>
            relabel(u)
            rewind current-arc[u]
        <b>else</b>
            <b>let</b> (u, v) = current-arc[u]
            <b>if</b> (u, v) is admissible <b>then</b>
                push(u, v)
            <b>let</b> current-arc[u] point to the next neighbor of u
</pre>
<p>Finding the next admissible edge to push on has <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle O(1)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>O</mi>
        <mo stretchy="false">(</mo>
        <mn>1</mn>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle O(1)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e66384bc40452c5452f33563fe0e27e803b0cc21" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.838ex; width:4.745ex; height:2.843ex;" alt="{\displaystyle O(1)}"></span> <a href="/wiki/Amortized_complexity" class="mw-redirect" title="Amortized complexity">amortized complexity</a>. The current-arc pointer only moves to the next neighbor when the edge to the current neighbor is saturated or non-admissible, and neither of these two properties can change until the active node <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle u}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>u</mi>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle u}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c3e6bb763d22c20916ed4f0bb6bd49d7470cffd8" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.33ex; height:1.676ex;" alt="{\displaystyle u}"></span> is relabelled. Therefore, when the pointer runs off, there are no admissible unsaturated edges and we have to relabel the active node <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle u}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>u</mi>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle u}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c3e6bb763d22c20916ed4f0bb6bd49d7470cffd8" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.338ex; width:1.33ex; height:1.676ex;" alt="{\displaystyle u}"></span>, so having moved the pointer <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle O(V)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>O</mi>
        <mo stretchy="false">(</mo>
        <mi>V</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle O(V)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/44d40b1ca90fee2a2f7e0b3bddac30284ba828af" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.838ex; width:5.37ex; height:2.843ex;" alt="{\displaystyle O(V)}"></span> times is paid for by the <span class="mwe-math-element mwe-math-element-inline"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\displaystyle O(V)}">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>O</mi>
        <mo stretchy="false">(</mo>
        <mi>V</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle O(V)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/44d40b1ca90fee2a2f7e0b3bddac30284ba828af" class="mwe-math-fallback-image-inline mw-invert skin-invert" aria-hidden="true" style="vertical-align: -0.838ex; width:5.37ex; height:2.843ex;" alt="{\displaystyle O(V)}"></span> relabel operation.<sup id="cite_ref-goldberg88_8-4" class="reference"><a href="#cite_note-goldberg88-8"><span class="cite-bracket">[</span>8<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading3"><h3 id="Active_node_selection_rules">Active node selection rules</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=15" title="Edit section: Active node selection rules"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Definition of the discharge operation reduces the push–relabel algorithm to repeatedly selecting an active node to discharge. Depending on the selection rule, the algorithm exhibits different time complexities. For the sake of brevity, we ignore <span class="texhtml mvar" style="font-style:italic;">s</span> and <span class="texhtml mvar" style="font-style:italic;">t</span> when referring to the nodes in the following discussion.
</p>
<div class="mw-heading mw-heading4"><h4 id="FIFO_selection_rule">FIFO selection rule</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=16" title="Edit section: FIFO selection rule"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The <a href="/wiki/FIFO_(computing_and_electronics)" title="FIFO (computing and electronics)">FIFO</a> push–relabel algorithm<sup id="cite_ref-goldberg86_2-4" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup> organizes the active nodes into a queue. The initial active nodes can be inserted in arbitrary order. The algorithm always removes the node at the front of the queue for discharging. Whenever an inactive node becomes active, it is appended to the back of the queue.
</p><p>The algorithm has <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;3</sup>)</span> time complexity.
</p>
<div class="mw-heading mw-heading4"><h4 id="Relabel-to-front_selection_rule">Relabel-to-front selection rule</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=17" title="Edit section: Relabel-to-front selection rule"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The relabel-to-front push–relabel algorithm<sup id="cite_ref-clrs26_1-2" class="reference"><a href="#cite_note-clrs26-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup> organizes all nodes into a linked list and maintains the invariant that the list is <a href="/wiki/Topological_sorting" title="Topological sorting">topologically sorted</a> with respect to the admissible network. The algorithm scans the list from front to back and performs a discharge operation on the current node if it is active. If the node is relabeled, it is moved to the front of the list, and the scan is restarted from the front.
</p><p>The algorithm also has <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;3</sup>)</span> time complexity.
</p>
<div class="mw-heading mw-heading4"><h4 id="Highest_label_selection_rule">Highest label selection rule</h4><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=18" title="Edit section: Highest label selection rule"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>The highest-label push–relabel algorithm<sup id="cite_ref-cheriyan88_11-0" class="reference"><a href="#cite_note-cheriyan88-11"><span class="cite-bracket">[</span>11<span class="cite-bracket">]</span></a></sup> organizes all nodes into buckets indexed by their labels. The algorithm always selects an active node with the largest label to discharge.
</p><p>The algorithm has <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><span class="nowrap">√<span style="border-top:1px solid; padding:0 0.1em;"><i>E</i></span></span>)</span> time complexity. If the lowest-label selection rule is used instead, the time complexity becomes <span class="texhtml"><i>O</i>(<i>V</i><sup>&nbsp;2</sup><i>E</i>)</span>.<sup id="cite_ref-ahuja97_3-1" class="reference"><a href="#cite_note-ahuja97-3"><span class="cite-bracket">[</span>3<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading3"><h3 id="Implementation_techniques">Implementation techniques</h3><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=19" title="Edit section: Implementation techniques"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Although in the description of the generic push–relabel algorithm above, <span class="texhtml">𝓁(<i>u</i>)</span> is set to zero for each node <i>u</i> other than <span class="texhtml mvar" style="font-style:italic;">s</span> and <span class="texhtml mvar" style="font-style:italic;">t</span> at the beginning, it is preferable to perform a backward <a href="/wiki/Breadth-first_search" title="Breadth-first search">breadth-first search</a> from <span class="texhtml mvar" style="font-style:italic;">t</span> to compute exact labels.<sup id="cite_ref-goldberg86_2-5" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup>
</p><p>The algorithm is typically separated into two phases. Phase one computes a maximum pre-flow by discharging only active nodes whose labels are below <span class="texhtml mvar" style="font-style:italic;">n</span>. Phase two converts the maximum preflow into a maximum flow by returning excess flow that cannot reach <span class="texhtml mvar" style="font-style:italic;">t</span> to <span class="texhtml mvar" style="font-style:italic;">s</span>. It can be shown that phase two has <span class="texhtml"><i>O</i>(<i>VE</i>)</span> time complexity regardless of the order of push and relabel operations and is therefore dominated by phase one. Alternatively, it can be implemented using flow decomposition.<sup id="cite_ref-amo93_9-1" class="reference"><a href="#cite_note-amo93-9"><span class="cite-bracket">[</span>9<span class="cite-bracket">]</span></a></sup>
</p><p>Heuristics are crucial to improving the empirical performance of the algorithm.<sup id="cite_ref-cherkassky95_12-0" class="reference"><a href="#cite_note-cherkassky95-12"><span class="cite-bracket">[</span>12<span class="cite-bracket">]</span></a></sup> Two commonly used heuristics are the gap heuristic and the global relabeling heuristic.<sup id="cite_ref-goldberg86_2-6" class="reference"><a href="#cite_note-goldberg86-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup><sup id="cite_ref-derigs89_13-0" class="reference"><a href="#cite_note-derigs89-13"><span class="cite-bracket">[</span>13<span class="cite-bracket">]</span></a></sup> The gap heuristic detects gaps in the labeling function. If there is a label <span class="nowrap">0 &lt; 𝓁<i><span class="nowrap" style="padding-left:0.1em;">'</span></i> &lt; |&nbsp;<i>V</i>&nbsp;|</span> for which there is no node <span class="texhtml mvar" style="font-style:italic;">u</span> such that <span class="texhtml">𝓁(<i>u</i>) = 𝓁<i><span class="nowrap" style="padding-left:0.1em;">'</span></i></span>, then any node <span class="texhtml mvar" style="font-style:italic;">u</span> with <span class="texhtml">𝓁<i><span class="nowrap" style="padding-left:0.1em;">'</span></i> &lt; 𝓁(<i>u</i>) &lt; |&nbsp;<i>V</i>&nbsp;|</span> has been disconnected from <span class="texhtml mvar" style="font-style:italic;">t</span> and can be relabeled to <span class="texhtml">(|&nbsp;<i>V</i>&nbsp;| + 1)</span> immediately. The global relabeling heuristic periodically performs backward breadth-first search from <span class="texhtml mvar" style="font-style:italic;">t</span> in <span class="texhtml"><i>G</i><sub><i>f</i></sub>&nbsp;</span> to compute the exact labels of the nodes. Both heuristics skip unhelpful relabel operations, which are a bottleneck of the algorithm and contribute to the ineffectiveness of dynamic trees.<sup id="cite_ref-goldberg08_4-2" class="reference"><a href="#cite_note-goldberg08-4"><span class="cite-bracket">[</span>4<span class="cite-bracket">]</span></a></sup>
</p>
<div class="mw-heading mw-heading2"><h2 id="Sample_implementations">Sample implementations</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=20" title="Edit section: Sample implementations"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<style data-mw-deduplicate="TemplateStyles:r1214851843">.mw-parser-output .hidden-begin{box-sizing:border-box;width:100%;padding:5px;border:none;font-size:95%}.mw-parser-output .hidden-title{font-weight:bold;line-height:1.6;text-align:left}.mw-parser-output .hidden-content{text-align:left}@media all and (max-width:500px){.mw-parser-output .hidden-begin{width:auto!important;clear:none!important;float:none!important}}</style><div class="hidden-begin mw-collapsible mw-collapsed" style="border:1px #aaa solid;"><div class="hidden-title skin-nightmode-reset-color" style="text-align:center"><a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> implementation</div><div class="hidden-content mw-collapsible-content" style="">
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdlib.h&gt;</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdio.h&gt;</span>

<span class="cp">#define NODES 6</span>
<span class="cp">#define MIN(X,Y) ((X) &lt; (Y)&nbsp;? (X)&nbsp;: (Y))</span>
<span class="cp">#define INFINITE 10000000</span>

<span class="kt">void</span><span class="w"> </span><span class="nf">push</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">u</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">v</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">send</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MIN</span><span class="p">(</span><span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">],</span><span class="w"> </span><span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]);</span>
<span class="w">  </span><span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">send</span><span class="p">;</span>
<span class="w">  </span><span class="n">F</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">-=</span><span class="w"> </span><span class="n">send</span><span class="p">;</span>
<span class="w">  </span><span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">-=</span><span class="w"> </span><span class="n">send</span><span class="p">;</span>
<span class="w">  </span><span class="n">excess</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">send</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span><span class="w"> </span><span class="nf">relabel</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">height</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">u</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">v</span><span class="p">;</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">min_height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">INFINITE</span><span class="p">;</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">v</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">v</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">v</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">min_height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MIN</span><span class="p">(</span><span class="n">min_height</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="p">[</span><span class="n">v</span><span class="p">]);</span>
<span class="w">      </span><span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">min_height</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">};</span>

<span class="kt">void</span><span class="w"> </span><span class="nf">discharge</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">height</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">seen</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">u</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="k">while</span><span class="w"> </span><span class="p">(</span><span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="kt">int</span><span class="w"> </span><span class="n">v</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">];</span>
<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="p">(</span><span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">height</span><span class="p">[</span><span class="n">v</span><span class="p">]))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="n">push</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="n">u</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">);</span>
<span class="w">      </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span>
<span class="w">      </span><span class="p">}</span>
<span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">relabel</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="p">,</span><span class="w"> </span><span class="n">u</span><span class="p">);</span>
<span class="w">      </span><span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span><span class="w"> </span><span class="nf">moveToFront</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">A</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">temp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">n</span><span class="p">;</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">;</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">n</span><span class="o">--</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="n">A</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">A</span><span class="p">[</span><span class="n">n</span><span class="mi">-1</span><span class="p">];</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span><span class="n">A</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">temp</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span><span class="w"> </span><span class="nf">pushRelabel</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">sink</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="o">*</span><span class="n">height</span><span class="p">,</span><span class="w"> </span><span class="o">*</span><span class="n">list</span><span class="p">,</span><span class="w"> </span><span class="o">*</span><span class="n">seen</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">p</span><span class="p">;</span>

<span class="w">  </span><span class="n">excess</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="w">  </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="w">  </span><span class="n">seen</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

<span class="w">  </span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">((</span><span class="n">NODES</span><span class="mi">-2</span><span class="p">),</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">i</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="n">source</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="n">sink</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">list</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">;</span>
<span class="w">      </span><span class="n">p</span><span class="o">++</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">  </span><span class="p">}</span>

<span class="w">  </span><span class="n">height</span><span class="p">[</span><span class="n">source</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span>
<span class="w">  </span><span class="n">excess</span><span class="p">[</span><span class="n">source</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">INFINITE</span><span class="p">;</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
<span class="w">    </span><span class="n">push</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">);</span>

<span class="w">  </span><span class="n">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">  </span><span class="k">while</span><span class="w"> </span><span class="p">(</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">2</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">u</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">list</span><span class="p">[</span><span class="n">p</span><span class="p">];</span>
<span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">old_height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">];</span>
<span class="w">    </span><span class="n">discharge</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">F</span><span class="p">,</span><span class="w"> </span><span class="n">excess</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="p">,</span><span class="w"> </span><span class="n">seen</span><span class="p">,</span><span class="w"> </span><span class="n">u</span><span class="p">);</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">old_height</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">moveToFront</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="w"> </span><span class="n">list</span><span class="p">);</span>
<span class="w">      </span><span class="n">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">p</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">maxflow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
<span class="w">    </span><span class="n">maxflow</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="n">F</span><span class="p">[</span><span class="n">source</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>

<span class="w">  </span><span class="n">free</span><span class="p">(</span><span class="n">list</span><span class="p">);</span>

<span class="w">  </span><span class="n">free</span><span class="p">(</span><span class="n">seen</span><span class="p">);</span>
<span class="w">  </span><span class="n">free</span><span class="p">(</span><span class="n">height</span><span class="p">);</span>
<span class="w">  </span><span class="n">free</span><span class="p">(</span><span class="n">excess</span><span class="p">);</span>

<span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="n">maxflow</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span><span class="w"> </span><span class="nf">printMatrix</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">M</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">j</span><span class="p">;</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">j</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">j</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
<span class="w">      </span><span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\t</span><span class="s">"</span><span class="p">,</span><span class="n">M</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
<span class="w">    </span><span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span><span class="w"> </span><span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="n">flow</span><span class="p">,</span><span class="w"> </span><span class="o">**</span><span class="n">capacities</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">;</span>
<span class="w">  </span><span class="n">flow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">));</span>
<span class="w">  </span><span class="n">capacities</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">**</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">));</span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">NODES</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="n">flow</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="w">    </span><span class="n">capacities</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">calloc</span><span class="p">(</span><span class="n">NODES</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="w">  </span><span class="p">}</span>

<span class="w">  </span><span class="c1">// Sample graph</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">2</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">9</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">7</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">7</span><span class="p">;</span>
<span class="w">  </span><span class="n">capacities</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">4</span><span class="p">;</span>

<span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">"Capacity:</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="w">  </span><span class="n">printMatrix</span><span class="p">(</span><span class="n">capacities</span><span class="p">);</span>

<span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">"Max Flow:</span><span class="se">\n</span><span class="s">%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="w"> </span><span class="n">pushRelabel</span><span class="p">(</span><span class="n">capacities</span><span class="p">,</span><span class="w"> </span><span class="n">flow</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">));</span>

<span class="w">  </span><span class="n">printf</span><span class="p">(</span><span class="s">"Flows:</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="w">  </span><span class="n">printMatrix</span><span class="p">(</span><span class="n">flow</span><span class="p">);</span>

<span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div></div>
<link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1214851843"><div class="hidden-begin mw-collapsible mw-collapsed" style="border:1px #aaa solid;"><div class="hidden-title skin-nightmode-reset-color" style="text-align:center"><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> implementation</div><div class="hidden-content mw-collapsible-content" style="">
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="k">def</span><span class="w"> </span><span class="nf">relabel_to_front</span><span class="p">(</span><span class="n">C</span><span class="p">,</span> <span class="n">source</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">sink</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">C</span><span class="p">)</span>  <span class="c1"># C is the capacity matrix</span>
    <span class="n">F</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span>
    <span class="c1"># residual capacity from u to v is C[u][v] - F[u][v]</span>

    <span class="n">height</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span>  <span class="c1"># height of node</span>
    <span class="n">excess</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span>  <span class="c1"># flow into node minus flow from node</span>
    <span class="n">seen</span>   <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span>  <span class="c1"># neighbours seen since last relabel</span>
    <span class="c1"># node "queue"</span>
    <span class="n">nodelist</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">!=</span> <span class="n">source</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">!=</span> <span class="n">sink</span><span class="p">]</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">push</span><span class="p">(</span><span class="n">u</span><span class="p">,</span> <span class="n">v</span><span class="p">):</span>
        <span class="n">send</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">],</span> <span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">-</span> <span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">])</span>
        <span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">+=</span> <span class="n">send</span>
        <span class="n">F</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">u</span><span class="p">]</span> <span class="o">-=</span> <span class="n">send</span>
        <span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">-=</span> <span class="n">send</span>
        <span class="n">excess</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="o">+=</span> <span class="n">send</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">relabel</span><span class="p">(</span><span class="n">u</span><span class="p">):</span>
        <span class="c1"># Find smallest new height making a push possible,</span>
        <span class="c1"># if such a push is possible at all.</span>
        <span class="n">min_height</span> <span class="o">=</span> <span class="err">∞</span>
        <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">-</span> <span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">min_height</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">min_height</span><span class="p">,</span> <span class="n">height</span><span class="p">[</span><span class="n">v</span><span class="p">])</span>
                <span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">=</span> <span class="n">min_height</span> <span class="o">+</span> <span class="mi">1</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">discharge</span><span class="p">(</span><span class="n">u</span><span class="p">):</span>
        <span class="k">while</span> <span class="n">excess</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>  <span class="c1"># check next neighbour</span>
                <span class="n">v</span> <span class="o">=</span> <span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span>
                <span class="k">if</span> <span class="n">C</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">-</span> <span class="n">F</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">v</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">height</span><span class="p">[</span><span class="n">v</span><span class="p">]:</span>
                    <span class="n">push</span><span class="p">(</span><span class="n">u</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>  <span class="c1"># we have checked all neighbours. must relabel</span>
                <span class="n">relabel</span><span class="p">(</span><span class="n">u</span><span class="p">)</span>
                <span class="n">seen</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">height</span><span class="p">[</span><span class="n">source</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span>  <span class="c1"># longest path from source to sink is less than n long</span>
    <span class="n">excess</span><span class="p">[</span><span class="n">source</span><span class="p">]</span> <span class="o">=</span> <span class="err">∞</span>  <span class="c1"># send as much flow as possible to neighbours of source</span>
    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="n">push</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>

    <span class="n">p</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">while</span> <span class="n">p</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">nodelist</span><span class="p">):</span>
        <span class="n">u</span> <span class="o">=</span> <span class="n">nodelist</span><span class="p">[</span><span class="n">p</span><span class="p">]</span>
        <span class="n">old_height</span> <span class="o">=</span> <span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span>
        <span class="n">discharge</span><span class="p">(</span><span class="n">u</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">height</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">old_height</span><span class="p">:</span>
            <span class="n">nodelist</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">nodelist</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="n">p</span><span class="p">))</span>  <span class="c1"># move to front of list</span>
            <span class="n">p</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># start from front of list</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">p</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="k">return</span> <span class="nb">sum</span><span class="p">(</span><span class="n">F</span><span class="p">[</span><span class="n">source</span><span class="p">])</span>
</pre></div>
</div></div>
<div class="mw-heading mw-heading2"><h2 id="References">References</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;action=edit&amp;section=21" title="Edit section: References"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<style data-mw-deduplicate="TemplateStyles:r1239543626">.mw-parser-output .reflist{margin-bottom:0.5em;list-style-type:decimal}@media screen{.mw-parser-output .reflist{font-size:90%}}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}</style><div class="reflist reflist-columns references-column-width reflist-columns-2">
<ol class="references">
<li id="cite_note-clrs26-1"><span class="mw-cite-backlink">^ <a href="#cite_ref-clrs26_1-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-clrs26_1-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-clrs26_1-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><style data-mw-deduplicate="TemplateStyles:r1238218222">.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}}</style><cite id="CITEREFCormenLeisersonRivestStein2001" class="citation book cs1"><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Cormen, T. H.</a>; <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Leiserson, C. E.</a>; <a href="/wiki/Ron_Rivest" title="Ron Rivest">Rivest, R. L.</a>; <a href="/wiki/Clifford_Stein" title="Clifford Stein">Stein, C.</a> (2001). "§26 Maximum flow". <a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms"><i>Introduction to Algorithms</i></a> (2nd&nbsp;ed.). The MIT Press. pp.&nbsp;<a rel="nofollow" class="external text" href="https://archive.org/details/introductiontoal00corm_691/page/n665">643</a>–698. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-0262032933" title="Special:BookSources/978-0262032933"><bdi>978-0262032933</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=%C2%A726+Maximum+flow&amp;rft.btitle=Introduction+to+Algorithms&amp;rft.pages=643-698&amp;rft.edition=2nd&amp;rft.pub=The+MIT+Press&amp;rft.date=2001&amp;rft.isbn=978-0262032933&amp;rft.aulast=Cormen&amp;rft.aufirst=T.+H.&amp;rft.au=Leiserson%2C+C.+E.&amp;rft.au=Rivest%2C+R.+L.&amp;rft.au=Stein%2C+C.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-goldberg86-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-goldberg86_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-goldberg86_2-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-goldberg86_2-2"><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-goldberg86_2-3"><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-goldberg86_2-4"><sup><i><b>e</b></i></sup></a> <a href="#cite_ref-goldberg86_2-5"><sup><i><b>f</b></i></sup></a> <a href="#cite_ref-goldberg86_2-6"><sup><i><b>g</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFGoldbergTarjan1986" class="citation book cs1">Goldberg, A V; Tarjan, R E (1986). "A new approach to the maximum flow problem". <i>Proceedings of the eighteenth annual ACM symposium on Theory of computing – STOC '86</i>. p.&nbsp;136. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F12130.12144">10.1145/12130.12144</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-0897911931" title="Special:BookSources/978-0897911931"><bdi>978-0897911931</bdi></a>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:14492800">14492800</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=A+new+approach+to+the+maximum+flow+problem&amp;rft.btitle=Proceedings+of+the+eighteenth+annual+ACM+symposium+on+Theory+of+computing+%E2%80%93+STOC+%2786&amp;rft.pages=136&amp;rft.date=1986&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A14492800%23id-name%3DS2CID&amp;rft_id=info%3Adoi%2F10.1145%2F12130.12144&amp;rft.isbn=978-0897911931&amp;rft.aulast=Goldberg&amp;rft.aufirst=A+V&amp;rft.au=Tarjan%2C+R+E&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-ahuja97-3"><span class="mw-cite-backlink">^ <a href="#cite_ref-ahuja97_3-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-ahuja97_3-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFAhujaKodialamMishraOrlin1997" class="citation journal cs1">Ahuja, Ravindra K.; Kodialam, Murali; Mishra, Ajay K.; Orlin, James B. (1997). "Computational investigations of maximum flow algorithms". <i>European Journal of Operational Research</i>. <b>97</b> (3): 509. <a href="/wiki/CiteSeerX_(identifier)" class="mw-redirect" title="CiteSeerX (identifier)">CiteSeerX</a>&nbsp;<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.297.2945">10.1.1.297.2945</a></span>. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1016%2FS0377-2217%2896%2900269-X">10.1016/S0377-2217(96)00269-X</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=European+Journal+of+Operational+Research&amp;rft.atitle=Computational+investigations+of+maximum+flow+algorithms&amp;rft.volume=97&amp;rft.issue=3&amp;rft.pages=509&amp;rft.date=1997&amp;rft_id=https%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.297.2945%23id-name%3DCiteSeerX&amp;rft_id=info%3Adoi%2F10.1016%2FS0377-2217%2896%2900269-X&amp;rft.aulast=Ahuja&amp;rft.aufirst=Ravindra+K.&amp;rft.au=Kodialam%2C+Murali&amp;rft.au=Mishra%2C+Ajay+K.&amp;rft.au=Orlin%2C+James+B.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-goldberg08-4"><span class="mw-cite-backlink">^ <a href="#cite_ref-goldberg08_4-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-goldberg08_4-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-goldberg08_4-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFGoldberg2008" class="citation book cs1">Goldberg, Andrew V. (2008). "The Partial Augment–Relabel Algorithm for the Maximum Flow Problem". <i>Algorithms – ESA 2008</i>. Lecture Notes in Computer Science. Vol.&nbsp;5193. pp.&nbsp;<span class="nowrap">466–</span>477. <a href="/wiki/CiteSeerX_(identifier)" class="mw-redirect" title="CiteSeerX (identifier)">CiteSeerX</a>&nbsp;<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.150.5103">10.1.1.150.5103</a></span>. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1007%2F978-3-540-87744-8_39">10.1007/978-3-540-87744-8_39</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-3-540-87743-1" title="Special:BookSources/978-3-540-87743-1"><bdi>978-3-540-87743-1</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=The+Partial+Augment%E2%80%93Relabel+Algorithm+for+the+Maximum+Flow+Problem&amp;rft.btitle=Algorithms+%E2%80%93+ESA+2008&amp;rft.series=Lecture+Notes+in+Computer+Science&amp;rft.pages=466-477&amp;rft.date=2008&amp;rft_id=https%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.150.5103%23id-name%3DCiteSeerX&amp;rft_id=info%3Adoi%2F10.1007%2F978-3-540-87744-8_39&amp;rft.isbn=978-3-540-87743-1&amp;rft.aulast=Goldberg&amp;rft.aufirst=Andrew+V.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-goldberg97-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-goldberg97_5-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFGoldberg1997" class="citation journal cs1">Goldberg, Andrew V (1997). "An Efficient Implementation of a Scaling Minimum-Cost Flow Algorithm". <i>Journal of Algorithms</i>. <b>22</b>: <span class="nowrap">1–</span>29. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1006%2Fjagm.1995.0805">10.1006/jagm.1995.0805</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Algorithms&amp;rft.atitle=An+Efficient+Implementation+of+a+Scaling+Minimum-Cost+Flow+Algorithm&amp;rft.volume=22&amp;rft.pages=1-29&amp;rft.date=1997&amp;rft_id=info%3Adoi%2F10.1006%2Fjagm.1995.0805&amp;rft.aulast=Goldberg&amp;rft.aufirst=Andrew+V&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-ahuja91-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-ahuja91_6-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFAhujaOrlin1991" class="citation journal cs1">Ahuja, Ravindra K.; Orlin, James B. (1991). "Distance-directed augmenting path algorithms for maximum flow and parametric maximum flow problems". <i>Naval Research Logistics</i>. <b>38</b> (3): 413. <a href="/wiki/CiteSeerX_(identifier)" class="mw-redirect" title="CiteSeerX (identifier)">CiteSeerX</a>&nbsp;<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.297.5698">10.1.1.297.5698</a></span>. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1002%2F1520-6750%28199106%2938%3A3%3C413%3A%3AAID-NAV3220380310%3E3.0.CO%3B2-J">10.1002/1520-6750(199106)38:3&lt;413::AID-NAV3220380310&gt;3.0.CO;2-J</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Naval+Research+Logistics&amp;rft.atitle=Distance-directed+augmenting+path+algorithms+for+maximum+flow+and+parametric+maximum+flow+problems&amp;rft.volume=38&amp;rft.issue=3&amp;rft.pages=413&amp;rft.date=1991&amp;rft_id=https%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.297.5698%23id-name%3DCiteSeerX&amp;rft_id=info%3Adoi%2F10.1002%2F1520-6750%28199106%2938%3A3%3C413%3A%3AAID-NAV3220380310%3E3.0.CO%3B2-J&amp;rft.aulast=Ahuja&amp;rft.aufirst=Ravindra+K.&amp;rft.au=Orlin%2C+James+B.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-goldberg2014-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-goldberg2014_7-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFGoldbergTarjan2014" class="citation journal cs1">Goldberg, Andrew V.; Tarjan, Robert E. (2014). "Efficient maximum flow algorithms". <i>Communications of the ACM</i>. <b>57</b> (8): 82. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F2628036">10.1145/2628036</a>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:17014879">17014879</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.atitle=Efficient+maximum+flow+algorithms&amp;rft.volume=57&amp;rft.issue=8&amp;rft.pages=82&amp;rft.date=2014&amp;rft_id=info%3Adoi%2F10.1145%2F2628036&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A17014879%23id-name%3DS2CID&amp;rft.aulast=Goldberg&amp;rft.aufirst=Andrew+V.&amp;rft.au=Tarjan%2C+Robert+E.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-goldberg88-8"><span class="mw-cite-backlink">^ <a href="#cite_ref-goldberg88_8-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-goldberg88_8-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-goldberg88_8-2"><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-goldberg88_8-3"><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-goldberg88_8-4"><sup><i><b>e</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFGoldbergTarjan1988" class="citation journal cs1">Goldberg, Andrew V.; Tarjan, Robert E. (1988). <a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F48014.61051">"A new approach to the maximum-flow problem"</a>. <i>Journal of the ACM</i>. <b>35</b> (4): 921. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F48014.61051">10.1145/48014.61051</a></span>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:52152408">52152408</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+the+ACM&amp;rft.atitle=A+new+approach+to+the+maximum-flow+problem&amp;rft.volume=35&amp;rft.issue=4&amp;rft.pages=921&amp;rft.date=1988&amp;rft_id=info%3Adoi%2F10.1145%2F48014.61051&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A52152408%23id-name%3DS2CID&amp;rft.aulast=Goldberg&amp;rft.aufirst=Andrew+V.&amp;rft.au=Tarjan%2C+Robert+E.&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1145%252F48014.61051&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-amo93-9"><span class="mw-cite-backlink">^ <a href="#cite_ref-amo93_9-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-amo93_9-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFAhujaMagnantiOrlin1993" class="citation book cs1">Ahuja, R. K.; Magnanti, T. L.; Orlin, J. B. (1993). <i>Network Flows: Theory, Algorithms, and Applications</i> (1st&nbsp;ed.). Prentice Hall. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-0136175490" title="Special:BookSources/978-0136175490"><bdi>978-0136175490</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Network+Flows%3A+Theory%2C+Algorithms%2C+and+Applications&amp;rft.edition=1st&amp;rft.pub=Prentice+Hall&amp;rft.date=1993&amp;rft.isbn=978-0136175490&amp;rft.aulast=Ahuja&amp;rft.aufirst=R.+K.&amp;rft.au=Magnanti%2C+T.+L.&amp;rft.au=Orlin%2C+J.+B.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-sv82-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-sv82_10-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFShiloachVishkin1982" class="citation journal cs1">Shiloach, Yossi; Vishkin, Uzi (1982). "An O(n2log n) parallel max-flow algorithm". <i>Journal of Algorithms</i>. <b>3</b> (2): <span class="nowrap">128–</span>146. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1016%2F0196-6774%2882%2990013-X">10.1016/0196-6774(82)90013-X</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Algorithms&amp;rft.atitle=An+O%28n2log+n%29+parallel+max-flow+algorithm&amp;rft.volume=3&amp;rft.issue=2&amp;rft.pages=128-146&amp;rft.date=1982&amp;rft_id=info%3Adoi%2F10.1016%2F0196-6774%2882%2990013-X&amp;rft.aulast=Shiloach&amp;rft.aufirst=Yossi&amp;rft.au=Vishkin%2C+Uzi&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-cheriyan88-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-cheriyan88_11-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFCheriyanMaheshwari1988" class="citation book cs1">Cheriyan, J.; Maheshwari, S. N. (1988). "Analysis of preflow push algorithms for maximum network flow". <i>Foundations of Software Technology and Theoretical Computer Science</i>. Lecture Notes in Computer Science. Vol.&nbsp;338. p.&nbsp;30. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1007%2F3-540-50517-2_69">10.1007/3-540-50517-2_69</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-3-540-50517-4" title="Special:BookSources/978-3-540-50517-4"><bdi>978-3-540-50517-4</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=Analysis+of+preflow+push+algorithms+for+maximum+network+flow&amp;rft.btitle=Foundations+of+Software+Technology+and+Theoretical+Computer+Science&amp;rft.series=Lecture+Notes+in+Computer+Science&amp;rft.pages=30&amp;rft.date=1988&amp;rft_id=info%3Adoi%2F10.1007%2F3-540-50517-2_69&amp;rft.isbn=978-3-540-50517-4&amp;rft.aulast=Cheriyan&amp;rft.aufirst=J.&amp;rft.au=Maheshwari%2C+S.+N.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-cherkassky95-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-cherkassky95_12-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFCherkasskyGoldberg1995" class="citation book cs1">Cherkassky, Boris V.; Goldberg, Andrew V. (1995). "On implementing push-relabel method for the maximum flow problem". <i>Integer Programming and Combinatorial Optimization</i>. Lecture Notes in Computer Science. Vol.&nbsp;920. p.&nbsp;157. <a href="/wiki/CiteSeerX_(identifier)" class="mw-redirect" title="CiteSeerX (identifier)">CiteSeerX</a>&nbsp;<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.150.3609">10.1.1.150.3609</a></span>. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1007%2F3-540-59408-6_49">10.1007/3-540-59408-6_49</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/978-3-540-59408-6" title="Special:BookSources/978-3-540-59408-6"><bdi>978-3-540-59408-6</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=On+implementing+push-relabel+method+for+the+maximum+flow+problem&amp;rft.btitle=Integer+Programming+and+Combinatorial+Optimization&amp;rft.series=Lecture+Notes+in+Computer+Science&amp;rft.pages=157&amp;rft.date=1995&amp;rft_id=https%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.150.3609%23id-name%3DCiteSeerX&amp;rft_id=info%3Adoi%2F10.1007%2F3-540-59408-6_49&amp;rft.isbn=978-3-540-59408-6&amp;rft.aulast=Cherkassky&amp;rft.aufirst=Boris+V.&amp;rft.au=Goldberg%2C+Andrew+V.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
<li id="cite_note-derigs89-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-derigs89_13-0">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFDerigsMeier1989" class="citation journal cs1">Derigs, U.; Meier, W. (1989). "Implementing Goldberg's max-flow-algorithm&nbsp;? A computational investigation". <i>Zeitschrift für Operations Research</i>. <b>33</b> (6): 383. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1007%2FBF01415937">10.1007/BF01415937</a>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:39730584">39730584</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Zeitschrift+f%C3%BCr+Operations+Research&amp;rft.atitle=Implementing+Goldberg%27s+max-flow-algorithm+%3F+A+computational+investigation&amp;rft.volume=33&amp;rft.issue=6&amp;rft.pages=383&amp;rft.date=1989&amp;rft_id=info%3Adoi%2F10.1007%2FBF01415937&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A39730584%23id-name%3DS2CID&amp;rft.aulast=Derigs&amp;rft.aufirst=U.&amp;rft.au=Meier%2C+W.&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APush%E2%80%93relabel+maximum+flow+algorithm" class="Z3988"></span></span>
</li>
</ol></div>
<div class="navbox-styles"><style data-mw-deduplicate="TemplateStyles:r1129693374">.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:": "}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:" · ";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:" (";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:")";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:" "counter(listitem)"\a0 "}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:" ("counter(listitem)"\a0 "}</style><style data-mw-deduplicate="TemplateStyles:r1236075235">.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}body.skin--responsive .mw-parser-output .navbox-image img{max-width:none!important}@media print{body.ns-0 .mw-parser-output .navbox{display:none!important}}</style></div><div role="navigation" class="navbox" aria-labelledby="Optimization:_Algorithms,_methods,_and_heuristics381" style="padding:3px"><table class="nowraplinks hlist mw-collapsible expanded navbox-inner" style="border-spacing:0;background:transparent;color:inherit"><tbody><tr><th scope="col" class="navbox-title" colspan="3"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1129693374"><style data-mw-deduplicate="TemplateStyles:r1239400231">.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}html.skin-theme-clientpref-night .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}}@media print{.mw-parser-output .navbar{display:none!important}}</style><div class="navbar plainlinks hlist navbar-mini"><ul><li class="nv-view"><a href="/wiki/Template:Optimization_algorithms" title="Template:Optimization algorithms"><abbr title="View this template">v</abbr></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Optimization_algorithms" title="Template talk:Optimization algorithms"><abbr title="Discuss this template">t</abbr></a></li><li class="nv-edit"><a href="/wiki/Special:EditPage/Template:Optimization_algorithms" title="Special:EditPage/Template:Optimization algorithms"><abbr title="Edit this template">e</abbr></a></li></ul></div><div id="Optimization:_Algorithms,_methods,_and_heuristics381" style="font-size:114%;margin:0 4em"><a href="/wiki/Mathematical_optimization" title="Mathematical optimization">Optimization</a>: <a href="/wiki/Optimization_algorithm" class="mw-redirect" title="Optimization algorithm">Algorithms</a>, <a href="/wiki/Iterative_method" title="Iterative method">methods</a>, and <a href="/wiki/Heuristic_algorithm" class="mw-redirect" title="Heuristic algorithm">heuristics</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks mw-collapsible mw-collapsed navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div id="Unconstrained_nonlinear381" style="font-size:114%;margin:0 4em"><a href="/wiki/Nonlinear_programming" title="Nonlinear programming">Unconstrained nonlinear</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Function_(mathematics)" title="Function (mathematics)">Functions</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Golden-section_search" title="Golden-section search">Golden-section search</a></li>
<li><a href="/wiki/Powell%27s_method" title="Powell's method">Powell's method</a></li>
<li><a href="/wiki/Line_search" title="Line search">Line search</a></li>
<li><a href="/wiki/Nelder%E2%80%93Mead_method" title="Nelder–Mead method">Nelder–Mead method</a></li>
<li><a href="/wiki/Successive_parabolic_interpolation" title="Successive parabolic interpolation">Successive parabolic interpolation</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Gradient" title="Gradient">Gradients</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Local_convergence" title="Local convergence">Convergence</a></th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Trust_region" title="Trust region">Trust region</a></li>
<li><a href="/wiki/Wolfe_conditions" title="Wolfe conditions">Wolfe conditions</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Quasi-Newton_method" title="Quasi-Newton method">Quasi–Newton</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Berndt%E2%80%93Hall%E2%80%93Hall%E2%80%93Hausman_algorithm" title="Berndt–Hall–Hall–Hausman algorithm">Berndt–Hall–Hall–Hausman</a></li>
<li><a href="/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm" title="Broyden–Fletcher–Goldfarb–Shanno algorithm">Broyden–Fletcher–Goldfarb–Shanno</a> and <a href="/wiki/Limited-memory_BFGS" title="Limited-memory BFGS">L-BFGS</a></li>
<li><a href="/wiki/Davidon%E2%80%93Fletcher%E2%80%93Powell_formula" title="Davidon–Fletcher–Powell formula">Davidon–Fletcher–Powell</a></li>
<li><a href="/wiki/Symmetric_rank-one" title="Symmetric rank-one">Symmetric rank-one (SR1)</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Iterative_method" title="Iterative method">Other methods</a></th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Nonlinear_conjugate_gradient_method" title="Nonlinear conjugate gradient method">Conjugate gradient</a></li>
<li><a href="/wiki/Gauss%E2%80%93Newton_algorithm" title="Gauss–Newton algorithm">Gauss–Newton</a></li>
<li><a href="/wiki/Gradient_descent" title="Gradient descent">Gradient</a></li>
<li><a href="/wiki/Mirror_descent" title="Mirror descent">Mirror</a></li>
<li><a href="/wiki/Levenberg%E2%80%93Marquardt_algorithm" title="Levenberg–Marquardt algorithm">Levenberg–Marquardt</a></li>
<li><a href="/wiki/Powell%27s_dog_leg_method" title="Powell's dog leg method">Powell's dog leg method</a></li>
<li><a href="/wiki/Truncated_Newton_method" title="Truncated Newton method">Truncated Newton</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Hessian_matrix" title="Hessian matrix">Hessians</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Newton%27s_method_in_optimization" title="Newton's method in optimization">Newton's method</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr></tbody></table><div></div></td><td class="noviewer navbox-image" rowspan="5" style="width:1px;padding:0 0 0 2px"><div><figure class="mw-halign-right" typeof="mw:File"><a href="/wiki/File:Max_paraboloid.svg" class="mw-file-description" title="Optimization computes maxima and minima."><img alt="Graph of a strictly concave quadratic function with unique maximum." src="//upload.wikimedia.org/wikipedia/commons/thumb/7/72/Max_paraboloid.svg/250px-Max_paraboloid.svg.png" decoding="async" width="150" height="120" class="mw-file-element" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/72/Max_paraboloid.svg/330px-Max_paraboloid.svg.png 2x" data-file-width="700" data-file-height="560"></a><figcaption>Optimization computes maxima and minima.</figcaption></figure></div></td></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks mw-collapsible mw-collapsed navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div id="Constrained_nonlinear381" style="font-size:114%;margin:0 4em"><a href="/wiki/Nonlinear_programming" title="Nonlinear programming">Constrained nonlinear</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%">General</th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Barrier_function" title="Barrier function">Barrier methods</a></li>
<li><a href="/wiki/Penalty_method" title="Penalty method">Penalty methods</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%">Differentiable</th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Augmented_Lagrangian_method" title="Augmented Lagrangian method">Augmented Lagrangian methods</a></li>
<li><a href="/wiki/Sequential_quadratic_programming" title="Sequential quadratic programming">Sequential quadratic programming</a></li>
<li><a href="/wiki/Successive_linear_programming" title="Successive linear programming">Successive linear programming</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr></tbody></table><div></div></td></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks mw-collapsible mw-collapsed navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div id="Convex_optimization381" style="font-size:114%;margin:0 4em"><a href="/wiki/Convex_optimization" title="Convex optimization">Convex optimization</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Convex_minimization" class="mw-redirect" title="Convex minimization">Convex<br> minimization</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Cutting-plane_method" title="Cutting-plane method">Cutting-plane method</a></li>
<li><a href="/wiki/Frank%E2%80%93Wolfe_algorithm" title="Frank–Wolfe algorithm">Reduced gradient (Frank–Wolfe)</a></li>
<li><a href="/wiki/Subgradient_method" title="Subgradient method">Subgradient method</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Linear_programming" title="Linear programming">Linear</a> and<br><a href="/wiki/Quadratic_programming" title="Quadratic programming">quadratic</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Linear_programming#Interior_point" title="Linear programming">Interior point</a></th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Affine_scaling" title="Affine scaling">Affine scaling</a></li>
<li><a href="/wiki/Ellipsoid_method" title="Ellipsoid method">Ellipsoid algorithm of Khachiyan</a></li>
<li><a href="/wiki/Karmarkar%27s_algorithm" title="Karmarkar's algorithm">Projective algorithm of Karmarkar</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Matroid" title="Matroid">Basis-</a><a href="/wiki/Exchange_algorithm" class="mw-redirect" title="Exchange algorithm">exchange</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Simplex_algorithm" title="Simplex algorithm">Simplex algorithm of Dantzig</a></li>
<li><a href="/wiki/Revised_simplex_method" title="Revised simplex method">Revised simplex algorithm</a></li>
<li><a href="/wiki/Criss-cross_algorithm" title="Criss-cross algorithm">Criss-cross algorithm</a></li>
<li><a href="/wiki/Lemke%27s_algorithm" title="Lemke's algorithm">Principal pivoting algorithm of Lemke</a></li>
<li><a href="/wiki/Active-set_method" title="Active-set method">Active-set method</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr></tbody></table><div></div></td></tr></tbody></table><div></div></td></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks mw-collapsible uncollapsed navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div id="Combinatorial381" style="font-size:114%;margin:0 4em"><a href="/wiki/Combinatorial_optimization" title="Combinatorial optimization">Combinatorial</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="row" class="navbox-group" style="width:1%">Paradigms</th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Approximation_algorithm" title="Approximation algorithm">Approximation algorithm</a></li>
<li><a href="/wiki/Dynamic_programming" title="Dynamic programming">Dynamic programming</a></li>
<li><a href="/wiki/Greedy_algorithm" title="Greedy algorithm">Greedy algorithm</a></li>
<li><a href="/wiki/Integer_programming" title="Integer programming">Integer programming</a>
<ul><li><a href="/wiki/Branch_and_bound" title="Branch and bound">Branch and bound</a>/<a href="/wiki/Branch_and_cut" title="Branch and cut">cut</a></li></ul></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Graph_algorithm" class="mw-redirect" title="Graph algorithm">Graph<br> algorithms</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th id="Minimum_spanning_tree52" scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Minimum_spanning_tree" title="Minimum spanning tree">Minimum<br> spanning tree</a></th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Bor%C5%AFvka%27s_algorithm" title="Borůvka's algorithm">Borůvka</a></li>
<li><a href="/wiki/Prim%27s_algorithm" title="Prim's algorithm">Prim</a></li>
<li><a href="/wiki/Kruskal%27s_algorithm" title="Kruskal's algorithm">Kruskal</a></li></ul>
</div></td></tr></tbody></table><div>
    </div><table class="nowraplinks navbox-subgroup" style="border-spacing:0"><tbody><tr><th id="Shortest_path39" scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Shortest_path_problem" title="Shortest path problem">Shortest path</a></th><td class="navbox-list-with-group navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Bellman%E2%80%93Ford_algorithm" title="Bellman–Ford algorithm">Bellman–Ford</a>
<ul><li><a href="/wiki/Shortest_Path_Faster_Algorithm" class="mw-redirect" title="Shortest Path Faster Algorithm">SPFA</a></li></ul></li>
<li><a href="/wiki/Dijkstra%27s_algorithm" title="Dijkstra's algorithm">Dijkstra</a></li>
<li><a href="/wiki/Floyd%E2%80%93Warshall_algorithm" title="Floyd–Warshall algorithm">Floyd–Warshall</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Flow_network" title="Flow network">Network flows</a></th><td class="navbox-list-with-group navbox-list navbox-even" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Dinic%27s_algorithm" title="Dinic's algorithm">Dinic</a></li>
<li><a href="/wiki/Edmonds%E2%80%93Karp_algorithm" title="Edmonds–Karp algorithm">Edmonds–Karp</a></li>
<li><a href="/wiki/Ford%E2%80%93Fulkerson_algorithm" title="Ford–Fulkerson algorithm">Ford–Fulkerson</a></li>
<li><a class="mw-selflink selflink">Push–relabel maximum flow</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr></tbody></table><div></div></td></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em"></div><table class="nowraplinks mw-collapsible mw-collapsed navbox-subgroup" style="border-spacing:0"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div id="Metaheuristics381" style="font-size:114%;margin:0 4em"><a href="/wiki/Metaheuristic" title="Metaheuristic">Metaheuristics</a></div></th></tr><tr><td colspan="2" class="navbox-list navbox-odd" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Evolutionary_algorithm" title="Evolutionary algorithm">Evolutionary algorithm</a></li>
<li><a href="/wiki/Hill_climbing" title="Hill climbing">Hill climbing</a></li>
<li><a href="/wiki/Local_search_(optimization)" title="Local search (optimization)">Local search</a></li>
<li><a href="/wiki/Parallel_metaheuristic" title="Parallel metaheuristic">Parallel metaheuristics</a></li>
<li><a href="/wiki/Simulated_annealing" title="Simulated annealing">Simulated annealing</a></li>
<li><a href="/wiki/Spiral_optimization_algorithm" title="Spiral optimization algorithm">Spiral optimization algorithm</a></li>
<li><a href="/wiki/Tabu_search" title="Tabu search">Tabu search</a></li></ul>
</div></td></tr></tbody></table><div></div></td></tr><tr><td class="navbox-abovebelow" colspan="3"><div>
<ul><li><a href="/wiki/Comparison_of_optimization_software" title="Comparison of optimization software">Software</a></li></ul>
</div></td></tr></tbody></table></div>
<!-- 
NewPP limit report
Parsed by mw‐web.eqiad.main‐56d469f4c‐bqrs9
Cached time: 20250801082033
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.673 seconds
Real time usage: 0.831 seconds
Preprocessor visited node count: 9518/1000000
Revision size: 36404/2097152 bytes
Post‐expand include size: 129752/2097152 bytes
Template argument size: 16166/2097152 bytes
Highest expansion depth: 12/100
Expensive parser function count: 6/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 112504/5000000 bytes
Lua time usage: 0.339/10.000 seconds
Lua memory usage: 6252072/52428800 bytes
Number of Wikibase entities loaded: 0/500
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  620.261      1 -total
 31.23%  193.706      1 Template:Reflist
 20.30%  125.919    147 Template:Math
 19.03%  118.014      6 Template:Cite_book
 14.40%   89.298      1 Template:Optimization_algorithms
 13.74%   85.254      1 Template:Navbox_with_collapsible_groups
 10.97%   68.020      1 Template:Short_description
  8.19%   50.782      7 Template:Cite_journal
  7.33%   45.458      2 Template:Pagetype
  6.48%   40.202      1 Template:MOS
-->

<!-- Saved in parser cache with key enwiki:pcache:3444072:|#|:idhash:canonical and timestamp 20250801082033 and revision id 1303395268. Rendering was triggered because: page-view
 -->
</div><!--esi <esi:include src="/esitest-fa8a495983347898/content" /> --><noscript><img src="https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&amp;usesul3=1" alt="" width="1" height="1" style="border: none; position: absolute;"></noscript>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Push–relabel_maximum_flow_algorithm&amp;oldid=1303395268">https://en.wikipedia.org/w/index.php?title=Push–relabel_maximum_flow_algorithm&amp;oldid=1303395268</a>"</div></div>
					<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Network_flow_problem" title="Category:Network flow problem">Network flow problem</a></li><li><a href="/wiki/Category:Graph_algorithms" title="Category:Graph algorithms">Graph algorithms</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_with_short_description" title="Category:Articles with short description">Articles with short description</a></li><li><a href="/wiki/Category:Short_description_is_different_from_Wikidata" title="Category:Short description is different from Wikidata">Short description is different from Wikidata</a></li><li><a href="/wiki/Category:Wikipedia_articles_with_style_issues_from_July_2025" title="Category:Wikipedia articles with style issues from July 2025">Wikipedia articles with style issues from July 2025</a></li><li><a href="/wiki/Category:All_articles_with_style_issues" title="Category:All articles with style issues">All articles with style issues</a></li><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_December_2024" title="Category:Articles with unsourced statements from December 2024">Articles with unsourced statements from December 2024</a></li><li><a href="/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></li><li><a href="/wiki/Category:Articles_with_example_Python_(programming_language)_code" title="Category:Articles with example Python (programming language) code">Articles with example Python (programming language) code</a></li></ul></div></div>
				</div>
			</main>
			
		</div>
		<div class="mw-footer-container">
			
<footer id="footer" class="mw-footer" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 30 July 2025, at 19:05<span class="anonymous-show">&#160;(UTC)</span>.</li>
	<li id="footer-info-copyright">Text is available under the <a href="/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License" title="Wikipedia:Text of the Creative Commons Attribution-ShareAlike 4.0 International License">Creative Commons Attribution-ShareAlike 4.0 License</a>;
additional terms may apply. By using this site, you agree to the <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use" class="extiw" title="foundation:Special:MyLanguage/Policy:Terms of Use">Terms of Use</a> and <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy" class="extiw" title="foundation:Special:MyLanguage/Policy:Privacy policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a rel="nofollow" class="external text" href="https://wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="/wiki/Wikipedia:About">About Wikipedia</a></li>
	<li id="footer-places-disclaimers"><a href="/wiki/Wikipedia:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
	<li id="footer-places-wm-codeofconduct"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct">Code of Conduct</a></li>
	<li id="footer-places-developers"><a href="https://developer.wikimedia.org">Developers</a></li>
	<li id="footer-places-statslink"><a href="https://stats.wikimedia.org/#/en.wikipedia.org">Statistics</a></li>
	<li id="footer-places-cookiestatement"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement">Cookie statement</a></li>
	<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Push%E2%80%93relabel_maximum_flow_algorithm&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-copyrightico"><a href="https://www.wikimedia.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/static/images/footer/wikimedia-button.svg" width="84" height="29"><img src="/static/images/footer/wikimedia.svg" width="25" height="25" alt="Wikimedia Foundation" lang="en" loading="lazy"></picture></a></li>
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/w/resources/assets/poweredby_mediawiki.svg" width="88" height="31"><img src="/w/resources/assets/mediawiki_compact.svg" alt="Powered by MediaWiki" lang="en" width="25" height="25" loading="lazy"></picture></a></li>
</ul>

</footer>

		</div>
	</div> 
</div> 
<div class="vector-header-container vector-sticky-header-container no-font-mode-scale">
	<div id="vector-sticky-header" class="vector-sticky-header">
		<div class="vector-sticky-header-start">
			<div class="vector-sticky-header-icon-start vector-button-flush-left vector-button-flush-right" aria-hidden="true">
				<button class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-sticky-header-search-toggle" tabindex="-1" data-event-name="ui.vector-sticky-search-form.icon"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
			</button>
		</div>
			
		<div role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box">
			<div class="vector-typeahead-search-container">
				<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail">
					<form action="/w/index.php" id="vector-sticky-search-form" class="cdx-search-input cdx-search-input--has-end-button">
						<div  class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
							<div class="cdx-text-input cdx-text-input--has-start-icon">
								<input
									class="cdx-text-input__input mw-searchInput" autocomplete="off"
									
									type="search" name="search" placeholder="Search Wikipedia">
								<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
							</div>
							<input type="hidden" name="title" value="Special:Search">
						</div>
						<button class="cdx-button cdx-search-input__end-button">Search</button>
					</form>
				</div>
			</div>
		</div>
		<div class="vector-sticky-header-context-bar">
				<nav aria-label="Contents" class="vector-toc-landmark">
						
					<div id="vector-sticky-header-toc" class="vector-dropdown mw-portlet mw-portlet-sticky-header-toc vector-sticky-header-toc vector-button-flush-left"  >
						<input type="checkbox" id="vector-sticky-header-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-sticky-header-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
						<label id="vector-sticky-header-toc-label" for="vector-sticky-header-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
						</label>
						<div class="vector-dropdown-content">
					
						<div id="vector-sticky-header-toc-unpinned-container" class="vector-unpinned-container">
						</div>
					
						</div>
					</div>
			</nav>
				<div class="vector-sticky-header-context-bar-primary" aria-hidden="true" ><span class="mw-page-title-main">Push–relabel maximum flow algorithm</span></div>
			</div>
		</div>
		<div class="vector-sticky-header-end" aria-hidden="true">
			<div class="vector-sticky-header-icons">
				<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-talk-sticky-header" tabindex="-1" data-event-name="talk-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbles mw-ui-icon-wikimedia-speechBubbles"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-subject-sticky-header" tabindex="-1" data-event-name="subject-sticky-header"><span class="vector-icon mw-ui-icon-article mw-ui-icon-wikimedia-article"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-history-sticky-header" tabindex="-1" data-event-name="history-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-history mw-ui-icon-wikimedia-wikimedia-history"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only mw-watchlink" id="ca-watchstar-sticky-header" tabindex="-1" data-event-name="watch-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-star mw-ui-icon-wikimedia-wikimedia-star"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-edit-sticky-header" tabindex="-1" data-event-name="wikitext-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-wikiText mw-ui-icon-wikimedia-wikimedia-wikiText"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-ve-edit-sticky-header" tabindex="-1" data-event-name="ve-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-edit mw-ui-icon-wikimedia-wikimedia-edit"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-viewsource-sticky-header" tabindex="-1" data-event-name="ve-edit-protected-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-editLock mw-ui-icon-wikimedia-wikimedia-editLock"></span>

<span></span>
			</a>
		</div>
			<div class="vector-sticky-header-buttons">
				<button class="cdx-button cdx-button--weight-quiet mw-interlanguage-selector" id="p-lang-btn-sticky-header" tabindex="-1" data-event-name="ui.dropdown-p-lang-btn-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-language mw-ui-icon-wikimedia-wikimedia-language"></span>

<span>9 languages</span>
			</button>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive" id="ca-addsection-sticky-header" tabindex="-1" data-event-name="addsection-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbleAdd-progressive mw-ui-icon-wikimedia-speechBubbleAdd-progressive"></span>

<span>Add topic</span>
			</a>
		</div>
			<div class="vector-sticky-header-icon-end">
				<div class="vector-user-links">
				</div>
			</div>
		</div>
	</div>
</div>
<div class="mw-portlet mw-portlet-dock-bottom emptyPortlet" id="p-dock-bottom">
	<ul>
		
	</ul>
</div>
<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgHostname":"mw-web.eqiad.main-6d87f659bb-tw27s","wgBackendResponseTime":290,"wgPageParseReport":{"limitreport":{"cputime":"0.673","walltime":"0.831","ppvisitednodes":{"value":9518,"limit":1000000},"revisionsize":{"value":36404,"limit":2097152},"postexpandincludesize":{"value":129752,"limit":2097152},"templateargumentsize":{"value":16166,"limit":2097152},"expansiondepth":{"value":12,"limit":100},"expensivefunctioncount":{"value":6,"limit":500},"unstrip-depth":{"value":1,"limit":20},"unstrip-size":{"value":112504,"limit":5000000},"entityaccesscount":{"value":0,"limit":500},"timingprofile":["100.00%  620.261      1 -total"," 31.23%  193.706      1 Template:Reflist"," 20.30%  125.919    147 Template:Math"," 19.03%  118.014      6 Template:Cite_book"," 14.40%   89.298      1 Template:Optimization_algorithms"," 13.74%   85.254      1 Template:Navbox_with_collapsible_groups"," 10.97%   68.020      1 Template:Short_description","  8.19%   50.782      7 Template:Cite_journal","  7.33%   45.458      2 Template:Pagetype","  6.48%   40.202      1 Template:MOS"]},"scribunto":{"limitreport-timeusage":{"value":"0.339","limit":"10.000"},"limitreport-memusage":{"value":6252072,"limit":52428800}},"cachereport":{"origin":"mw-web.eqiad.main-56d469f4c-bqrs9","timestamp":"20250801082033","ttl":2592000,"transientcontent":false}}});});</script>
<script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"Article","name":"Push\u2013relabel maximum flow algorithm","url":"https:\/\/en.wikipedia.org\/wiki\/Push%E2%80%93relabel_maximum_flow_algorithm","sameAs":"http:\/\/www.wikidata.org\/entity\/Q583889","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q583889","author":{"@type":"Organization","name":"Contributors to Wikimedia projects"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2005-12-16T20:08:52Z","dateModified":"2025-07-30T19:05:42Z","headline":"algorithm"}</script>
</body>
</html>