<!DOCTYPE html>
<html class="client-nojs vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available" lang="en" dir="ltr">
<head>
<meta charset="UTF-8">
<title>Recursive ascent parser - Wikipedia</title>
<script>(function(){var className="client-js vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-sticky-header-enabled vector-toc-available";var cookie=document.cookie.match(/(?:^|; )enwikimwclientpreferences=([^;]+)/);if(cookie){cookie[1].split('%2C').forEach(function(pref){className=className.replace(new RegExp('(^| )'+pref.replace(/-clientpref-\w+$|[^\w-]+/g,'')+'-clientpref-\\w+( |$)'),'$1'+pref+'$2');});}document.documentElement.className=className;}());RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"33a6cf0a-60ef-42d8-ba81-a5c5cab16773","wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Recursive_ascent_parser","wgTitle":"Recursive ascent parser","wgCurRevisionId":1264674624,"wgRevisionId":1264674624,"wgArticleId":18344532,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["CS1 maint: multiple names: authors list","Parsing algorithms"],"wgPageViewLanguage":"en","wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Recursive_ascent_parser","wgRelevantArticleId":18344532,"wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgNoticeProject":"wikipedia","wgCiteReferencePreviewsActive":false,"wgFlaggedRevsParams":{"tags":{"status":{"levels":1}}},"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgPopupsFlags":0,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgMFDisplayWikibaseDescriptions":{"search":true,"watchlist":true,"tagline":false,"nearby":true},"wgWMESchemaEditAttemptStepOversample":false,"wgWMEPageLength":10000,"wgMetricsPlatformUserExperiments":{"active_experiments":[],"overrides":[],"enrolled":[],"assigned":[],"subject_ids":[],"sampling_units":[]},"wgEditSubmitButtonLabelPublish":true,"wgULSPosition":"interlanguage","wgULSisCompactLinksEnabled":false,"wgVector2022LanguageInHeader":true,"wgULSisLanguageSelectorEmpty":false,"wgWikibaseItemId":"Q7303337","wgCheckUserClientHintsHeadersJsApi":["brands","architecture","bitness","fullVersionList","mobile","model","platform","platformVersion"],"GEHomepageSuggestedEditsEnableTopics":true,"wgGESuggestedEditsTaskTypes":{"taskTypes":["copyedit","link-recommendation"],"unavailableTaskTypes":[]},"wgGETopicsMatchModeEnabled":false,"wgGELevelingUpEnabledForUser":false};
RLSTATE={"ext.globalCssJs.user.styles":"ready","site.styles":"ready","user.styles":"ready","ext.globalCssJs.user":"ready","user":"ready","user.options":"loading","ext.cite.styles":"ready","ext.pygments":"ready","skins.vector.search.codex.styles":"ready","skins.vector.styles":"ready","skins.vector.icons":"ready","jquery.makeCollapsible.styles":"ready","ext.wikimediamessages.styles":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","wikibase.client.init":"ready"};RLPAGEMODULES=["ext.xLab","ext.cite.ux-enhancements","ext.pygments.view","site","mediawiki.page.ready","jquery.makeCollapsible","mediawiki.toc","skins.vector.js","ext.centralNotice.geoIP","ext.centralNotice.startUp","ext.gadget.ReferenceTooltips","ext.gadget.switcher","ext.urlShortener.toolbar","ext.centralauth.centralautologin","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.echo.centralauth","ext.eventLogging","ext.wikimediaEvents","ext.navigationTiming","ext.uls.interface","ext.cx.eventlogging.campaigns","ext.cx.uls.quick.actions","wikibase.client.vector-2022","ext.checkUser.clientHints","ext.quicksurveys.init","ext.growthExperiments.SuggestedEditSession"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.impl(function(){return["user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
}];});});</script>
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=ext.cite.styles%7Cext.pygments%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediamessages.styles%7Cjquery.makeCollapsible.styles%7Cskins.vector.icons%2Cstyles%7Cskins.vector.search.codex.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector-2022">
<script async="" src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector-2022"></script>
<meta name="ResourceLoaderDynamicStyles" content="">
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector-2022">
<meta name="generator" content="MediaWiki 1.45.0-wmf.12">
<meta name="referrer" content="origin">
<meta name="referrer" content="origin-when-cross-origin">
<meta name="robots" content="max-image-preview:standard">
<meta name="format-detection" content="telephone=no">
<meta name="viewport" content="width=1120">
<meta property="og:title" content="Recursive ascent parser - Wikipedia">
<meta property="og:type" content="website">
<link rel="alternate" media="only screen and (max-width: 640px)" href="//en.m.wikipedia.org/wiki/Recursive_ascent_parser">
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit">
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png">
<link rel="icon" href="/static/favicon/wikipedia.ico">
<link rel="search" type="application/opensearchdescription+xml" href="/w/rest.php/v1/search" title="Wikipedia (en)">
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd">
<link rel="canonical" href="https://en.wikipedia.org/wiki/Recursive_ascent_parser">
<link rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/deed.en">
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<link rel="dns-prefetch" href="auth.wikimedia.org">
</head>
<body class="skin--responsive skin-vector skin-vector-search-vue mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-Recursive_ascent_parser rootpage-Recursive_ascent_parser skin-vector-2022 action-view"><a class="mw-jump-link" href="#bodyContent">Jump to content</a>
<div class="vector-header-container">
	<header class="vector-header mw-header no-font-mode-scale">
		<div class="vector-header-start">
			<nav class="vector-main-menu-landmark" aria-label="Site">
				
<div id="vector-main-menu-dropdown" class="vector-dropdown vector-main-menu-dropdown vector-button-flush-left vector-button-flush-right"  title="Main menu" >
	<input type="checkbox" id="vector-main-menu-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-main-menu-dropdown" class="vector-dropdown-checkbox "  aria-label="Main menu"  >
	<label id="vector-main-menu-dropdown-label" for="vector-main-menu-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-menu mw-ui-icon-wikimedia-menu"></span>

<span class="vector-dropdown-label-text">Main menu</span>
	</label>
	<div class="vector-dropdown-content">


				<div id="vector-main-menu-unpinned-container" class="vector-unpinned-container">
		
<div id="vector-main-menu" class="vector-main-menu vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-main-menu-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="main-menu-pinned"
	data-pinnable-element-id="vector-main-menu"
	data-pinned-container-id="vector-main-menu-pinned-container"
	data-unpinned-container-id="vector-main-menu-unpinned-container"
>
	<div class="vector-pinnable-header-label">Main menu</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-main-menu.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-main-menu.unpin">hide</button>
</div>

	
<div id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation"  >
	<div class="vector-menu-heading">
		Navigation
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-mainpage-description" class="mw-list-item"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"><span>Main page</span></a></li><li id="n-contents" class="mw-list-item"><a href="/wiki/Wikipedia:Contents" title="Guides to browsing Wikipedia"><span>Contents</span></a></li><li id="n-currentevents" class="mw-list-item"><a href="/wiki/Portal:Current_events" title="Articles related to current events"><span>Current events</span></a></li><li id="n-randompage" class="mw-list-item"><a href="/wiki/Special:Random" title="Visit a randomly selected article [x]" accesskey="x"><span>Random article</span></a></li><li id="n-aboutsite" class="mw-list-item"><a href="/wiki/Wikipedia:About" title="Learn about Wikipedia and how it works"><span>About Wikipedia</span></a></li><li id="n-contactpage" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia"><span>Contact us</span></a></li>
		</ul>
		
	</div>
</div>

	
	
<div id="p-interaction" class="vector-menu mw-portlet mw-portlet-interaction"  >
	<div class="vector-menu-heading">
		Contribute
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="n-help" class="mw-list-item"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia"><span>Help</span></a></li><li id="n-introduction" class="mw-list-item"><a href="/wiki/Help:Introduction" title="Learn how to edit Wikipedia"><span>Learn to edit</span></a></li><li id="n-portal" class="mw-list-item"><a href="/wiki/Wikipedia:Community_portal" title="The hub for editors"><span>Community portal</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="/wiki/Special:RecentChanges" title="A list of recent changes to Wikipedia [r]" accesskey="r"><span>Recent changes</span></a></li><li id="n-upload" class="mw-list-item"><a href="/wiki/Wikipedia:File_upload_wizard" title="Add images or other media for use on Wikipedia"><span>Upload file</span></a></li><li id="n-specialpages" class="mw-list-item"><a href="/wiki/Special:SpecialPages"><span>Special pages</span></a></li>
		</ul>
		
	</div>
</div>

</div>

				</div>

	</div>
</div>

		</nav>
			
<a href="/wiki/Main_Page" class="mw-logo">
	<img class="mw-logo-icon" src="/static/images/icons/wikipedia.png" alt="" aria-hidden="true" height="50" width="50">
	<span class="mw-logo-container skin-invert">
		<img class="mw-logo-wordmark" alt="Wikipedia" src="/static/images/mobile/copyright/wikipedia-wordmark-en.svg" style="width: 7.5em; height: 1.125em;">
		<img class="mw-logo-tagline" alt="The Free Encyclopedia" src="/static/images/mobile/copyright/wikipedia-tagline-en.svg" width="117" height="13" style="width: 7.3125em; height: 0.8125em;">
	</span>
</a>

		</div>
		<div class="vector-header-end">
			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-collapses vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<a href="/wiki/Special:Search" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only search-toggle" title="Search Wikipedia [f]" accesskey="f"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
	</a>
	<div class="vector-typeahead-search-container">
		<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail cdx-typeahead-search--auto-expand-width">
			<form action="/w/index.php" id="searchform" class="cdx-search-input cdx-search-input--has-end-button">
				<div id="simpleSearch" class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
					<div class="cdx-text-input cdx-text-input--has-start-icon">
						<input
							class="cdx-text-input__input mw-searchInput" autocomplete="off"
							 type="search" name="search" placeholder="Search Wikipedia" aria-label="Search Wikipedia" autocapitalize="sentences" spellcheck="false" title="Search Wikipedia [f]" accesskey="f" id="searchInput"
							>
						<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
					</div>
					<input type="hidden" name="title" value="Special:Search">
				</div>
				<button class="cdx-button cdx-search-input__end-button">Search</button>
			</form>
		</div>
	</div>
</div>

			<nav class="vector-user-links vector-user-links-wide" aria-label="Personal tools">
	<div class="vector-user-links-main">
	
<div id="p-vector-user-menu-preferences" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-userpage" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	<nav class="vector-appearance-landmark" aria-label="Appearance">
		
<div id="vector-appearance-dropdown" class="vector-dropdown "  title="Change the appearance of the page&#039;s font size, width, and color" >
	<input type="checkbox" id="vector-appearance-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-appearance-dropdown" class="vector-dropdown-checkbox "  aria-label="Appearance"  >
	<label id="vector-appearance-dropdown-label" for="vector-appearance-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-appearance mw-ui-icon-wikimedia-appearance"></span>

<span class="vector-dropdown-label-text">Appearance</span>
	</label>
	<div class="vector-dropdown-content">


			<div id="vector-appearance-unpinned-container" class="vector-unpinned-container">
				
			</div>
		
	</div>
</div>

	</nav>
	
<div id="p-vector-user-menu-notifications" class="vector-menu mw-portlet emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

	
<div id="p-vector-user-menu-overflow" class="vector-menu mw-portlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			<li id="pt-sitesupport-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en" class=""><span>Donate</span></a>
</li>
<li id="pt-createaccount-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:CreateAccount&amp;returnto=Recursive+ascent+parser" title="You are encouraged to create an account and log in; however, it is not mandatory" class=""><span>Create account</span></a>
</li>
<li id="pt-login-2" class="user-links-collapsible-item mw-list-item user-links-collapsible-item"><a data-mw="interface" href="/w/index.php?title=Special:UserLogin&amp;returnto=Recursive+ascent+parser" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o" class=""><span>Log in</span></a>
</li>

			
		</ul>
		
	</div>
</div>

	</div>
	
<div id="vector-user-links-dropdown" class="vector-dropdown vector-user-menu vector-button-flush-right vector-user-menu-logged-out"  title="Log in and more options" >
	<input type="checkbox" id="vector-user-links-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-user-links-dropdown" class="vector-dropdown-checkbox "  aria-label="Personal tools"  >
	<label id="vector-user-links-dropdown-label" for="vector-user-links-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-ellipsis mw-ui-icon-wikimedia-ellipsis"></span>

<span class="vector-dropdown-label-text">Personal tools</span>
	</label>
	<div class="vector-dropdown-content">


		
<div id="p-personal" class="vector-menu mw-portlet mw-portlet-personal user-links-collapsible-item"  title="User menu" >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-sitesupport" class="user-links-collapsible-item mw-list-item"><a href="https://donate.wikimedia.org/?wmf_source=donate&amp;wmf_medium=sidebar&amp;wmf_campaign=en.wikipedia.org&amp;uselang=en"><span>Donate</span></a></li><li id="pt-createaccount" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Recursive+ascent+parser" title="You are encouraged to create an account and log in; however, it is not mandatory"><span class="vector-icon mw-ui-icon-userAdd mw-ui-icon-wikimedia-userAdd"></span> <span>Create account</span></a></li><li id="pt-login" class="user-links-collapsible-item mw-list-item"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Recursive+ascent+parser" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o"><span class="vector-icon mw-ui-icon-logIn mw-ui-icon-wikimedia-logIn"></span> <span>Log in</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-user-menu-anon-editor" class="vector-menu mw-portlet mw-portlet-user-menu-anon-editor"  >
	<div class="vector-menu-heading">
		Pages for logged out editors <a href="/wiki/Help:Introduction" aria-label="Learn more about editing"><span>learn more</span></a>
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="pt-anoncontribs" class="mw-list-item"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y"><span>Contributions</span></a></li><li id="pt-anontalk" class="mw-list-item"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

	
	</div>
</div>

</nav>

		</div>
	</header>
</div>
<div class="mw-page-container">
	<div class="mw-page-container-inner">
		<div class="vector-sitenotice-container">
			<div id="siteNotice"><!-- CentralNotice --></div>
		</div>
		<div class="vector-column-start">
			<div class="vector-main-menu-container">
		<div id="mw-navigation">
			<nav id="mw-panel" class="vector-main-menu-landmark" aria-label="Site">
				<div id="vector-main-menu-pinned-container" class="vector-pinned-container">
				
				</div>
		</nav>
		</div>
	</div>
	<div class="vector-sticky-pinned-container">
				<nav id="mw-panel-toc" aria-label="Contents" data-event-name="ui.sidebar-toc" class="mw-table-of-contents-container vector-toc-landmark">
					<div id="vector-toc-pinned-container" class="vector-pinned-container">
					<div id="vector-toc" class="vector-toc vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-toc-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="toc-pinned"
	data-pinnable-element-id="vector-toc"
	
	
>
	<h2 class="vector-pinnable-header-label">Contents</h2>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-toc.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-toc.unpin">hide</button>
</div>


	<ul class="vector-toc-contents" id="mw-panel-toc-list">
		<li id="toc-mw-content-text"
			class="vector-toc-list-item vector-toc-level-1">
			<a href="#" class="vector-toc-link">
				<div class="vector-toc-text">(Top)</div>
			</a>
		</li>
		<li id="toc-Summary"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#Summary">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">1</span>
				<span>Summary</span>
			</div>
		</a>
		
		<ul id="toc-Summary-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-Example"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#Example">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">2</span>
				<span>Example</span>
			</div>
		</a>
		
		<ul id="toc-Example-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-See_also"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#See_also">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">3</span>
				<span>See also</span>
			</div>
		</a>
		
		<ul id="toc-See_also-sublist" class="vector-toc-list">
		</ul>
	</li>
	<li id="toc-References"
		class="vector-toc-list-item vector-toc-level-1 vector-toc-list-item-expanded">
		<a class="vector-toc-link" href="#References">
			<div class="vector-toc-text">
				<span class="vector-toc-numb">4</span>
				<span>References</span>
			</div>
		</a>
		
		<ul id="toc-References-sublist" class="vector-toc-list">
		</ul>
	</li>
</ul>
</div>

					</div>
		</nav>
			</div>
		</div>
		<div class="mw-content-container">
			<main id="content" class="mw-body">
				<header class="mw-body-header vector-page-titlebar no-font-mode-scale">
					<nav aria-label="Contents" class="vector-toc-landmark">
						
<div id="vector-page-titlebar-toc" class="vector-dropdown vector-page-titlebar-toc vector-button-flush-left"  title="Table of Contents" >
	<input type="checkbox" id="vector-page-titlebar-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-titlebar-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
	<label id="vector-page-titlebar-toc-label" for="vector-page-titlebar-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
	</label>
	<div class="vector-dropdown-content">


							<div id="vector-page-titlebar-toc-unpinned-container" class="vector-unpinned-container">
			</div>
		
	</div>
</div>

					</nav>
					<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Recursive ascent parser</span></h1>
							
<div id="p-lang-btn" class="vector-dropdown mw-portlet mw-portlet-lang"  >
	<input type="checkbox" id="p-lang-btn-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-p-lang-btn" class="vector-dropdown-checkbox mw-interlanguage-selector" aria-label="This article is only available in this language. Add the article for other languages"   >
	<label id="p-lang-btn-label" for="p-lang-btn-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive mw-portlet-lang-heading-0" aria-hidden="true"  ><span class="vector-icon mw-ui-icon-language-progressive mw-ui-icon-wikimedia-language-progressive"></span>

<span class="vector-dropdown-label-text">Add languages</span>
	</label>
	<div class="vector-dropdown-content">

		<div class="vector-menu-content">
			
			<ul class="vector-menu-content-list">
				
				
			</ul>
			<div class="after-portlet after-portlet-lang"><span class="uls-after-portlet-link"></span><span class="wb-langlinks-add wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q7303337#sitelinks-wikipedia" title="Add interlanguage links" class="wbc-editpage">Add links</a></span></div>
		</div>

	</div>
</div>
</header>
				<div class="vector-page-toolbar vector-feature-custom-font-size-clientpref--excluded">
					<div class="vector-page-toolbar-container">
						<div id="left-navigation">
							<nav aria-label="Namespaces">
								
<div id="p-associated-pages" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-associated-pages"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-nstab-main" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/Recursive_ascent_parser" title="View the content page [c]" accesskey="c"><span>Article</span></a></li><li id="ca-talk" class="vector-tab-noicon mw-list-item"><a href="/wiki/Talk:Recursive_ascent_parser" rel="discussion" title="Discuss improvements to the content page [t]" accesskey="t"><span>Talk</span></a></li>
		</ul>
		
	</div>
</div>

								
<div id="vector-variants-dropdown" class="vector-dropdown emptyPortlet"  >
	<input type="checkbox" id="vector-variants-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-variants-dropdown" class="vector-dropdown-checkbox " aria-label="Change language variant"   >
	<label id="vector-variants-dropdown-label" for="vector-variants-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">English</span>
	</label>
	<div class="vector-dropdown-content">


					
<div id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			
		</ul>
		
	</div>
</div>

				
	</div>
</div>

							</nav>
						</div>
						<div id="right-navigation" class="vector-collapsible">
							<nav aria-label="Views">
								
<div id="p-views" class="vector-menu vector-menu-tabs mw-portlet mw-portlet-views"  >
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-view" class="selected vector-tab-noicon mw-list-item"><a href="/wiki/Recursive_ascent_parser"><span>Read</span></a></li><li id="ca-edit" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-history" class="vector-tab-noicon mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

							</nav>
				
							<nav class="vector-page-tools-landmark" aria-label="Page tools">
								
<div id="vector-page-tools-dropdown" class="vector-dropdown vector-page-tools-dropdown"  >
	<input type="checkbox" id="vector-page-tools-dropdown-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-page-tools-dropdown" class="vector-dropdown-checkbox "  aria-label="Tools"  >
	<label id="vector-page-tools-dropdown-label" for="vector-page-tools-dropdown-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet" aria-hidden="true"  ><span class="vector-dropdown-label-text">Tools</span>
	</label>
	<div class="vector-dropdown-content">


									<div id="vector-page-tools-unpinned-container" class="vector-unpinned-container">
						
<div id="vector-page-tools" class="vector-page-tools vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-page-tools-pinnable-header vector-pinnable-header-unpinned"
	data-feature-name="page-tools-pinned"
	data-pinnable-element-id="vector-page-tools"
	data-pinned-container-id="vector-page-tools-pinned-container"
	data-unpinned-container-id="vector-page-tools-unpinned-container"
>
	<div class="vector-pinnable-header-label">Tools</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-page-tools.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-page-tools.unpin">hide</button>
</div>

	
<div id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-has-collapsible-items"  title="More options" >
	<div class="vector-menu-heading">
		Actions
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="ca-more-view" class="selected vector-more-collapsible-item mw-list-item"><a href="/wiki/Recursive_ascent_parser"><span>Read</span></a></li><li id="ca-more-edit" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit" title="Edit this page [e]" accesskey="e"><span>Edit</span></a></li><li id="ca-more-history" class="vector-more-collapsible-item mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=history"><span>View history</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-tb" class="vector-menu mw-portlet mw-portlet-tb"  >
	<div class="vector-menu-heading">
		General
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-whatlinkshere" class="mw-list-item"><a href="/wiki/Special:WhatLinksHere/Recursive_ascent_parser" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/wiki/Special:RecentChangesLinked/Recursive_ascent_parser" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-upload" class="mw-list-item"><a href="//en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u"><span>Upload file</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;oldid=1264674624" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=info" title="More information about this page"><span>Page information</span></a></li><li id="t-cite" class="mw-list-item"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Recursive_ascent_parser&amp;id=1264674624&amp;wpFormIdentifier=titleform" title="Information on how to cite this page"><span>Cite this page</span></a></li><li id="t-urlshortener" class="mw-list-item"><a href="/w/index.php?title=Special:UrlShortener&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FRecursive_ascent_parser"><span>Get shortened URL</span></a></li><li id="t-urlshortener-qrcode" class="mw-list-item"><a href="/w/index.php?title=Special:QrCode&amp;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FRecursive_ascent_parser"><span>Download QR code</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-coll-print_export" class="vector-menu mw-portlet mw-portlet-coll-print_export"  >
	<div class="vector-menu-heading">
		Print/export
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="coll-download-as-rl" class="mw-list-item"><a href="/w/index.php?title=Special:DownloadAsPdf&amp;page=Recursive_ascent_parser&amp;action=show-download-screen" title="Download this page as a PDF file"><span>Download as PDF</span></a></li><li id="t-print" class="mw-list-item"><a href="/w/index.php?title=Recursive_ascent_parser&amp;printable=yes" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li>
		</ul>
		
	</div>
</div>

<div id="p-wikibase-otherprojects" class="vector-menu mw-portlet mw-portlet-wikibase-otherprojects"  >
	<div class="vector-menu-heading">
		In other projects
	</div>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list">
			
			<li id="t-wikibase" class="wb-otherproject-link wb-otherproject-wikibase-dataitem mw-list-item"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q7303337" title="Structured data on this page hosted by Wikidata [g]" accesskey="g"><span>Wikidata item</span></a></li>
		</ul>
		
	</div>
</div>

</div>

									</div>
				
	</div>
</div>

							</nav>
						</div>
					</div>
				</div>
				<div class="vector-column-end no-font-mode-scale">
					<div class="vector-sticky-pinned-container">
						<nav class="vector-page-tools-landmark" aria-label="Page tools">
							<div id="vector-page-tools-pinned-container" class="vector-pinned-container">
				
							</div>
		</nav>
						<nav class="vector-appearance-landmark" aria-label="Appearance">
							<div id="vector-appearance-pinned-container" class="vector-pinned-container">
				<div id="vector-appearance" class="vector-appearance vector-pinnable-element">
	<div
	class="vector-pinnable-header vector-appearance-pinnable-header vector-pinnable-header-pinned"
	data-feature-name="appearance-pinned"
	data-pinnable-element-id="vector-appearance"
	data-pinned-container-id="vector-appearance-pinned-container"
	data-unpinned-container-id="vector-appearance-unpinned-container"
>
	<div class="vector-pinnable-header-label">Appearance</div>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-pin-button" data-event-name="pinnable-header.vector-appearance.pin">move to sidebar</button>
	<button class="vector-pinnable-header-toggle-button vector-pinnable-header-unpin-button" data-event-name="pinnable-header.vector-appearance.unpin">hide</button>
</div>


</div>

							</div>
		</nav>
					</div>
				</div>
				<div id="bodyContent" class="vector-body" aria-labelledby="firstHeading" data-mw-ve-target-container>
					<div class="vector-body-before-content">
							<div class="mw-indicators">
		</div>

						<div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>
					</div>
					<div id="contentSub"><div id="mw-content-subtitle"></div></div>
					
					
					<div id="mw-content-text" class="mw-body-content"><div class="mw-content-ltr mw-parser-output" lang="en" dir="ltr"><p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>recursive ascent parsing</b> is a technique for implementing an <a href="/wiki/LR_parser" title="LR parser">LR parser</a> which uses mutually-recursive functions rather than tables.  Thus, the parser is <i>directly encoded</i> in the host language similar to <a href="/wiki/Recursive_descent" class="mw-redirect" title="Recursive descent">recursive descent</a>.  Direct encoding usually yields a parser which is faster than its table-driven equivalent<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span class="cite-bracket">[</span>1<span class="cite-bracket">]</span></a></sup> for the same reason that compilation is faster than interpretation.  It is also (nominally) possible to hand edit a recursive ascent parser, whereas a tabular implementation is nigh unreadable to the average human.
</p><p>Recursive ascent was first described by Thomas Pennello in his article <style data-mw-deduplicate="TemplateStyles:r1238218222">.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain;padding:0 1em 0 0}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:var(--color-error,#d33)}.mw-parser-output .cs1-visible-error{color:var(--color-error,#d33)}.mw-parser-output .cs1-maint{display:none;color:#085;margin-left:0.3em}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}@media screen{.mw-parser-output .cs1-format{font-size:95%}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911f}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911f}}</style><cite id="CITEREFPennello1986" class="citation book cs1">Pennello, Thomas J. (1986). <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=13310.13326">"Very fast LR parsing"</a>. <i>Proceedings of the 1986 SIGPLAN symposium on Compiler construction - SIGPLAN '86</i>. pp.&nbsp;<span class="nowrap">145–</span>151. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F12276.13326">10.1145/12276.13326</a>. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/0897911970" title="Special:BookSources/0897911970"><bdi>0897911970</bdi></a>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:17214407">17214407</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.atitle=Very+fast+LR+parsing&amp;rft.btitle=Proceedings+of+the+1986+SIGPLAN+symposium+on+Compiler+construction+-+SIGPLAN+%2786&amp;rft.pages=145-151&amp;rft.date=1986&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A17214407%23id-name%3DS2CID&amp;rft_id=info%3Adoi%2F10.1145%2F12276.13326&amp;rft.isbn=0897911970&amp;rft.aulast=Pennello&amp;rft.aufirst=Thomas+J.&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D13310.13326&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span> in 1986.  He was not intending to create a hand-editable implementation of an LR parser, but rather a maintainable and efficient parser implemented in <a href="/wiki/Assembly_language" title="Assembly language">assembly language</a>.  The technique was later expounded upon by G.H. Roberts<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span class="cite-bracket">[</span>2<span class="cite-bracket">]</span></a></sup> in 1988 as well as in an article by Leermakers, Augusteijn, Kruseman Aretz<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span class="cite-bracket">[</span>3<span class="cite-bracket">]</span></a></sup> in 1992 in the journal <i>Theoretical Computer Science</i>.  An extremely readable description of the technique was written by Morell and Middleton<sup id="cite_ref-4" class="reference"><a href="#cite_note-4"><span class="cite-bracket">[</span>4<span class="cite-bracket">]</span></a></sup> in 2003. A good exposition can also be found in a TOPLAS article by Sperber and Thiemann.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span class="cite-bracket">[</span>5<span class="cite-bracket">]</span></a></sup>
</p><p>Recursive ascent has also been merged with recursive descent, yielding a technique known as <a href="/w/index.php?title=Recursive_ascent/descent&amp;action=edit&amp;redlink=1" class="new" title="Recursive ascent/descent (page does not exist)">recursive ascent/descent</a>.  This implementation technique is arguably easier to hand-edit due to the reduction in states and fact that some of these states are more intuitively top-down rather than bottom up.  It can also yield some minimal performance improvements over conventional recursive ascent.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span class="cite-bracket">[</span>6<span class="cite-bracket">]</span></a></sup>
</p>
<meta property="mw:PageProp/toc">
<div class="mw-heading mw-heading2"><h2 id="Summary">Summary</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit&amp;section=1" title="Edit section: Summary"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Intuitively, recursive ascent is a literal implementation of the <a href="/wiki/LR_parser" title="LR parser">LR parsing</a> concept.  Each function in the parser represents a single LR <a href="/wiki/Finite-state_machine" title="Finite-state machine">automaton state</a>.  Within each function, a multi-branch statement is used to select the appropriate action based on the current token read from the input stream.  Once the token has been identified, action is taken based on the state being encoded.  There are two different fundamental actions which may be taken based on the token in question:
</p>
<ul><li><b>Shift</b> - Encoded as a function call, effectively jumping to a new automaton state.</li>
<li><b>Reduce</b> - Encoded differently according to the <a href="/wiki/Semantic_action_routine" class="mw-redirect" title="Semantic action routine">semantic action routine</a> for the relevant <a href="/wiki/Formal_grammar#The_syntax_of_grammars" title="Formal grammar">production</a>.  The result of this routine is wrapped in an <a href="/wiki/Algebraic_data_type" title="Algebraic data type">ADT</a> which is returned to the caller.  The reduce action must also record the number of tokens which were shifted <i>prior</i> to the reduce, passing this value back to the caller along with the reduce value.  This shift counter determines at which point up the call stack the reduce should be handled.</li></ul>
<p>There is also a third LR automaton action which may be taken in a given state, but only after a reduce where the shift counter has decremented to zero (indicating that the current state should handle the result).  This is the <b>goto</b> action, which is essentially a special case of <b>shift</b> designed to handle non-terminals in a production.  This action must be handled <i>after</i> the multi-branch statement, since this is where any reduction results will "resurface" from farther down the call stack.
</p>
<div class="mw-heading mw-heading2"><h2 id="Example">Example</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit&amp;section=2" title="Edit section: Example"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<p>Consider the following grammar in <a href="/wiki/GNU_Bison" title="GNU Bison">bison</a> syntax:
</p>
<pre>expr&nbsp;: expr '+' term   { $$ = $1 + $3; }
     | expr '-' term   { $$ = $1 - $3; }
     | term            { $$ = $1; }
    &nbsp;;

term&nbsp;: '(' expr ')'    { $$ = $2; }
     | num             { $$ = $1; }
    &nbsp;;

num&nbsp;: '0'              { $$ = 0; }
    | '1'              { $$ = 1; }
   &nbsp;;</pre>
<p>This grammar is <a href="/wiki/LR_parser" title="LR parser">LR(0)</a> in that it is left-recursive (in the <b>expr</b> non-terminal) but does not require any lookahead.  Recursive ascent is also capable of handling grammars which are LALR(1) in much the same way that table-driven parsers handle such cases (by pre-computing conflict resolutions based on possible lookahead).
</p><p>The following is a <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a> implementation of a recursive ascent parser based on the above grammar:
</p>
<div class="mw-highlight mw-highlight-lang-scala mw-content-ltr" dir="ltr"><pre><span></span><span class="k">object</span><span class="w"> </span><span class="nc">ExprParser</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">type</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NonTerminal</span><span class="p">,</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">sealed</span><span class="w"> </span><span class="k">trait</span><span class="w"> </span><span class="nc">NonTerminal</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kd">val</span><span class="w"> </span><span class="n">v</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="k">class</span><span class="w"> </span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="k">extends</span><span class="w"> </span><span class="nc">NonTerminal</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="k">class</span><span class="w"> </span><span class="nc">NTterm</span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="k">extends</span><span class="w"> </span><span class="nc">NonTerminal</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="k">class</span><span class="w"> </span><span class="nc">NTnum</span><span class="p">(</span><span class="n">v</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="k">extends</span><span class="w"> </span><span class="nc">NonTerminal</span>
<span class="w">  </span>
<span class="w">  </span><span class="k">class</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">msg</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">)</span><span class="w"> </span><span class="k">extends</span><span class="w"> </span><span class="nc">RuntimeException</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">def</span><span class="w"> </span><span class="nf">this</span><span class="p">()</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">this</span><span class="p">(</span><span class="s">""</span><span class="p">)</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">def</span><span class="w"> </span><span class="nf">this</span><span class="p">(</span><span class="n">c</span><span class="p">:</span><span class="w"> </span><span class="nc">Char</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="bp">this</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">toString</span><span class="p">)</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="k">def</span><span class="w"> </span><span class="nf">parse</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">state0</span><span class="p">(</span><span class="n">in</span><span class="p">).</span><span class="n">_1</span><span class="p">.</span><span class="n">v</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 0 $accept: . expr $end</span>
<span class="cm">   *</span>
<span class="cm">   * '('  shift, and go to state 1</span>
<span class="cm">   * '0'  shift, and go to state 2</span>
<span class="cm">   * '1'  shift, and go to state 3</span>
<span class="cm">   *</span>
<span class="cm">   * expr  go to state 4</span>
<span class="cm">   * term  go to state 5</span>
<span class="cm">   * num   go to state 6</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state0</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="k">def</span><span class="w"> </span><span class="nf">loop</span><span class="p">(</span><span class="n">tuple</span><span class="p">:</span><span class="w"> </span><span class="nc">Result</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">val</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tuple</span>
<span class="w">        </span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">goto</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">          </span><span class="n">loop</span><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state4</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTterm</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state5</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTnum</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state6</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">          </span><span class="p">})</span>
<span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">      </span><span class="p">}</span>
<span class="w">      </span>
<span class="w">      </span><span class="n">loop</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'('</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state1</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'0'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state2</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'1'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state3</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 4 term: '(' . expr ')'</span>
<span class="cm">   *</span>
<span class="cm">   * '('  shift, and go to state 1</span>
<span class="cm">   * '0'  shift, and go to state 2</span>
<span class="cm">   * '1'  shift, and go to state 3</span>
<span class="cm">   *</span>
<span class="cm">   * expr  go to state 7</span>
<span class="cm">   * term  go to state 5</span>
<span class="cm">   * num   go to state 6</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state1</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">]):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="k">def</span><span class="w"> </span><span class="nf">loop</span><span class="p">(</span><span class="n">tuple</span><span class="p">:</span><span class="w"> </span><span class="nc">Result</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">val</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tuple</span>
<span class="w">        </span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">goto</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">          </span><span class="n">loop</span><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state7</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTterm</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state5</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTnum</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state6</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">          </span><span class="p">})</span>
<span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">      </span><span class="p">}</span>
<span class="w">      </span>
<span class="w">      </span><span class="n">loop</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'('</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state1</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'0'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state2</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'1'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state3</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 6 num: '0' .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 6 (num)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state2</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTnum</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 7 num: '1' .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 7 (num)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state3</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">])</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTnum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 0 $accept: expr . $end</span>
<span class="cm">   * 1 expr: expr . '+' term</span>
<span class="cm">   * 2     | expr . '-' term</span>
<span class="cm">   *</span>
<span class="cm">   * $end  shift, and go to state 8</span>
<span class="cm">   * '+'   shift, and go to state 9</span>
<span class="cm">   * '-'   shift, and go to state 10</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state4</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">decrement</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'+'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state9</span><span class="p">(</span><span class="n">tail</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'-'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state10</span><span class="p">(</span><span class="n">tail</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state8</span><span class="p">(</span><span class="n">arg1</span><span class="p">)</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 3 expr: term .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 3 (expr)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state5</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 5 term: num .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 5 (term)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state6</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTterm</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 1 expr: expr . '+' term</span>
<span class="cm">   * 2     | expr . '-' term</span>
<span class="cm">   * 4 term: '(' expr . ')'</span>
<span class="cm">   *</span>
<span class="cm">   * '+'  shift, and go to state 9</span>
<span class="cm">   * '-'  shift, and go to state 10</span>
<span class="cm">   * ')'  shift, and go to state 11</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state7</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="n">decrement</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'+'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state9</span><span class="p">(</span><span class="n">tail</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'-'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state10</span><span class="p">(</span><span class="n">tail</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">')'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state11</span><span class="p">(</span><span class="n">tail</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 0 $accept: expr $end .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  accept</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state8</span><span class="p">(</span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()),</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 1 expr: expr '+' . term</span>
<span class="cm">   *</span>
<span class="cm">   * '('  shift, and go to state 1</span>
<span class="cm">   * '0'  shift, and go to state 2</span>
<span class="cm">   * '1'  shift, and go to state 3</span>
<span class="cm">   *</span>
<span class="cm">   * term  go to state 12</span>
<span class="cm">   * num   go to state 6</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state9</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="k">def</span><span class="w"> </span><span class="nf">loop</span><span class="p">(</span><span class="n">tuple</span><span class="p">:</span><span class="w"> </span><span class="nc">Result</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">val</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tuple</span>
<span class="w">        </span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">goto</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">          </span><span class="n">loop</span><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTterm</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state12</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTnum</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state6</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="n">_</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">AssertionError</span>
<span class="w">          </span><span class="p">})</span>
<span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">      </span><span class="p">}</span>
<span class="w">      </span>
<span class="w">      </span><span class="n">loop</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'('</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state1</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'0'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state2</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'1'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state3</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 2 expr: expr '-' . term</span>
<span class="cm">   *</span>
<span class="cm">   * '('  shift, and go to state 1</span>
<span class="cm">   * '0'  shift, and go to state 2</span>
<span class="cm">   * '1'  shift, and go to state 3</span>
<span class="cm">   *</span>
<span class="cm">   * term  go to state 13</span>
<span class="cm">   * num   go to state 6</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state10</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="n">cur</span><span class="w"> </span><span class="o">#::</span><span class="w"> </span><span class="n">tail</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="k">def</span><span class="w"> </span><span class="nf">loop</span><span class="p">(</span><span class="n">tuple</span><span class="p">:</span><span class="w"> </span><span class="nc">Result</span><span class="p">):</span><span class="w"> </span><span class="nc">Result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">val</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tuple</span>
<span class="w">        </span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">goto</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">          </span><span class="n">loop</span><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTterm</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state13</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="nc">NTnum</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">)</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state6</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="w"> </span><span class="n">v</span><span class="p">)</span>
<span class="w">            </span><span class="k">case</span><span class="w"> </span><span class="n">_</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">AssertionError</span>
<span class="w">          </span><span class="p">})</span>
<span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">      </span><span class="p">}</span>
<span class="w">      </span>
<span class="w">      </span><span class="n">loop</span><span class="p">(</span><span class="n">cur</span><span class="w"> </span><span class="k">match</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'('</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state1</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'0'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state2</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="sc">'1'</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">state3</span><span class="p">(</span><span class="n">tail</span><span class="p">)</span>
<span class="w">        </span><span class="k">case</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="w">      </span><span class="p">})</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="nc">Stream</span><span class="p">()</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="nc">ParseException</span>
<span class="w">  </span><span class="p">}</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 4 term: '(' expr ')' .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 4 (term)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state11</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTterm</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">2</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 1 expr: expr '+' term .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 1 (expr)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state12</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">,</span><span class="w"> </span><span class="n">arg2</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">arg1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">arg2</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">2</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="cm">/*</span>
<span class="cm">   * 2 expr: expr '-' term .</span>
<span class="cm">   *</span>
<span class="cm">   * $default  reduce using rule 2 (expr)</span>
<span class="cm">   */</span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">state13</span><span class="p">(</span><span class="n">in</span><span class="p">:</span><span class="w"> </span><span class="nc">Stream</span><span class="p">[</span><span class="nc">Char</span><span class="p">],</span><span class="w"> </span><span class="n">arg1</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">,</span><span class="w"> </span><span class="n">arg2</span><span class="p">:</span><span class="w"> </span><span class="nc">Int</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="nc">NTexpr</span><span class="p">(</span><span class="n">arg1</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">arg2</span><span class="p">,</span><span class="w"> </span><span class="n">in</span><span class="p">),</span><span class="w"> </span><span class="mi">2</span><span class="p">)</span>
<span class="w">  </span>
<span class="w">  </span><span class="k">private</span><span class="w"> </span><span class="k">def</span><span class="w"> </span><span class="nf">decrement</span><span class="p">(</span><span class="n">tuple</span><span class="p">:</span><span class="w"> </span><span class="nc">Result</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kd">val</span><span class="w"> </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tuple</span>
<span class="w">    </span><span class="n">assert</span><span class="p">(</span><span class="n">goto</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span>
<span class="w">    </span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">goto</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
<p>The following is a <a href="/wiki/Prolog" title="Prolog">Prolog</a> implementation of a recursive ascent parser based on the above grammar:
</p>
<div class="mw-highlight mw-highlight-lang-prolog mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">state</span><span class="p">(</span><span class="nv">S</span><span class="p">),</span> <span class="p">[</span><span class="nv">S</span><span class="p">]</span> <span class="p">--&gt;</span> <span class="p">[</span><span class="nv">S</span><span class="p">].</span>
<span class="nf">state</span><span class="p">(</span><span class="nv">S0</span><span class="p">,</span> <span class="nv">S</span><span class="p">),</span> <span class="p">[</span><span class="nv">S</span><span class="p">]</span> <span class="p">--&gt;</span> <span class="p">[</span><span class="nv">S0</span><span class="p">].</span>


<span class="cm">/*</span>
<span class="cm">    0. S --&gt; E$</span>
<span class="cm">    1. E --&gt; E + T</span>
<span class="cm">    2. E --&gt; E - T</span>
<span class="cm">    3. E --&gt; T</span>
<span class="cm">    4. T --&gt; (E)</span>
<span class="cm">    5. T --&gt; N</span>
<span class="cm">    6. N --&gt; 0</span>
<span class="cm">    7. N --&gt; 1</span>
<span class="cm">*/</span>
<span class="nf">accept</span> <span class="o">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">([],</span> <span class="p">[</span><span class="nf">e</span><span class="p">(</span><span class="k">_</span><span class="p">)])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">t</span><span class="p">(</span><span class="nv">A1</span><span class="p">),</span> <span class="s s-Atom">'+'</span><span class="p">,</span> <span class="nf">e</span><span class="p">(</span><span class="nv">A0</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">e</span><span class="p">(</span><span class="nv">A0</span><span class="o">+</span><span class="nv">A1</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">t</span><span class="p">(</span><span class="nv">A1</span><span class="p">),</span> <span class="s s-Atom">'-'</span><span class="p">,</span> <span class="nf">e</span><span class="p">(</span><span class="nv">A0</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">e</span><span class="p">(</span><span class="nv">A0</span><span class="o">-</span><span class="nv">A1</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">t</span><span class="p">(</span><span class="nv">A</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">e</span><span class="p">(</span><span class="nv">A</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="s s-Atom">')'</span><span class="p">,</span> <span class="nf">e</span><span class="p">(</span><span class="nv">A</span><span class="p">),</span> <span class="s s-Atom">'('</span><span class="p">|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">t</span><span class="p">(</span><span class="nv">A</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">n</span><span class="p">(</span><span class="nv">A</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">t</span><span class="p">(</span><span class="nv">A</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="s s-Atom">'0'</span><span class="p">|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">n</span><span class="p">(</span><span class="mi">0</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">r</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="s s-Atom">'1'</span><span class="p">|</span><span class="nv">Ss</span><span class="p">]),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nf">n</span><span class="p">(</span><span class="mi">1</span><span class="p">)|</span><span class="nv">Ss</span><span class="p">])).</span>
<span class="nf">t</span><span class="p">(</span><span class="nv">T</span><span class="p">)</span> <span class="p">--&gt;</span> <span class="nf">state</span><span class="p">(</span><span class="nf">s</span><span class="p">([</span><span class="nv">T</span><span class="p">|</span><span class="nv">Ts</span><span class="p">],</span> <span class="nv">Ss</span><span class="p">),</span> <span class="nf">s</span><span class="p">(</span><span class="nv">Ts</span><span class="p">,</span> <span class="p">[</span><span class="nv">T</span><span class="p">|</span><span class="nv">Ss</span><span class="p">])).</span>


<span class="cm">/*</span>
<span class="cm">    S --&gt; .E$</span>
<span class="cm">    E --&gt; .E + T</span>
<span class="cm">    E --&gt; .E - T</span>
<span class="cm">    E --&gt; .T</span>
<span class="cm">    T --&gt; .(E)</span>
<span class="cm">    T --&gt; .N</span>
<span class="cm">    N --&gt; .0</span>
<span class="cm">    N --&gt; .1</span>
<span class="cm">*/</span>
<span class="nf">s0</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'('</span><span class="p">),</span> <span class="s s-Atom">s3</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s1</span><span class="p">.</span>
<span class="nf">s0</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'0'</span><span class="p">),</span> <span class="s s-Atom">s11</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s1</span><span class="p">.</span>
<span class="nf">s0</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'1'</span><span class="p">),</span> <span class="s s-Atom">s12</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s1</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    S --&gt; E.$</span>
<span class="cm">    E --&gt; E. + T</span>
<span class="cm">    E --&gt; E. - T</span>
<span class="cm">*/</span>
<span class="nf">s1</span> <span class="o">--&gt;</span> <span class="s s-Atom">accept</span><span class="p">.</span>
<span class="nf">s1</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'+'</span><span class="p">),</span> <span class="s s-Atom">s7</span><span class="p">,</span> <span class="s s-Atom">s1</span><span class="p">.</span>
<span class="nf">s1</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'-'</span><span class="p">),</span> <span class="s s-Atom">s8</span><span class="p">,</span> <span class="s s-Atom">s1</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    E --&gt; T.</span>
<span class="cm">*/</span>
<span class="nf">s2</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">3</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    T --&gt; (.E)</span>
<span class="cm">    E --&gt; .E + T</span>
<span class="cm">    E --&gt; .E - T</span>
<span class="cm">    E --&gt; .T</span>
<span class="cm">    T --&gt; .(E)</span>
<span class="cm">    T --&gt; .N</span>
<span class="cm">    N --&gt; .0</span>
<span class="cm">    N --&gt; .1</span>
<span class="cm">*/</span>
<span class="nf">s3</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'('</span><span class="p">),</span> <span class="s s-Atom">s3</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s4</span><span class="p">.</span>
<span class="nf">s3</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'0'</span><span class="p">),</span> <span class="s s-Atom">s11</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s4</span><span class="p">.</span>
<span class="nf">s3</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'1'</span><span class="p">),</span> <span class="s s-Atom">s12</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s2</span><span class="p">,</span> <span class="s s-Atom">s4</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    T --&gt; (E.)</span>
<span class="cm">    E --&gt; E .+ T</span>
<span class="cm">    E --&gt; E .- T</span>
<span class="cm">*/</span>
<span class="nf">s4</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">')'</span><span class="p">),</span> <span class="s s-Atom">s9</span><span class="p">.</span>
<span class="nf">s4</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'+'</span><span class="p">),</span> <span class="s s-Atom">s7</span><span class="p">,</span> <span class="s s-Atom">s4</span><span class="p">.</span>
<span class="nf">s4</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'-'</span><span class="p">),</span> <span class="s s-Atom">s8</span><span class="p">,</span> <span class="s s-Atom">s4</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    E --&gt; E + T.</span>
<span class="cm">*/</span>
<span class="nf">s5</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    E --&gt; E - T.</span>
<span class="cm">*/</span>
<span class="nf">s6</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    E --&gt; E + .T</span>
<span class="cm">    T --&gt; .(E)</span>
<span class="cm">    T --&gt; .N</span>
<span class="cm">    N --&gt; .0</span>
<span class="cm">    N --&gt; .1</span>
<span class="cm">*/</span>
<span class="nf">s7</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'('</span><span class="p">),</span> <span class="s s-Atom">s3</span><span class="p">,</span> <span class="s s-Atom">s5</span><span class="p">.</span>
<span class="nf">s7</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'0'</span><span class="p">),</span> <span class="s s-Atom">s11</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s5</span><span class="p">.</span>
<span class="nf">s7</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'1'</span><span class="p">),</span> <span class="s s-Atom">s12</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s5</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    E --&gt; E - .T</span>
<span class="cm">    T --&gt; .(E)</span>
<span class="cm">    T --&gt; .N</span>
<span class="cm">    N --&gt; .0</span>
<span class="cm">    N --&gt; .1</span>
<span class="cm">*/</span>
<span class="nf">s8</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'('</span><span class="p">),</span> <span class="s s-Atom">s3</span><span class="p">,</span> <span class="s s-Atom">s6</span><span class="p">.</span>
<span class="nf">s8</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'0'</span><span class="p">),</span> <span class="s s-Atom">s11</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s6</span><span class="p">.</span>
<span class="nf">s8</span> <span class="o">--&gt;</span> <span class="nf">t</span><span class="p">(</span><span class="s s-Atom">'1'</span><span class="p">),</span> <span class="s s-Atom">s12</span><span class="p">,</span> <span class="s s-Atom">s10</span><span class="p">,</span> <span class="s s-Atom">s6</span><span class="p">.</span>

<span class="cm">/*</span>
<span class="cm">    T --&gt; (E).</span>
<span class="cm">*/</span>
<span class="nf">s9</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">4</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    T --&gt; N.</span>
<span class="cm">*/</span>
<span class="nf">s10</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">5</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    N --&gt; '0'.</span>
<span class="cm">*/</span>
<span class="nf">s11</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">6</span><span class="p">).</span>

<span class="cm">/*</span>
<span class="cm">    N --&gt; '1'.</span>
<span class="cm">*/</span>
<span class="nf">s12</span> <span class="o">--&gt;</span> <span class="nf">r</span><span class="p">(</span><span class="mi">7</span><span class="p">).</span>

<span class="nf">parser</span><span class="p">(</span><span class="nv">Cs</span><span class="p">,</span> <span class="nv">T</span><span class="p">)</span> <span class="p">:-</span>
    <span class="nf">length</span><span class="p">(</span><span class="nv">Cs</span><span class="p">,</span> <span class="k">_</span><span class="p">),</span>
    <span class="nf">phrase</span><span class="p">(</span><span class="s s-Atom">s0</span><span class="p">,</span> <span class="p">[</span><span class="nf">s</span><span class="p">(</span><span class="nv">Cs</span><span class="p">,</span> <span class="p">[])],</span> <span class="p">[</span><span class="nf">s</span><span class="p">([],</span> <span class="p">[</span><span class="nf">e</span><span class="p">(</span><span class="nv">T</span><span class="p">)])]).</span>

<span class="c1">% state(S0, S), [S] --&gt; [S0, S].</span>
<span class="c1">%?- S0 = [s("(1+1)", [])|_], phrase(s0, S0, [S]), maplist(portray_clause, S0).</span>
</pre></div>
<div class="mw-heading mw-heading2"><h2 id="See_also">See also</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit&amp;section=3" title="Edit section: See also"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<ul><li><a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">Recursive descent parser</a></li></ul>
<div class="mw-heading mw-heading2"><h2 id="References">References</h2><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Recursive_ascent_parser&amp;action=edit&amp;section=4" title="Edit section: References"><span>edit</span></a><span class="mw-editsection-bracket">]</span></span></div>
<style data-mw-deduplicate="TemplateStyles:r1239543626">.mw-parser-output .reflist{margin-bottom:0.5em;list-style-type:decimal}@media screen{.mw-parser-output .reflist{font-size:90%}}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}</style><div class="reflist">
<div class="mw-references-wrap"><ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFThomas_J_Penello1986" class="citation journal cs1">Thomas J Penello (1986). <a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F13310.13326">"Very fast LR parsing"</a>. <i>ACM SIGPLAN Notices</i>. <b>21</b> (7): <span class="nowrap">145–</span>151. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F13310.13326">10.1145/13310.13326</a></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.atitle=Very+fast+LR+parsing&amp;rft.volume=21&amp;rft.issue=7&amp;rft.pages=145-151&amp;rft.date=1986&amp;rft_id=info%3Adoi%2F10.1145%2F13310.13326&amp;rft.au=Thomas+J+Penello&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1145%252F13310.13326&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFG.H._Roberts1988" class="citation journal cs1">G.H. Roberts (1988). <a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F47907.47909">"Recursive ascent: an LR analog to recursive descent"</a>. <i>ACM SIGPLAN Notices</i>. <b>23</b> (8): <span class="nowrap">23–</span>29. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F47907.47909">10.1145/47907.47909</a></span>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:12740771">12740771</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.atitle=Recursive+ascent%3A+an+LR+analog+to+recursive+descent&amp;rft.volume=23&amp;rft.issue=8&amp;rft.pages=23-29&amp;rft.date=1988&amp;rft_id=info%3Adoi%2F10.1145%2F47907.47909&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A12740771%23id-name%3DS2CID&amp;rft.au=G.H.+Roberts&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1145%252F47907.47909&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFLeermakers,_Augusteijn,_Kruseman_Aretz1992" class="citation journal cs1">Leermakers, Augusteijn, Kruseman Aretz (1992). <a rel="nofollow" class="external text" href="https://doi.org/10.1016%2F0304-3975%2892%2990128-3">"A functional LR parser"</a>. <i>Theoretical Computer Science</i>. <b>104</b> (2): <span class="nowrap">313–</span>323. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1016%2F0304-3975%2892%2990128-3">10.1016/0304-3975(92)90128-3</a></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Theoretical+Computer+Science&amp;rft.atitle=A+functional+LR+parser&amp;rft.volume=104&amp;rft.issue=2&amp;rft.pages=313-323&amp;rft.date=1992&amp;rft_id=info%3Adoi%2F10.1016%2F0304-3975%2892%2990128-3&amp;rft.au=Leermakers%2C+Augusteijn%2C+Kruseman+Aretz&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1016%252F0304-3975%252892%252990128-3&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span><span class="cs1-maint citation-comment"><code class="cs1-code">{{<a href="/wiki/Template:Cite_journal" title="Template:Cite journal">cite journal</a>}}</code>:  CS1 maint: multiple names: authors list (<a href="/wiki/Category:CS1_maint:_multiple_names:_authors_list" title="Category:CS1 maint: multiple names: authors list">link</a>)</span></span>
</li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFLarry_MorellDavid_Middleton2003" class="citation news cs1">Larry Morell &amp; David Middleton (2003). <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=770849">"Recursive-ascent parsing"</a>. <i>Journal of Computing Sciences in Colleges</i>. Vol.&nbsp;18, no.&nbsp;6. pp.&nbsp;<span class="nowrap">186–</span>201.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Computing+Sciences+in+Colleges&amp;rft.atitle=Recursive-ascent+parsing&amp;rft.volume=18&amp;rft.issue=6&amp;rft.pages=186-201&amp;rft.date=2003&amp;rft.au=Larry+Morell&amp;rft.au=David+Middleton&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D770849&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFSperber_and_Thiemann2000" class="citation journal cs1">Sperber and Thiemann (2000). <a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F349214.349219">"Generation of LR parsers by partial evaluation"</a>. <i>ACM Transactions on Programming Languages and Systems</i>. <b>22</b> (2): <span class="nowrap">224–</span>264. <a href="/wiki/Doi_(identifier)" class="mw-redirect" title="Doi (identifier)">doi</a>:<span class="id-lock-free" title="Freely accessible"><a rel="nofollow" class="external text" href="https://doi.org/10.1145%2F349214.349219">10.1145/349214.349219</a></span>. <a href="/wiki/S2CID_(identifier)" class="mw-redirect" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" class="external text" href="https://api.semanticscholar.org/CorpusID:14955687">14955687</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=ACM+Transactions+on+Programming+Languages+and+Systems&amp;rft.atitle=Generation+of+LR+parsers+by+partial+evaluation&amp;rft.volume=22&amp;rft.issue=2&amp;rft.pages=224-264&amp;rft.date=2000&amp;rft_id=info%3Adoi%2F10.1145%2F349214.349219&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A14955687%23id-name%3DS2CID&amp;rft.au=Sperber+and+Thiemann&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1145%252F349214.349219&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span></span>
</li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1238218222"><cite id="CITEREFJohn_BoylandDaniel_Spiewak2009" class="citation web cs1">John Boyland &amp; Daniel Spiewak (2009). <a rel="nofollow" class="external text" href="https://web.archive.org/web/20090718161230/http://www.cs.uwm.edu/~boyland/papers/scala-bison.pdf">"ScalaBison Recursive Ascent-Descent Parser Generator"</a> <span class="cs1-format">(PDF)</span>. Archived from <a rel="nofollow" class="external text" href="http://www.cs.uwm.edu/~boyland/papers/scala-bison.pdf">the original</a> <span class="cs1-format">(PDF)</span> on 2009-07-18.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=ScalaBison+Recursive+Ascent-Descent+Parser+Generator&amp;rft.date=2009&amp;rft.au=John+Boyland&amp;rft.au=Daniel+Spiewak&amp;rft_id=http%3A%2F%2Fwww.cs.uwm.edu%2F~boyland%2Fpapers%2Fscala-bison.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARecursive+ascent+parser" class="Z3988"></span></span>
</li>
</ol></div></div>
<div class="navbox-styles"><style data-mw-deduplicate="TemplateStyles:r1129693374">.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:": "}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:" · ";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:" (";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:")";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:" "counter(listitem)"\a0 "}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:" ("counter(listitem)"\a0 "}</style><style data-mw-deduplicate="TemplateStyles:r1236075235">.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}body.skin--responsive .mw-parser-output .navbox-image img{max-width:none!important}@media print{body.ns-0 .mw-parser-output .navbox{display:none!important}}</style></div><div role="navigation" class="navbox" aria-labelledby="Parsing_algorithms116" style="padding:3px"><table class="nowraplinks mw-collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1129693374"><style data-mw-deduplicate="TemplateStyles:r1239400231">.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}html.skin-theme-clientpref-night .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}}@media print{.mw-parser-output .navbar{display:none!important}}</style><div class="navbar plainlinks hlist navbar-mini"><ul><li class="nv-view"><a href="/wiki/Template:Parsers" title="Template:Parsers"><abbr title="View this template">v</abbr></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Parsers" title="Template talk:Parsers"><abbr title="Discuss this template">t</abbr></a></li><li class="nv-edit"><a href="/wiki/Special:EditPage/Template:Parsers" title="Special:EditPage/Template:Parsers"><abbr title="Edit this template">e</abbr></a></li></ul></div><div id="Parsing_algorithms116" style="font-size:114%;margin:0 4em"><a href="/wiki/Parsing" title="Parsing">Parsing algorithms</a></div></th></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Top-down_parsing" title="Top-down parsing">Top-down</a></th><td class="navbox-list-with-group navbox-list navbox-odd hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Earley_parser" title="Earley parser">Earley</a></li>
<li><a href="/wiki/LL_parser" title="LL parser">LL</a></li>
<li><a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">Recursive descent</a>
<ul><li><a href="/wiki/Tail_recursive_parser" title="Tail recursive parser">Tail recursive</a></li></ul></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%"><a href="/wiki/Bottom-up_parsing" title="Bottom-up parsing">Bottom-up</a></th><td class="navbox-list-with-group navbox-list navbox-even hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li>Precedence
<ul><li><a href="/wiki/Simple_precedence_parser" title="Simple precedence parser">Simple</a></li>
<li><a href="/wiki/Operator-precedence_parser" title="Operator-precedence parser">Operator</a>
<ul><li><a href="/wiki/Shunting_yard_algorithm" title="Shunting yard algorithm">Shunting-yard</a></li></ul></li></ul></li>
<li><a href="/wiki/LR_parser" title="LR parser">LR</a>
<ul><li><a href="/wiki/Simple_LR_parser" title="Simple LR parser">Simple</a></li>
<li><a href="/wiki/LALR_parser" title="LALR parser">Look-ahead</a></li>
<li><a href="/wiki/Canonical_LR_parser" title="Canonical LR parser">Canonical</a></li>
<li><a href="/wiki/GLR_parser" title="GLR parser">Generalized</a></li></ul></li>
<li><a href="/wiki/CYK_algorithm" title="CYK algorithm">CYK</a></li>
<li><a class="mw-selflink selflink">Recursive ascent</a></li>
<li><a href="/wiki/Shift-reduce_parser" title="Shift-reduce parser">Shift-reduce</a></li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%">Mixed, other</th><td class="navbox-list-with-group navbox-list navbox-odd hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Parser_combinator" title="Parser combinator">Combinator</a></li>
<li><a href="/wiki/Chart_parser" title="Chart parser">Chart</a>
<ul><li><a href="/wiki/Left_corner_parser" title="Left corner parser">Left corner</a></li></ul></li>
<li>Statistical</li></ul>
</div></td></tr><tr><th scope="row" class="navbox-group" style="width:1%">Related topics</th><td class="navbox-list-with-group navbox-list navbox-even hlist" style="width:100%;padding:0"><div style="padding:0 0.25em">
<ul><li><a href="/wiki/Parsing_expression_grammar" title="Parsing expression grammar">PEG</a></li>
<li><a href="/wiki/Definite_clause_grammar" title="Definite clause grammar">Definite clause grammar</a></li>
<li><a href="/wiki/Deterministic_parsing" title="Deterministic parsing">Deterministic parsing</a></li>
<li><a href="/wiki/Dynamic_programming" title="Dynamic programming">Dynamic programming</a></li>
<li><a href="/wiki/Memoization" title="Memoization">Memoization</a></li>
<li><a href="/wiki/Compiler-compiler" title="Compiler-compiler">Parser generator</a>
<ul><li><a href="/wiki/LALR_parser_generator" title="LALR parser generator">LALR</a></li></ul></li>
<li><a href="/wiki/Parse_tree" title="Parse tree">Parse tree</a></li>
<li><a href="/wiki/Abstract_syntax_tree" title="Abstract syntax tree">AST</a></li>
<li><a href="/wiki/Scannerless_parsing" title="Scannerless parsing">Scannerless parsing</a></li>
<li><a href="/wiki/History_of_compiler_construction" title="History of compiler construction">History of compiler construction</a></li>
<li><a href="/wiki/Comparison_of_parser_generators" title="Comparison of parser generators">Comparison of parser generators</a></li>
<li><a href="/wiki/Operator-precedence_grammar" title="Operator-precedence grammar">Operator-precedence grammar</a></li></ul>
</div></td></tr></tbody></table></div>
<!-- 
NewPP limit report
Parsed by mw‐web.eqiad.main‐5f99d748c‐dckct
Cached time: 20250728170250
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.478 seconds
Real time usage: 0.935 seconds
Preprocessor visited node count: 493/1000000
Revision size: 14961/2097152 bytes
Post‐expand include size: 23695/2097152 bytes
Template argument size: 87/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 101618/5000000 bytes
Lua time usage: 0.272/10.000 seconds
Lua memory usage: 3929767/52428800 bytes
Number of Wikibase entities loaded: 0/500
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  795.763      1 -total
 18.45%  146.837      1 Template:Cite_book
 15.47%  123.086      1 Template:Parsers
 15.13%  120.406      1 Template:Navbox
 12.96%  103.133      1 Template:Reflist
  5.57%   44.286      4 Template:Cite_journal
  1.57%   12.491      1 Template:Cite_news
  1.47%   11.714      1 Template:Cite_web
  0.30%    2.411      1 Template:Main_other
-->

<!-- Saved in parser cache with key enwiki:pcache:18344532:|#|:idhash:canonical and timestamp 20250728170250 and revision id 1264674624. Rendering was triggered because: page-view
 -->
</div><!--esi <esi:include src="/esitest-fa8a495983347898/content" /> --><noscript><img src="https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&amp;usesul3=1" alt="" width="1" height="1" style="border: none; position: absolute;"></noscript>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Recursive_ascent_parser&amp;oldid=1264674624">https://en.wikipedia.org/w/index.php?title=Recursive_ascent_parser&amp;oldid=1264674624</a>"</div></div>
					<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Category</a>: <ul><li><a href="/wiki/Category:Parsing_algorithms" title="Category:Parsing algorithms">Parsing algorithms</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden category: <ul><li><a href="/wiki/Category:CS1_maint:_multiple_names:_authors_list" title="Category:CS1 maint: multiple names: authors list">CS1 maint: multiple names: authors list</a></li></ul></div></div>
				</div>
			</main>
			
		</div>
		<div class="mw-footer-container">
			
<footer id="footer" class="mw-footer" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 22 December 2024, at 23:04<span class="anonymous-show">&#160;(UTC)</span>.</li>
	<li id="footer-info-copyright">Text is available under the <a href="/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License" title="Wikipedia:Text of the Creative Commons Attribution-ShareAlike 4.0 International License">Creative Commons Attribution-ShareAlike 4.0 License</a>;
additional terms may apply. By using this site, you agree to the <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use" class="extiw" title="foundation:Special:MyLanguage/Policy:Terms of Use">Terms of Use</a> and <a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy" class="extiw" title="foundation:Special:MyLanguage/Policy:Privacy policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a rel="nofollow" class="external text" href="https://wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="/wiki/Wikipedia:About">About Wikipedia</a></li>
	<li id="footer-places-disclaimers"><a href="/wiki/Wikipedia:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
	<li id="footer-places-wm-codeofconduct"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct">Code of Conduct</a></li>
	<li id="footer-places-developers"><a href="https://developer.wikimedia.org">Developers</a></li>
	<li id="footer-places-statslink"><a href="https://stats.wikimedia.org/#/en.wikipedia.org">Statistics</a></li>
	<li id="footer-places-cookiestatement"><a href="https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement">Cookie statement</a></li>
	<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Recursive_ascent_parser&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-copyrightico"><a href="https://www.wikimedia.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/static/images/footer/wikimedia-button.svg" width="84" height="29"><img src="/static/images/footer/wikimedia.svg" width="25" height="25" alt="Wikimedia Foundation" lang="en" loading="lazy"></picture></a></li>
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/" class="cdx-button cdx-button--fake-button cdx-button--size-large cdx-button--fake-button--enabled"><picture><source media="(min-width: 500px)" srcset="/w/resources/assets/poweredby_mediawiki.svg" width="88" height="31"><img src="/w/resources/assets/mediawiki_compact.svg" alt="Powered by MediaWiki" lang="en" width="25" height="25" loading="lazy"></picture></a></li>
</ul>

</footer>

		</div>
	</div> 
</div> 
<div class="vector-header-container vector-sticky-header-container no-font-mode-scale">
	<div id="vector-sticky-header" class="vector-sticky-header">
		<div class="vector-sticky-header-start">
			<div class="vector-sticky-header-icon-start vector-button-flush-left vector-button-flush-right" aria-hidden="true">
				<button class="cdx-button cdx-button--weight-quiet cdx-button--icon-only vector-sticky-header-search-toggle" tabindex="-1" data-event-name="ui.vector-sticky-search-form.icon"><span class="vector-icon mw-ui-icon-search mw-ui-icon-wikimedia-search"></span>

<span>Search</span>
			</button>
		</div>
			
		<div role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box">
			<div class="vector-typeahead-search-container">
				<div class="cdx-typeahead-search cdx-typeahead-search--show-thumbnail">
					<form action="/w/index.php" id="vector-sticky-search-form" class="cdx-search-input cdx-search-input--has-end-button">
						<div  class="cdx-search-input__input-wrapper"  data-search-loc="header-moved">
							<div class="cdx-text-input cdx-text-input--has-start-icon">
								<input
									class="cdx-text-input__input mw-searchInput" autocomplete="off"
									
									type="search" name="search" placeholder="Search Wikipedia">
								<span class="cdx-text-input__icon cdx-text-input__start-icon"></span>
							</div>
							<input type="hidden" name="title" value="Special:Search">
						</div>
						<button class="cdx-button cdx-search-input__end-button">Search</button>
					</form>
				</div>
			</div>
		</div>
		<div class="vector-sticky-header-context-bar">
				<nav aria-label="Contents" class="vector-toc-landmark">
						
					<div id="vector-sticky-header-toc" class="vector-dropdown mw-portlet mw-portlet-sticky-header-toc vector-sticky-header-toc vector-button-flush-left"  >
						<input type="checkbox" id="vector-sticky-header-toc-checkbox" role="button" aria-haspopup="true" data-event-name="ui.dropdown-vector-sticky-header-toc" class="vector-dropdown-checkbox "  aria-label="Toggle the table of contents"  >
						<label id="vector-sticky-header-toc-label" for="vector-sticky-header-toc-checkbox" class="vector-dropdown-label cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only " aria-hidden="true"  ><span class="vector-icon mw-ui-icon-listBullet mw-ui-icon-wikimedia-listBullet"></span>

<span class="vector-dropdown-label-text">Toggle the table of contents</span>
						</label>
						<div class="vector-dropdown-content">
					
						<div id="vector-sticky-header-toc-unpinned-container" class="vector-unpinned-container">
						</div>
					
						</div>
					</div>
			</nav>
				<div class="vector-sticky-header-context-bar-primary" aria-hidden="true" ><span class="mw-page-title-main">Recursive ascent parser</span></div>
			</div>
		</div>
		<div class="vector-sticky-header-end" aria-hidden="true">
			<div class="vector-sticky-header-icons">
				<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-talk-sticky-header" tabindex="-1" data-event-name="talk-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbles mw-ui-icon-wikimedia-speechBubbles"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-subject-sticky-header" tabindex="-1" data-event-name="subject-sticky-header"><span class="vector-icon mw-ui-icon-article mw-ui-icon-wikimedia-article"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-history-sticky-header" tabindex="-1" data-event-name="history-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-history mw-ui-icon-wikimedia-wikimedia-history"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only mw-watchlink" id="ca-watchstar-sticky-header" tabindex="-1" data-event-name="watch-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-star mw-ui-icon-wikimedia-wikimedia-star"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-edit-sticky-header" tabindex="-1" data-event-name="wikitext-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-wikiText mw-ui-icon-wikimedia-wikimedia-wikiText"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-ve-edit-sticky-header" tabindex="-1" data-event-name="ve-edit-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-edit mw-ui-icon-wikimedia-wikimedia-edit"></span>

<span></span>
			</a>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--icon-only" id="ca-viewsource-sticky-header" tabindex="-1" data-event-name="ve-edit-protected-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-editLock mw-ui-icon-wikimedia-wikimedia-editLock"></span>

<span></span>
			</a>
		</div>
			<div class="vector-sticky-header-buttons">
				<button class="cdx-button cdx-button--weight-quiet mw-interlanguage-selector" id="p-lang-btn-sticky-header" tabindex="-1" data-event-name="ui.dropdown-p-lang-btn-sticky-header"><span class="vector-icon mw-ui-icon-wikimedia-language mw-ui-icon-wikimedia-wikimedia-language"></span>

<span>Add languages</span>
			</button>
			<a href="#" class="cdx-button cdx-button--fake-button cdx-button--fake-button--enabled cdx-button--weight-quiet cdx-button--action-progressive" id="ca-addsection-sticky-header" tabindex="-1" data-event-name="addsection-sticky-header"><span class="vector-icon mw-ui-icon-speechBubbleAdd-progressive mw-ui-icon-wikimedia-speechBubbleAdd-progressive"></span>

<span>Add topic</span>
			</a>
		</div>
			<div class="vector-sticky-header-icon-end">
				<div class="vector-user-links">
				</div>
			</div>
		</div>
	</div>
</div>
<div class="mw-portlet mw-portlet-dock-bottom emptyPortlet" id="p-dock-bottom">
	<ul>
		
	</ul>
</div>
<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgHostname":"mw-web.eqiad.main-78f6484c-k9ptv","wgBackendResponseTime":165,"wgPageParseReport":{"limitreport":{"cputime":"0.478","walltime":"0.935","ppvisitednodes":{"value":493,"limit":1000000},"revisionsize":{"value":14961,"limit":2097152},"postexpandincludesize":{"value":23695,"limit":2097152},"templateargumentsize":{"value":87,"limit":2097152},"expansiondepth":{"value":8,"limit":100},"expensivefunctioncount":{"value":3,"limit":500},"unstrip-depth":{"value":1,"limit":20},"unstrip-size":{"value":101618,"limit":5000000},"entityaccesscount":{"value":0,"limit":500},"timingprofile":["100.00%  795.763      1 -total"," 18.45%  146.837      1 Template:Cite_book"," 15.47%  123.086      1 Template:Parsers"," 15.13%  120.406      1 Template:Navbox"," 12.96%  103.133      1 Template:Reflist","  5.57%   44.286      4 Template:Cite_journal","  1.57%   12.491      1 Template:Cite_news","  1.47%   11.714      1 Template:Cite_web","  0.30%    2.411      1 Template:Main_other"]},"scribunto":{"limitreport-timeusage":{"value":"0.272","limit":"10.000"},"limitreport-memusage":{"value":3929767,"limit":52428800}},"cachereport":{"origin":"mw-web.eqiad.main-5f99d748c-dckct","timestamp":"20250728170250","ttl":2592000,"transientcontent":false}}});});</script>
<script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"Article","name":"Recursive ascent parser","url":"https:\/\/en.wikipedia.org\/wiki\/Recursive_ascent_parser","sameAs":"http:\/\/www.wikidata.org\/entity\/Q7303337","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q7303337","author":{"@type":"Organization","name":"Contributors to Wikimedia projects"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2008-07-08T14:03:23Z","dateModified":"2024-12-22T23:04:04Z"}</script>
</body>
</html>